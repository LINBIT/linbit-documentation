stages:
  - build
  - preview
  - deploy

build:
  stage: build
  image:
    name: $CI_REGISTRY/linbit/linbit-documentation
    entrypoint: [""]
  rules:
    - if: $CI_MERGE_REQUEST_ID
  script:
    - make UG9-html-finalize
  artifacts:
    paths:
      - UG9/en/output-html-finalize/*.zip

lint:
  stage: build
  image:
    name: $LINBIT_DOCKER_REGISTRY/lb-vale:latest
    entrypoint: [""]
  rules:
    - if: $CI_MERGE_REQUEST_ID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'
  script:
    - apk add --no-cache git
    - git fetch
    # use `tr` to sanitize variable in case there are multiple `.adoc` files to lint
    - ADOCFILES="$(git diff-tree --no-commit-id --name-only -r remotes/origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} ${CI_COMMIT_SHA} '*.adoc' | tr '\n' ' ')"
    - |
      if [ -z "$ADOCFILES" ]; then
        echo "No .adoc files in this MR"
        echo -e '[\n  {\n    "description": "Merge request has no .adoc files",\n    "check_name": "ADOCFILES-variable-is-empty",\n    "fingerprint": "0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a",\n    "severity": "info",\n    "location": {\n      "path": "na",\n      "lines": {\n        "begin": 0\n      }\n    }\n  }\n]' > vale.json
        cp vale.json vale-climate.json
      else
        /bin/vale $ADOCFILES --config=/vale_app/.vale.ini --no-exit --output=JSON | tee vale.json
        /bin/vale2climate vale.json >> vale-climate.json
      fi
  artifacts:
    paths:
      - vale.json
    when: always
    reports:
      codequality:
        - vale-climate.json

preview:
  stage: preview
  image: $LINBIT_DOCKER_REGISTRY/ug-preview:latest
  rules:
    - if: $CI_MERGE_REQUEST_ID
  environment:
    name: preview/$CI_COMMIT_REF_SLUG
    url: $LINBIT_REGISTRY_URL/repository/pages/$CI_COMMIT_REF_SLUG/
  script:
    - zips=$(realpath ./UG9/en/output-html-finalize/*.zip)
    - mkdir /index
    - cd /build
    - |
      for zip in $zips; do
        prefix=$(basename $zip .zip)
        php linbit-drbd.php $zip /out
        ./upload.sh $CI_COMMIT_REF_SLUG /out $prefix
        echo "<a href='./$prefix/'><h2>$prefix</h2></a>" >> /index/index.html
      done
      ./upload.sh $CI_COMMIT_REF_SLUG /index .
  dependencies:
    - build

deploy:
  stage: deploy
  image:
    name: $CI_REGISTRY/linbit/linbit-documentation
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  before_script:
    - echo "DEPLOY"
  script:
    - mkdir -p ~/src && cp -r . ~/src && cd ~/src
    - cp /linbit-documentation/GNUmakefile .
    - cp -r /fonts .
    - cp -r /themes .
    - ln -s /fonts ./linbit-fonts
    - make trusthosts all-clean DOCKER=no SFTPUSER=$SFTPUSERSTAGING STAGING=yes
    - make trusthosts all DOCKER=no SFTPUSER=$SFTPUSER SKIPGENERATE=yes
    - make g-upload-ug-pdfs
