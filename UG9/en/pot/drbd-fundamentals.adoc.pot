# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: documentation@linbit.com\n"
"POT-Creation-Date: 2023-05-19 18:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#.  At the `drbdsetup` level, a connection is addressed by its two replication
#.  endpoints identified by address family (optional), address (required), and
#.  port (optional).
#. type: Title ===
#: UG9/en/drbd-administration-manual.adoc:346 UG9/en/drbd-fundamentals.adoc:138
#, no-wrap
msgid "Resource Roles"
msgstr ""

#. type: Title ==
#: UG9/en/drbd-fundamentals.adoc:2
#, no-wrap
msgid "DRBD Fundamentals"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:8
msgid ""
"DRBD is a software-based, shared-nothing, replicated storage solution "
"mirroring the content of block devices (hard disks, partitions, logical "
"volumes, and so on) between hosts."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:10
msgid "DRBD mirrors data"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:13
#, no-wrap
msgid ""
"*in real time*. Replication occurs continuously while applications\n"
"modify the data on the device.\n"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:16
#, no-wrap
msgid ""
"*transparently*. Applications need not be aware that the data is stored on\n"
"multiple hosts.\n"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:22
#, no-wrap
msgid ""
"*synchronously* or *asynchronously*. With synchronous mirroring, applications\n"
"are notified of write completions after the writes have been carried out on\n"
"all (connected) hosts. With asynchronous mirroring, applications are notified of write\n"
"completions when the writes have completed locally, which usually is before\n"
"they have propagated to the other hosts.\n"
msgstr ""

#. type: Title ===
#: UG9/en/drbd-fundamentals.adoc:25
#, no-wrap
msgid "Kernel Module"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:33
msgid ""
"DRBD's core functionality is implemented by way of a Linux kernel module. "
"Specifically, DRBD constitutes a driver for a virtual block device, so DRBD "
"is situated right near the bottom of a system's I/O stack. Because of this, "
"DRBD is extremely flexible and versatile, which makes it a replication "
"solution suitable for adding high availability to just about any application."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:40
msgid ""
"DRBD is, by definition and as mandated by the Linux kernel architecture, "
"agnostic of the layers above it. Therefore, it is impossible for DRBD to "
"miraculously add features to upper layers that these do not possess. For "
"example, DRBD cannot auto-detect file system corruption or add active-active "
"clustering capability to file systems like ext3 or XFS."
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:42
#, no-wrap
msgid "DRBD's position within the Linux I/O stack"
msgstr ""

#. type: Target for macro image
#: UG9/en/drbd-fundamentals.adoc:43
#, no-wrap
msgid "images/drbd-in-kernel.svg"
msgstr ""

#. type: Title ===
#: UG9/en/drbd-fundamentals.adoc:46
#, no-wrap
msgid "User Space Administration Tools"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:51
msgid ""
"DRBD includes a set of administration tools which communicate with the "
"kernel module to configure and administer DRBD resources. From top-level to "
"bottom-most these are:"
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:52
#, no-wrap
msgid "`drbdadm`"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:58
msgid ""
"The high-level administration tool of the DRBD-utils program suite. Obtains "
"all DRBD configuration parameters from the configuration file `/etc/drbd."
"conf` and acts as a front-end for `drbdsetup` and `drbdmeta`.  `drbdadm` has "
"a _dry-run_ mode, invoked with the `-d` option, that shows which `drbdsetup` "
"and `drbdmeta` calls `drbdadm` would issue without actually calling those "
"commands."
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:59
#, no-wrap
msgid "`drbdsetup`"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:64
msgid ""
"Configures the DRBD module that was loaded into the kernel. All parameters "
"to `drbdsetup` must be passed on the command line. The separation between "
"`drbdadm` and `drbdsetup` allows for maximum flexibility. Most users will "
"rarely need to use `drbdsetup` directly, if at all."
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:65
#, no-wrap
msgid "`drbdmeta`"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:68
msgid ""
"Allows to create, dump, restore, and modify DRBD meta data structures. Like "
"`drbdsetup`, most users will only rarely need to use `drbdmeta` directly."
msgstr ""

#. type: Title ===
#: UG9/en/drbd-fundamentals.adoc:70
#, no-wrap
msgid "Resources"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:74
msgid ""
"In DRBD, _resource_ is the collective term that refers to all aspects of a "
"particular replicated data set. These include:"
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:75
#, no-wrap
msgid "Resource name"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:78
msgid ""
"This can be any arbitrary, US-ASCII name not containing white space by which "
"the resource is referred to."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:82
msgid ""
"Beginning with DRBD 9.2.0, there is a stricter naming convention for "
"resources. DRBD 9.2.x accepts only alphanumeric, `.`, `+`, `_`, and `-` "
"characters in resource names (regular expression: `[0-9A-Za-z.+_-]*`). If "
"you depend on the old behavior, it can be brought back by disabling strict "
"name checking: `echo 0 > /sys/module/drbd/parameters/strict_names`."
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:83
#, no-wrap
msgid "Volumes"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:90
msgid ""
"Any resource is a replication group consisting of one or more _volumes_ that "
"share a common replication stream. DRBD ensures write fidelity across all "
"volumes in the resource. Volumes are numbered starting with `0`, and there "
"may be up to 65,535 volumes in one resource. A volume contains the "
"replicated data set, and a set of metadata for DRBD internal use."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:93
msgid ""
"At the `drbdadm` level, a volume within a resource can be addressed by the "
"resource name and volume number as `__resource__/__volume__`."
msgstr ""

#.  At the `drbdsetup` level, a volume is addressed by its device minor number.
#.  At the `drbdmeta` level, a volume is addressed by the name of the underlying
#.  device.
#.  FIXME: Users don't care which major device number is assigned to DRBD.
#.  Likewise, they don't care about minor device numbers if they don't have to.
#.  We refer to device as /dev/drbdX almost everywhere, so do we have to mention
#.  minors here at all?
#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:103
#, no-wrap
msgid "DRBD device"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:111
msgid ""
"This is a virtual block device managed by DRBD. It has a device major number "
"of 147, and its minor numbers are numbered from 0 onwards, as is customary. "
"Each DRBD device corresponds to a volume in a resource. The associated block "
"device is usually named `/dev/drbd__X__`, where `_X_` is the device minor "
"number. `udev` will typically also create symlinks containing the resource "
"name and volume number, as in `/dev/drbd/by-res/__resource__/__vol-nr__`."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:116
msgid ""
"Depending on how you installed DRBD, you might need to install the `drbd-"
"udev` package on RPM based systems to install the DRBD udev rules. If your "
"DRBD resources were created before the DRBD udev rules were installed, you "
"will need to manually trigger the udev rules to generate the udev symlinks "
"for DRBD resources, by using the `udevadm trigger` command."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:121
msgid ""
"Very early DRBD versions hijacked NBD's device major number 43.  This is "
"long obsolete; 147 is the https://www.kernel.org/doc/html/latest/admin-guide/"
"devices.html[allocated] DRBD device major."
msgstr ""

#. type: Block title
#: UG9/en/drbd-fundamentals.adoc:122
#, no-wrap
msgid "Connection"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:128
msgid ""
"A _connection_ is a communication link between two hosts that share a "
"replicated data set. With DRBD 9 each resource can be defined on multiple "
"hosts; with the current versions this requires a full-meshed connection "
"setup between these hosts (that is, each host connected to every other for "
"that resource)."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:132
msgid ""
"At the `drbdadm` level, a connection is addressed by the resource and the "
"connection name (the latter defaulting to the peer hostname), like "
"`__resource__:__connection__`."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:142
msgid ""
"indexterm:[Primary]indexterm:[Secondary]indexterm:[role]In DRBD, every <<s-"
"resources,resource>> has a role, which may be _Primary_ or _Secondary_."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:150
msgid ""
"The choice of terms here is not arbitrary. These roles were deliberately not "
"named \"Active\" and \"Passive\" by DRBD's creators. _Primary_ compared to "
"_Secondary_ refers to a concept related to availability of *storage*, "
"whereas _active_ compared to _passive_ refers to the availability of an "
"*application*. It is usually the case in a high-availability environment "
"that the _primary_ node is also the _active_ one, but this is by no means "
"necessary."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:154
msgid ""
"A DRBD device in the _primary_ role can be used unrestrictedly for read and "
"write operations. It may be used for creating and mounting file systems, raw "
"or direct I/O to the block device, and so on."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:161
msgid ""
"A DRBD device in the _secondary_ role receives all updates from the peer "
"node's device, but otherwise disallows access completely. It can not be used "
"by applications, neither for read nor write access. The reason for "
"disallowing even read-only access to the device is the necessity to maintain "
"cache coherency, which would be impossible if a secondary resource were made "
"accessible in any way."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:167
msgid ""
"The resource's role can, of course, be changed, either by <<s-switch-"
"resource-roles,manual intervention>>, by way of some automated algorithm by "
"a cluster management application, or <<s-automatic-promotion,"
"automatically>>. Changing the resource role from secondary to primary is "
"referred to as _promotion_, whereas the reverse operation is termed "
"_demotion_."
msgstr ""

#. type: Title ===
#: UG9/en/drbd-fundamentals.adoc:169
#, no-wrap
msgid "Hardware and Environment Requirements"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:174
msgid ""
"DRBD's hardware and environment requirements and limitations are mentioned "
"below. DRBD can work with just a few KiBs of physical storage and memory, or "
"it can scale up to work with several TiBs of storage and many MiBs of memory."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:175
#, no-wrap
msgid "Maximum Device Size"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:178
msgid "DRBD's maximum device size is 1PiB (1024TiB)."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:179
#, no-wrap
msgid "Required Memory"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:186
msgid ""
"DRBD needs about 32MiB of RAM per 1TiB of storagefootnote:[To calculate "
"DRBD's exact or approximate memory requirements for your environment, refer "
"to the formulas in <<s-meta-data-size,this section>> of the DRBD 9 User's "
"Guide]. So, for DRBD's maximum amount of storage (1PiB), you would need "
"32GiB of RAM for the DRBD bitmap alone, even before operating system, "
"userspace, and buffer cache considerations."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:187
#, no-wrap
msgid "CPU Requirements"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:190
msgid "DRBD 9 is tested to build for the following CPU architectures:"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:192
msgid "amd64"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:193
msgid "arm64"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:194
msgid "ppc64le"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:195
msgid "s390x"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:198
msgid ""
"Recent versions of DRBD 9 are only tested to build on 64 bit CPU "
"architecture. Building DRBD on 32 bit CPU architecture is unsupported and "
"may or may not work."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:199
#, no-wrap
msgid "Minimum Linux Kernel Version"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:203
msgid ""
"The minimum Linux kernel version supported in DRBD 9.0 is 2.6.32. Starting "
"with DRBD 9.1, the minimum Linux kernel version supported is 3.10."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:204
#, no-wrap
msgid "Maximum Number of DRBD Volumes on a Node"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:208
msgid ""
"Due to the 20 bit constraint on minor numbers, the maximum number of DRBD "
"volumes that you can have on a node is 1048576."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:209
#, no-wrap
msgid "Maximum Number of Volumes per DRBD Resource"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:212
msgid ""
"The maximum number of volumes per DRBD resource is 65535, numbered 0 through "
"65534."
msgstr ""

#. type: Title ====
#: UG9/en/drbd-fundamentals.adoc:213
#, no-wrap
msgid "Maximum Number of Nodes Accessing a Resource"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:217
msgid ""
"There is a limit of 32 nodes that can access the same DRBD resource "
"concurrently. In practice, clusters of more than five nodes are not "
"recommended."
msgstr ""

#. type: Title ===
#: UG9/en/drbd-fundamentals.adoc:219 UG9/en/linstor-administration.adoc:137
#, no-wrap
msgid "FIPS Compliance"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:222 UG9/en/linstor-administration.adoc:140
msgid ""
"\"This standard shall be used in designing and implementing cryptographic "
"modules...\""
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:223 UG9/en/linstor-administration.adoc:141
msgid ""
"https://csrc.nist.gov/publications/detail/fips/140/3/final[NIST's _FIPS "
"140-3_ publication]"
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:231
msgid ""
"DRBD does not use nor implement any cryptographic modules in its code base "
"and is therefore outside the scope of FIPS compliance. If the data that you "
"are replicating has requirements that need the use of cryptographic modules, "
"for example, encryption, this is implemented in a different block layer, and "
"not by DRBD itself. Linux Unified Key Setup (LUKS) is an example of such an "
"implementation. You can refer to details in the https://linbit.com/drbd-user-"
"guide/linstor-guide-1_0-en/#s-linstor-without-drbd[_LINSTOR User's Guide_] "
"about using LINSTOR as a way that you can layer LUKS below the DRBD layer."
msgstr ""

#. type: Plain text
#: UG9/en/drbd-fundamentals.adoc:235
msgid ""
"If you are using DRBD outside of LINSTOR, it is possible to layer LUKS above "
"the DRBD layer. However, this implementation is not recommended because DRBD "
"would no longer be able to disklessly attach or auto-promote resources."
msgstr ""
