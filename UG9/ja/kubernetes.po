# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-07-27 17:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#, no-wrap
msgid "LINSTOR Volumes in Kubernetes"
msgstr "Kubernetes で LINSTOR ボリューム"

#. type: Plain text
msgid ""
"indexterm:[Kubernetes]This chapter describes the usage of LINSTOR in "
"Kubernetes as managed by the operator and with volumes provisioned using the "
"https://github.com/LINBIT/linstor-csi[LINSTOR CSI plugin]."
msgstr ""
"indexterm:[Kubernetes] この章では、オペレーターによって管理され、 https://"
"github.com/LINBIT/linstor-csi[LINSTOR CSI plugin] を使用してプロビジョニング"
"された KubernetesのLINSTORボリュームについて説明します。"

#. type: Plain text
msgid ""
"This Chapter goes into great detail regarding all the install time options "
"and various configurations possible with LINSTOR and Kubernetes. For those "
"more interested in a \"quick-start\" for testing, or those looking for some "
"examples for reference. We have some complete <<Helm Install Examples>> of a "
"few common uses near the end of the chapter."
msgstr ""
"この章では、LINSTOR と Kubernetes で可能なすべてのインストールオプションとさ"
"まざまな構成について詳しく説明します。テスト目的で「クイックスタート」に興味"
"がある方、または参照用の例を探している方は、この章の終わり近くに <Helm インス"
"トール例>> を参照ください。"

#. type: Title ===
#, no-wrap
msgid "Kubernetes Overview"
msgstr "Kubernetesの概要"

#. type: Plain text
msgid ""
"_Kubernetes_ is a container orchestrator. Kubernetes defines the behavior of "
"containers and related services via declarative specifications. In this "
"guide, we'll focus on using `kubectl` to manipulate `.yaml` files that "
"define the specifications of Kubernetes objects."
msgstr ""
"_Kubernetes_ はコンテナーオーケストレーターです。 Kubernetes は、宣言した仕様"
"に基づいてコンテナと関連サービスの動作を定義します。このガイドでは、"
"Kubernetes オブジェクトの仕様を定義する `.yaml` ファイルを介して `kubectl` を"
"使用することに焦点を当てます。"

#. type: Title ===
#, no-wrap
msgid "Deploying LINSTOR on Kubernetes"
msgstr "Kubernetes への LINSTOR のデプロイ"

#. type: Title ====
#, no-wrap
msgid "Deploying with the LINSTOR Operator"
msgstr "LINSTORオペレーターを使用したデプロイ"

#. type: Plain text
msgid ""
"LINBIT provides a LINSTOR operator to commercial support customers.  The "
"operator eases deployment of LINSTOR on Kubernetes by installing DRBD, "
"managing Satellite and Controller pods, and other related functions."
msgstr ""
"LINBIT は LINSTOR オペレーターを商用サポート顧客に提供します。オペレーター"
"は、DRBD のインストール、サテライトポッドとコントローラポッドの管理、およびそ"
"の他の関連機能により、LINSTOR を Kubernetes に簡単にデプロイできます。"

#. type: Plain text
msgid "The operator itself is installed using a Helm v3 chart as follows:"
msgstr ""
"オペレーター自体は、次のように Helm v3 チャートを使用してインストールされま"
"す。"

#. type: Plain text
msgid "Create a kubernetes secret containing your my.linbit.com credentials:"
msgstr "my.linbit.com 認証情報を含む kubernetes シークレットを作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"
msgstr "kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"

#. type: Plain text
msgid ""
"The name of this secret must match the one specified in the Helm values, by "
"default `drbdiocred`."
msgstr ""
"このシークレットの名前は、Helm で指定されたものと一致する必要があります。デ"
"フォルトは `drbdiocred` です。"

#. type: Plain text
msgid ""
"Configure storage for the LINSTOR etcd instance. There are various options "
"for configuring the etcd instance for LINSTOR:"
msgstr ""
"LINSTOR etcd インスタンスのストレージを構成します。LINSTOR の etcd インスタン"
"スを構成するためにいくつかオプションがあります。"

#. type: Plain text
msgid "Use an existing storage provisioner with a default `StorageClass`."
msgstr ""
"デフォルトの `StorageClass` で既存のストレージプロビジョナーを使用する。"

#. type: Plain text
msgid "<<s-kubernetes-etcd-hostpath-persistence,Use `hostPath` volumes>>."
msgstr ""
"<<s-kubernetes-etcd-hostpath-persistence, `hostPath` ボリューム>> を使用す"
"る。"

#. type: Plain text
msgid ""
"Disable persistence for basic testing. This can be done by adding `--set "
"etcd.persistentVolume.enabled=false` to the `helm install` command below."
msgstr ""
"基本的なテストの永続化を無効にする。これは以下の `helm install` コマンドに "
"`--set etcd.persistentVolume.enabled=false` を追加することで実行できます。"

#. type: Plain text
msgid ""
"Read <<s-kubernetes-storage, the storage guide>> and configure a basic "
"storage setup for LINSTOR"
msgstr ""
"<<s-kubernetes-storage, ストレージの構成>> を確認し、LINSTOR の基本的なスト"
"レージを構成してください。"

#. type: Plain text
msgid ""
"Read the <<s-kubernetes-securing-deployment,section on securing the "
"deployment>> and configure as needed."
msgstr ""
"<<s-kubernetes-securing-deployment,デプロイメントの保護に関するセクション>> "
"を参照して、必要に応じて設定します。"

#. type: Plain text
msgid ""
"Select the appropriate kernel module injector using `--set` with the `helm "
"install` command in the final step."
msgstr ""
"最後のステップとして `helm install` コマンドで `--set` を使用して、適切なカー"
"ネルモジュールインジェクタを選択します。"

#. type: Plain text
msgid ""
"Choose the injector according to the distribution you are using.  Select the "
"latest version from one of `drbd9-rhel7`, `drbd9-rhel8`,...  from http://"
"drbd.io/ as appropriate.  The drbd9-rhel8 image should also be used for "
"RHCOS (OpenShift). For the SUSE CaaS Platform use the SLES injector that "
"matches the base system of the CaaS Platform you are using (e.g., `drbd9-"
"sles15sp1`). For example:"
msgstr ""
"使用しているディストリビューションに応じてインジェクターを選択してください。 "
"http://drbd.io/ から、 `drbd9-rhel7`, `drbd9-rhel8`, ... 等の最新バージョンを"
"適宜選択します。drbd9-rhel8 イメージは、RHCOS(OpenShift) でも使用します。"
"SUSE CaaS プラットフォームの場合、使用している CaaS プラットフォームのシステ"
"ムと一致する SLES インジェクターを使用します（ `drbd9-sles15sp1` など）。例え"
"ば以下のようにします。"

#. type: delimited block -
#, no-wrap
msgid "operator.satelliteSet.kernelModuleInjectionImage=drbd.io/drbd9-rhel8:v9.0.24\n"
msgstr "operator.satelliteSet.kernelModuleInjectionImage=drbd.io/drbd9-rhel8:v9.0.24\n"

#. type: Plain text
msgid ""
"Only inject modules that are already present on the host machine. If a "
"module is not found, it will be skipped."
msgstr ""
"ホストマシンに既に存在するモジュールのみを挿入します。モジュールが見つからな"
"い場合は、スキップされます。"

#. type: delimited block -
#, no-wrap
msgid "operator.satelliteSet.kernelModuleInjectionMode=DepsOnly\n"
msgstr "operator.satelliteSet.kernelModuleInjectionMode=DepsOnly\n"

#. type: Plain text
msgid ""
"Disable kernel module injection if you are installing DRBD by other means. "
"Deprecated by `DepsOnly`"
msgstr ""
"他の方法で DRBD をインストールする場合は、カーネルモジュールインジェクション"
"を無効にします。 `DepsOnly` により非推奨になりました。"

# , no-wrap
#. type: delimited block -
#, no-wrap
msgid "operator.satelliteSet.kernelModuleInjectionMode=None\n"
msgstr "operator.satelliteSet.kernelModuleInjectionMode=None\n"

#. type: Plain text
msgid ""
"Finally create a Helm deployment named `linstor-op` that will set up "
"everything."
msgstr ""
"最後にすべてをセットアップする `linstor-op` という名前の Helm デプロイメント"
"を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"
msgstr ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"

#. type: Plain text
msgid ""
"Further deployment customization is discussed in the <<s-kubernetes-advanced-"
"deployments,advanced deployment section>>"
msgstr ""
"詳細なデプロイメントのカスタマイズについては、<<s-kubernetes-advanced-"
"deployments,advanced deployment section>> を参照ください。"

#. type: Title =====
#, no-wrap
msgid "LINSTOR etcd `hostPath` persistence"
msgstr "LINSTOR etcd `hostPath` 永続化"

#. type: Plain text
msgid ""
"You can use the `pv-hostpath` Helm templates to create `hostPath` persistent "
"volumes. Create as many PVs as needed to satisfy your configured etcd "
"`replicas` (default 1)."
msgstr ""
"`pv-hostpath` Helm テンプレートを使用して、 `hostPath` 永続ボリュームを作成で"
"きます。構成された etcd の `replicas` を満たすために必要な数の PV を作成しま"
"す（デフォルト1）。"

#. type: Plain text
msgid ""
"Create the `hostPath` persistent volumes, substituting cluster node names "
"accordingly in the `nodes=` option:"
msgstr ""
"`nodePath =` オプションでクラスターノード名を指定して `hostPath` 永続ボリュー"
"ムを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath --set \"nodes={<NODE0>,<NODE1>,<NODE2>}\"\n"
msgstr ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath --set \"nodes={<NODE0>,<NODE1>,<NODE2>}\"\n"

#. type: Plain text
msgid "Persistence for etcd is enabled by default."
msgstr "etcd の永続化はデフォルトで有効です。"

#. type: Title =====
#, no-wrap
msgid "Using an existing database"
msgstr "既存のデータベースの使用"

#. type: Plain text
msgid ""
"LINSTOR can connect to an existing PostgreSQL, MariaDB or etcd database. For "
"instance, for a PostgreSQL instance with the following configuration:"
msgstr ""
"LINSTOR は既存の PostgreSQL、MariaDB、etcd データベースに接続できます。たとえ"
"ば、次の構成は PostgresSQL インスタンスの場合です。"

#. type: delimited block -
#, no-wrap
msgid ""
"POSTGRES_DB: postgresdb\n"
"POSTGRES_USER: postgresadmin\n"
"POSTGRES_PASSWORD: admin123\n"
msgstr ""
"POSTGRES_DB: postgresdb\n"
"POSTGRES_USER: postgresadmin\n"
"POSTGRES_PASSWORD: admin123\n"

#. type: Plain text
msgid ""
"The Helm chart can be configured to use this database instead of deploying "
"an etcd cluster by adding the following to the Helm install command:"
msgstr ""
"Helm のインストールコマンドに以下を追加することにより、etcd クラスターをデプ"
"ロイする代わりにこのデータベースを使用するように Helm チャートを構成できま"
"す。"

#. type: delimited block -
#, no-wrap
msgid "--set etcd.enabled=false --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\"\n"
msgstr "--set etcd.enabled=false --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\"\n"

#. type: Title ====
#, no-wrap
msgid "Configuring storage"
msgstr "ストレージの構成"

#. type: Plain text
msgid ""
"The LINSTOR operator can automate some basic storage set up for LINSTOR."
msgstr ""
"LINSTORオペレーターは、いくつかの基本的なストレージセットアップを自動化できま"
"す。"

#. type: Title =====
#, no-wrap
msgid "Configuring storage pool creation"
msgstr "ストレージプール作成の構成"

#. type: Plain text
msgid ""
"The LINSTOR operator can be used to create LINSTOR storage pools. Creation "
"is under control of the LinstorSatelliteSet resource:"
msgstr ""
"LINSTOR オペレーターを使用して、LINSTOR ストレージプールを作成できます。作成"
"は LinstorSatelliteSet リソースの制御下にあります。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get LinstorSatelliteSet.linstor.linbit.com linstor-op-ns -o yaml\n"
"kind: LinstorSatelliteSet\n"
"metadata:\n"
"..\n"
"spec:\n"
"  ..\n"
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: \"\"\n"
"    zfsPools:\n"
"    - name: my-linstor-zpool\n"
"      zPool: for-linstor\n"
"      thin: true\n"
msgstr ""
"$ kubectl get LinstorSatelliteSet.linstor.linbit.com linstor-op-ns -o yaml\n"
"kind: LinstorSatelliteSet\n"
"metadata:\n"
"..\n"
"spec:\n"
"  ..\n"
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: \"\"\n"
"    zfsPools:\n"
"    - name: my-linstor-zpool\n"
"      zPool: for-linstor\n"
"      thin: true\n"

#. type: Plain text
msgid "====== At install time"
msgstr "====== インストール時"

#. type: Plain text
msgid ""
"At install time, by setting the value of `operator.satelliteSet."
"storagePools` when running helm install."
msgstr ""
"インストール時の helm install を実行するときに `operator.satelliteSet."
"storagePools` の値を設定します。"

#. type: Plain text
msgid "First create a file with the storage configuration like:"
msgstr "まず、次のようなストレージ構成でファイルを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmPools:\n"
"      - name: lvm-thick\n"
"        volumeGroup: drbdpool\n"
msgstr ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmPools:\n"
"      - name: lvm-thick\n"
"        volumeGroup: drbdpool\n"

#. type: Plain text
msgid "This file can be passed to the helm installation like this:"
msgstr "このファイルは、次のように helm インストールに渡すことができます。"

#. type: delimited block -
#, no-wrap
msgid "helm install -f <file> linstor-op linstor/linstor\n"
msgstr "helm install -f <file> linstor-op linstor/linstor\n"

#. type: Plain text
msgid "====== After install"
msgstr "====== インストール後"

#. type: Plain text
msgid ""
"On a cluster with the operator already configured (i.e. after `helm "
"install`), you can edit the LinstorSatelliteSet configuration like this:"
msgstr ""
"オペレーターがすでに構成されているクラスター（つまり、 `helm install` の後）"
"では、次のようにして LinstorSatelliteSet 構成を編集できます。"

#. type: delimited block -
#, no-wrap
msgid "$ kubectl edit LinstorSatelliteSet.linstor.linbit.com <satellitesetname>\n"
msgstr "$ kubectl edit LinstorSatelliteSet.linstor.linbit.com <satellitesetname>\n"

#. type: Plain text
msgid ""
"The storage pool configuration can be updated like in the example above."
msgstr "ストレージプールの構成は、上記の例のように更新できます。"

#. type: Title =====
#, no-wrap
msgid "Preparing physical devices"
msgstr "物理デバイスの準備"

#. type: Plain text
msgid ""
"By default, LINSTOR expects the referenced VolumeGroups, ThinPools and so on "
"to be present. You can use the `devicePaths: []` option to let LINSTOR "
"automatically prepare devices for the pool. Eligible for automatic "
"configuration are block devices that:"
msgstr ""
"デフォルトでは、LINSTOR は、参照される VolumeGroups, ThinPools などが存在する"
"ことを想定しています。 `devicePaths：[]` オプションを使用して、LINSTOR がプー"
"ル用にデバイスを自動的に準備できるようにすることができます。自動構成の対象と"
"なるのは、次のようなブロックデバイスです。"

#. type: Plain text
msgid "Are a root device (no partition)"
msgstr "ルートデバイス（パーティションなし）"

#. type: Plain text
msgid "do not contain partition information"
msgstr "パーティション情報を含まない。"

#. type: Plain text
msgid "have more than 1 GiB"
msgstr "1 GiB 以上である。"

#. type: Plain text
msgid ""
"To enable automatic configuration of devices, set the `devicePaths` key on "
"`storagePools` entries:"
msgstr ""
"デバイスの自動構成を有効にするには `storagePools` エントリに `devicePaths` "
"キーを設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"      devicePaths:\n"
"      - /dev/vdb\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: linstor_thinpool\n"
"      devicePaths:\n"
"      - /dev/vdc\n"
"      - /dev/vdd\n"
msgstr ""
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"      devicePaths:\n"
"      - /dev/vdb\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: linstor_thinpool\n"
"      devicePaths:\n"
"      - /dev/vdc\n"
"      - /dev/vdd\n"

#. type: Plain text
msgid ""
"Currently, this method supports creation of LVM and LVMTHIN storage pools."
msgstr ""
"現在、このメソッドは LVM および LVMTHIN ストレージプールの作成をサポートして"
"います。"

#. type: Title =====
#, no-wrap
msgid "`lvmPools` configuration"
msgstr "`lvmPools` 構成"

#. type: Plain text
msgid "`name` name of the LINSTOR storage pool.Required"
msgstr "`name` LINSTOR ストレージプールの名前。必須"

#. type: Plain text
msgid "`volumeGroup` name of the VG to create.Required"
msgstr "`volumeGroup` 作成する VG の名前。必須"

#. type: Plain text
msgid ""
"`devicePaths` devices to configure for this pool.Must be empty and >= 1GiB "
"to be recognized.Optional"
msgstr ""
"`devicePaths` このプール用に構成するデバイス。空で、認識されるには 1GiB 以上"
"必要である。オプション"

#. type: Plain text
msgid "`raidLevel` LVM raid level.Optional"
msgstr "`raidLevel` LVM RAID レベル。オプション"

#. type: Plain text
msgid "`vdo` Enable [VDO] (requires VDO tools in the satellite).Optional"
msgstr "`vdo` [VDO]を有効にする（サテライトに VDO ツールが必要）。オプション"

#. type: Plain text
msgid ""
"`vdoLogicalSizeKib` Size of the created VG (expected to be bigger than the "
"backing devices by using VDO).Optional"
msgstr ""
"`vdoLogicalSizeKib` 作成された VG のサイズ（VDO を使用することで下位デバイス"
"よりも大きくなることが予想される）。オプション"

#. type: Plain text
msgid "`vdoSlabSizeKib` Slab size for VDO. Optional"
msgstr "`vdoSlabSizeKib` VDO のスラブサイズ。オプション"

#. type: Plain text
msgid ""
"[VDO]: https://www.redhat.com/en/blog/look-vdo-new-linux-compression-layer"
msgstr ""
"[VDO]: https://www.redhat.com/en/blog/look-vdo-new-linux-compression-layer"

#. type: Title =====
#, no-wrap
msgid "`lvmThinPools` configuration"
msgstr "`lvmThinPools` 構成"

#. type: Plain text
msgid "`name` name of the LINSTOR storage pool. Required"
msgstr "`name` LINSTOR ストレージプールの名前。必須"

#. type: Plain text
msgid ""
"`volumeGroup` VG to use for the thin pool. If you want to use `devicePaths`, "
"you must set this to `\"\"`.  This is required because LINSTOR does not "
"allow configuration of the VG name when preparing devices."
msgstr ""
"`volumeGroup` シンプールに使用する VG。 `devicePaths` を使用する場合は、これ"
"を `\"\"` に設定する必要があります。LINSTOR ではデバイスの準備時に VG 名を構"
"成できないため、これが必要です。"

#. type: Plain text
msgid "`thinVolume` name of the thinpool. Required"
msgstr "`thinVolume` シンプールの名前。必須"

#. type: Plain text
msgid ""
"`devicePaths` devices to configure for this pool. Must be empty and >= 1GiB "
"to be recognized. Optional"
msgstr ""
"`devicePaths` このプール用に構成するデバイス。認識されるには、空で 1GiB 以上"
"ある。オプション"

#. type: Plain text
msgid "`raidLevel` LVM raid level. Optional"
msgstr "`raidLevel` LVM RAID レベル。オプション"

#. type: Plain text
msgid ""
"The volume group created by LINSTOR for LVMTHIN pools will always follow the "
"scheme \"linstor_$THINPOOL\"."
msgstr ""
"LVMTHIN プール用に LINSTOR によって作成されたボリュームグループは、常にスキー"
"ム \"linstor_$THINPOOL\" に従います。"

#. type: Title =====
#, no-wrap
msgid "`zfsPools` configuration"
msgstr "`zfsPools` 構成"

#. type: Plain text
msgid ""
"`zPool` name of the zpool to use. Must already be present on all machines. "
"Required"
msgstr ""
"`zPool` 使用する zpool の名前。すべてのマシンにすでに存在している必要がありま"
"す。必須"

#. type: Plain text
msgid "`thin` `true` to use thin provisioning, `false` otherwise. Required"
msgstr ""
"`thin` シンプロビジョニングを使用するには `true`, 使用しないなら `false` を設"
"定する。必須"

#. type: Title =====
#, no-wrap
msgid "Using `automaticStorageType` (DEPRECATED)"
msgstr "`automaticStorageType` の使用（非推奨）"

#. type: Plain text
msgid ""
"_ALL_ eligible devices will be prepared according to the value of `operator."
"satelliteSet.automaticStorageType`, unless they are already prepared using "
"the `storagePools` section. Devices are added to a storage pool based on the "
"device name (i.e. all `/dev/nvme1` devices will be part of the pool "
"`autopool-nvme1`)"
msgstr ""
"すべての適切なデバイスは、すでに `storagePools` セクションを使用して準備して"
"いる場合を除き `operator.satelliteSet.automaticStorageType` の値に従って準備"
"されます。デバイスは、デバイス名に基づいてストレージプールに追加さ>れます（つ"
"まり、すべての `/dev/nvme1` デバイスはプール `autopool-nvme1` 一部>になりま"
"す）。"

#. type: Plain text
msgid "The possible values for `operator.satelliteSet.automaticStorageType`:"
msgstr ""
"`operator.satelliteSet.automaticStorageType` の可能な値は次のとおりです。"

#. type: Plain text
msgid "`None` no automatic set up (default)"
msgstr "`None` 自動セットアップなし（デフォルト）"

#. type: Plain text
msgid "`LVM` create a LVM (thick) storage pool"
msgstr "`LVM` LVM（シック）ストレージプールを作成"

#. type: Plain text
msgid "`LVMTHIN` create a LVM thin storage pool"
msgstr "`LVMTHIN` LVM thin ストレージプールを作成"

#. type: Plain text
msgid "`ZFS` create a ZFS based storage pool (**UNTESTED**)"
msgstr "`ZFS` ZFS ベースストレージプールを作成 (** 未テスト **)"

#  no-wrap
#. type: Title ====
#, no-wrap
msgid "Securing deployment"
msgstr "安全なデプロイメント"

#. type: Plain text
msgid ""
"This section describes the different options for enabling security features "
"available when using this operator. The following guides assume the operator "
"is installed <<s-kubernetes-deploy-linstor-operator,using Helm>>"
msgstr ""
"このセクションでは、オペレーターを使用するときに使用できるセキュリティ機能を"
"有効にするためのさまざまなオプションについて説明します。以下のガイドは <<s-"
"kubernetes-deploy-linstor-operator,Helm>> を使ってオペレーターがインストール"
"されていることを前提とします。"

#. type: Title =====
#, no-wrap
msgid "Secure communication with an existing etcd instance"
msgstr "既存の etcd インスタンスとの安全な通信"

#. type: Plain text
msgid ""
"Secure communication to an `etcd` instance can be enabled by providing a CA "
"certificate to the operator in form of a kubernetes secret. The secret has "
"to contain the key `ca.pem` with the PEM encoded CA certificate as value."
msgstr ""
"`etcd` インスタンスへの安全な通信は、kubernetes シークレットの形式で CA 証明"
"書をオペレーターに提供することで有効にできます。シークレットには、PEM エン"
"コードされた CA 証明書を値として持つキー `ca.pem` を含める必要があります。"

#. type: Plain text
msgid ""
"The secret can then be passed to the controller by passing the following "
"argument to `helm install`"
msgstr ""
"次の引数を `helm install` に渡すことで、シークレットをコントローラーに渡すこ"
"とができます。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.controller.dbCertSecret=<secret name>\n"
msgstr "--set operator.controller.dbCertSecret=<secret name>\n"

#. type: Plain text
msgid "====== Authentication with `etcd` using certificates"
msgstr "====== 証明書を使用した `etcd` での認証"

#. type: Plain text
msgid ""
"If you want to use TLS certificates to authenticate with an `etcd` database, "
"you need to set the following option on helm install:"
msgstr ""
"TLS 証明書を使用して `etcd` データベースで認証する場合は、helm インストールで"
"次のオプションを設定する必要があります。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.controller.dbUseClientCert=true\n"
msgstr "--set operator.controller.dbUseClientCert=true\n"

#. type: Plain text
msgid ""
"If this option is active, the secret specified in the above section must "
"contain two additional keys:"
msgstr ""
"このオプションが有効な場合、上記のセクションで指定されたシークレットには、2つ"
"の追加キーが含まれている必要があります。"

#. type: Plain text
msgid ""
"`client.cert` PEM formatted certificate presented to `etcd` for "
"authentication"
msgstr " `client.cert` 認証のために `etcd` に提示される PEM 形式の証明書、 "

#. type: Plain text
msgid ""
"`client.key` private key **in PKCS8 format**, matching the above client "
"certificate.  Keys can be converted into PKCS8 format using `openssl`:"
msgstr ""
"`client.key` 上記のクライアント証明書と一致する PKCS8 形式の秘密鍵。鍵は "
"`openssl` を使用して PKCS8 形式に変換できます。"

#. type: delimited block -
#, no-wrap
msgid "openssl pkcs8 -topk8 -nocrypt -in client-key.pem -out client-key.pkcs8\n"
msgstr "openssl pkcs8 -topk8 -nocrypt -in client-key.pem -out client-key.pkcs8\n"

#. type: Title =====
#, no-wrap
msgid "Configuring secure communication between LINSTOR components"
msgstr "LINSTOR コンポーネント間の安全な通信の設定"

#. type: Plain text
msgid ""
"The default communication between LINSTOR components is not secured by TLS. "
"If this is needed for your setup, follow these steps:"
msgstr ""
"LINSTOR コンポーネント間のデフォルトの通信は TLS によって保護されていません。"
"必要な場合は、次の手順に従い設定します。"

#. type: Plain text
msgid ""
"Create private keys in the java keystore format, one for the controller, one "
"for all satellites:"
msgstr ""
"1 つはコントローラー用、もう 1 つはすべてのサテライト用に、Java キーストア形"
"式で秘密鍵を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"keytool -keyalg rsa -keysize 2048 -genkey -keystore satellite-keys.jks -storepass linstor -alias satellite -dname \"CN=XX, OU=satellite, O=Example, L=XX, ST=XX, C=X\"\n"
"keytool -keyalg rsa -keysize 2048 -genkey -keystore control-keys.jks -storepass linstor -alias control -dname \"CN=XX, OU=control, O=Example, L=XX, ST=XX, C=XX\"\n"
msgstr ""
"keytool -keyalg rsa -keysize 2048 -genkey -keystore satellite-keys.jks -storepass linstor -alias satellite -dname \"CN=XX, OU=satellite, O=Example, L=XX, ST=XX, C=X\"\n"
"keytool -keyalg rsa -keysize 2048 -genkey -keystore control-keys.jks -storepass linstor -alias control -dname \"CN=XX, OU=control, O=Example, L=XX, ST=XX, C=XX\"\n"

#. type: Plain text
msgid ""
"Create a trust store with the public keys that each component needs to trust:"
msgstr ""
"各コンポーネントが信頼できるよう公開鍵を伴うトラストストアを作成します。"

#. type: Plain text
msgid "Controller needs to trust the satellites"
msgstr "コントローラはサテライトを信頼する必要があります。"

#. type: Plain text
msgid "Nodes need to trust the controller"
msgstr "ノードはコントローラーを信頼する必要があります。"

#. type: delimited block -
#, no-wrap
msgid ""
"keytool -importkeystore -srcstorepass linstor -deststorepass linstor -srckeystore control-keys.jks -destkeystore satellite-trust.jks\n"
"keytool -importkeystore -srcstorepass linstor -deststorepass linstor -srckeystore satellite-keys.jks -destkeystore control-trust.jks\n"
msgstr ""
"keytool -importkeystore -srcstorepass linstor -deststorepass linstor -srckeystore control-keys.jks -destkeystore satellite-trust.jks\n"
"keytool -importkeystore -srcstorepass linstor -deststorepass linstor -srckeystore satellite-keys.jks -destkeystore control-trust.jks\n"

#. type: Plain text
msgid ""
"Create kubernetes secrets that can be passed to the controller and satellite "
"pods"
msgstr ""
"コントローラとサテライトポッドに渡す kubernetes シークレットを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret generic control-secret --from-file=keystore.jks=control-keys.jks --from-file=certificates.jks=control-trust.jks\n"
"kubectl create secret generic satellite-secret --from-file=keystore.jks=satellite-keys.jks --from-file=certificates.jks=satellite-trust.jks\n"
msgstr ""
"kubectl create secret generic control-secret --from-file=keystore.jks=control-keys.jks --from-file=certificates.jks=control-trust.jks\n"
"kubectl create secret generic satellite-secret --from-file=keystore.jks=satellite-keys.jks --from-file=certificates.jks=satellite-trust.jks\n"

#. type: Plain text
msgid "Pass the names of the created secrets to `helm install`"
msgstr "作成したシークレットの名前を `helm install` に渡します。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.satelliteSet.sslSecret=satellite-secret --set operator.controller.sslSecret=control-secret\n"
msgstr "--set operator.satelliteSet.sslSecret=satellite-secret --set operator.controller.sslSecret=control-secret\n"

#. type: Plain text
msgid ""
"It is currently **NOT** possible to change the keystore password. LINSTOR "
"expects the passwords to be `linstor`. This is a current limitation of "
"LINSTOR."
msgstr ""
"現在、キーストアのパスワードを変更することはできません。LINSTOR はパスワード"
"が `linstor` であると想定しています。これは LINSTOR の現在の制限です。"

#. type: Title =====
#, no-wrap
msgid "Configuring secure communications for the LINSTOR API"
msgstr "LINSTOR API の安全な通信の構成"

#. type: Plain text
msgid ""
"Various components need to talk to the LINSTOR controller via its REST "
"interface. This interface can be secured via HTTPS, which automatically "
"includes authentication. For HTTPS+authentication to work, each component "
"needs access to:"
msgstr ""
"さまざまなコンポーネントが REST インターフェースを介して LINSTOR コントロー"
"ラーと通信する必要があります。このインターフェースは、自動的に認証を含む "
"HTTPS を介して保護できます。HTTPS 認証が機能するためには、各コンポーネントが"
"以下にアクセスする必要があります。"

#. type: Plain text
msgid "A private key"
msgstr "秘密鍵"

#. type: Plain text
msgid "A certificate based on the key"
msgstr "キーに基づく証明書"

#. type: Plain text
msgid ""
"A trusted certificate, used to verify that other components are trustworthy"
msgstr ""
"他のコンポーネントが信頼できることを確認するために使用される信頼できる証明書"

#. type: Plain text
msgid ""
"The next sections will guide you through creating all required components."
msgstr ""
"次のセクションでは、必要なすべてのコンポーネントの作成について説明します。"

#. type: Plain text
msgid "====== Creating the private keys"
msgstr "====== 秘密鍵の作成"

#. type: Plain text
msgid "Private keys can be created using java's keytool"
msgstr "秘密鍵は Java の keytool を使用して作成できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"keytool -keyalg rsa -keysize 2048 -genkey -keystore controller.pkcs12 -storetype pkcs12 -storepass linstor -ext san=dns:linstor-op-cs.default.svc -dname \"CN=XX, OU=controller, O=Example, L=XX, ST=XX, C=X\" -validity 5000\n"
"keytool -keyalg rsa -keysize 2048 -genkey -keystore client.pkcs12 -storetype pkcs12 -storepass linstor -dname \"CN=XX, OU=client, O=Example, L=XX, ST=XX, C=XX\" -validity 5000\n"
msgstr ""
"keytool -keyalg rsa -keysize 2048 -genkey -keystore controller.pkcs12 -storetype pkcs12 -storepass linstor -ext san=dns:linstor-op-cs.default.svc -dname \"CN=XX, OU=controller, O=Example, L=XX, ST=XX, C=X\" -validity 5000\n"
"keytool -keyalg rsa -keysize 2048 -genkey -keystore client.pkcs12 -storetype pkcs12 -storepass linstor -dname \"CN=XX, OU=client, O=Example, L=XX, ST=XX, C=XX\" -validity 5000\n"

#. type: Plain text
msgid ""
"The clients need private keys and certificate in a different format, so we "
"need to convert it"
msgstr ""
"クライアントは異なる形式の秘密鍵と証明書を必要とするため、変換する必要があり"
"ます。"

#. type: delimited block -
#, no-wrap
msgid ""
"openssl pkcs12 -in client.pkcs12 -passin pass:linstor -out client.cert -clcerts -nokeys\n"
"openssl pkcs12 -in client.pkcs12 -passin pass:linstor -out client.key -nocerts -nodes\n"
msgstr ""
"openssl pkcs12 -in client.pkcs12 -passin pass:linstor -out client.cert -clcerts -nokeys\n"
"openssl pkcs12 -in client.pkcs12 -passin pass:linstor -out client.key -nocerts -nodes\n"

#. type: Plain text
msgid ""
"The alias specified for the controller key (i.e. `-ext san=dns:linstor-op-cs."
"default.svc`) has to exactly match the service name created by the operator. "
"When using `helm`, this is always of the form `<release-name>-cs.<release-"
"namespace>.svc`."
msgstr ""
"コントローラキーで指定されたエイリアス（つまり `-ext san=dns:linstor-op-cs."
"default.svc` ）は、オペレーターが作成したサービス名と完全に一致する必要があり"
"ます。 `helm` を使用する場合は、これは常に `<release-name>-cs.<release-"
"namespace>.svc` の形式になります。"

#. type: Plain text
msgid ""
"It is currently NOT possible to change the keystore password. LINSTOR "
"expects the passwords to be linstor. This is a current limitation of LINSTOR"
msgstr ""
"現在、キーストアのパスワードを変更することはできません。LINSTOR は、パスワー"
"ドが linstor であると想定しています。これは LINSTOR の現在の制限です。"

#. type: Plain text
msgid "====== Create the trusted certificates"
msgstr "====== 信頼できる証明書の作成"

#. type: Plain text
msgid ""
"For the controller to trust the clients, we can use the following command to "
"create a truststore, importing the client certificate"
msgstr ""
"コントローラがクライアントを信頼するには、次のコマンドを使用してトラストスト"
"アを作成し、クライアント証明書をインポートします。"

#. type: delimited block -
#, no-wrap
msgid "keytool -importkeystore -srcstorepass linstor -srckeystore client.pkcs12 -deststorepass linstor -deststoretype pkcs12 -destkeystore controller-trust.pkcs12\n"
msgstr "keytool -importkeystore -srcstorepass linstor -srckeystore client.pkcs12 -deststorepass linstor -deststoretype pkcs12 -destkeystore controller-trust.pkcs12\n"

#. type: Plain text
msgid ""
"For the client, we have to convert the controller certificate into a "
"different format"
msgstr ""
"クライアントの場合、コントローラ証明書を別の形式に変換する必要があります。"

#. type: delimited block -
#, no-wrap
msgid "openssl pkcs12 -in controller.pkcs12 -passin pass:linstor -out ca.pem -clcerts -nokeys\n"
msgstr "openssl pkcs12 -in controller.pkcs12 -passin pass:linstor -out ca.pem -clcerts -nokeys\n"

#. type: Plain text
msgid "====== Create Kubernetes secrets"
msgstr "====== Kubernetes シークレットの作成"

#. type: Plain text
msgid "Now you can create secrets for the controller and for clients:"
msgstr "これで、コントローラとクライアントのシークレットを作成できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret generic http-controller --from-file=keystore.jks=controller.pkcs12 --from-file=truststore.jks=controller-trust.pkcs12\n"
"kubectl create secret generic http-client --from-file=ca.pem=ca.pem --from-file=client.cert=client.cert --from-file=client.key=client.key\n"
msgstr ""
"kubectl create secret generic http-controller --from-file=keystore.jks=controller.pkcs12 --from-file=truststore.jks=controller-trust.pkcs12\n"
"kubectl create secret generic http-client --from-file=ca.pem=ca.pem --from-file=client.cert=client.cert --from-file=client.key=client.key\n"

#. type: Plain text
msgid ""
"The names of the secrets can be passed to `helm install` to configure all "
"clients to use https."
msgstr ""
"シークレットの名前を `helm install` に渡して、すべてのクライアントが https を"
"使用するように設定できます。"

#. type: delimited block -
#, no-wrap
msgid "--set linstorHttpsControllerSecret=http-controller  --set linstorHttpsClientSecret=http-client\n"
msgstr "--set linstorHttpsControllerSecret=http-controller  --set linstorHttpsClientSecret=http-client\n"

#. type: Title =====
#, no-wrap
msgid "Automatically set the passphrase for encrypted volumes"
msgstr "暗号化されたボリュームのパスフレーズを自動設定"

#. type: Plain text
msgid ""
"Linstor can be used to create encrypted volumes using LUKS. The passphrase "
"used when creating these volumes can be set via a secret:"
msgstr ""
"Linstor は LUKS を使用して暗号化されたボリュームを作成するために使用できま"
"す。これらのボリュームを作成するときに使用されるパスフレーズは、シークレット"
"を介して設定できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create secret generic linstor-pass --from-literal=MASTER_PASSPHRASE=<password>\n"
msgstr "kubectl create secret generic linstor-pass --from-literal=MASTER_PASSPHRASE=<password>\n"

#. type: Plain text
msgid "On install, add the following arguments to the helm command:"
msgstr "インストール時に、次の引数を helm コマンドに追加します。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.controller.luksSecret=linstor-pass\n"
msgstr "--set operator.controller.luksSecret=linstor-pass\n"

#. type: Title =====
#, no-wrap
msgid "Helm Install Examples"
msgstr "Helm インストール例"

#. type: Plain text
msgid ""
"All the below examples use the following `sp-values.yaml` file. Feel free to "
"adjust this for your uses and environment. See <<Configuring storage pool "
"creation>> for further details."
msgstr ""
"以下のすべての例では、次の `sp-values.yaml` ファイルを使用しています。用途や"
"環境に合わせて調整してください。詳細は <ストレージプール作成の構成> を参照く"
"ださい。"

#. type: delimited block -
#, no-wrap
msgid ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmThinPools:\n"
"      - name: lvm-thin\n"
"        thinVolume: thinpool\n"
"        volumeGroup: \"\"\n"
"        devicePaths:\n"
"        - /dev/sdb\n"
msgstr ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmThinPools:\n"
"      - name: lvm-thin\n"
"        thinVolume: thinpool\n"
"        volumeGroup: \"\"\n"
"        devicePaths:\n"
"        - /dev/sdb\n"

#. type: Plain text
msgid ""
"Default install. Please note this does not setup any persistence for the "
"backing etcd key-value store."
msgstr ""
"デフォルトのインストールです。これにより etcd KeyValue ストアの設定はされない"
"ことに注意してください。"

#. type: Plain text
msgid "This is not suggested for any use outside of testing."
msgstr "警告：これは、テスト以外での使用は推奨されていません。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"

#. type: Plain text
msgid ""
"Install with LINSTOR storage-pools defined at install via `sp-values.yaml`, "
"persistent hostPath volumes, 3 etcd replicas, and by compiling the DRBD "
"kernel modules for the host kernels."
msgstr ""
"`sp-values.yaml` で定義された LINSTOR storage-pools, 永続的な hostPath ボ"
"リューム, 3 つの etcd レプリカ, ホストカーネル用にコンパイルされた DRBD カー"
"ネルモジュールを使用してインストールします。"

#. type: Plain text
msgid ""
"This should be adequate for most basic deployments. Please note that this "
"deployment is not using the pre-compiled DRBD kernel modules just to make "
"this command more portable. Using the pre-compiled binaries will make for a "
"much faster install and deployment. Using the `Compile` option would not be "
"suggested for use in a large Kubernetes clusters."
msgstr ""
"これは、ほとんどの基本的なデプロイメントに適しています。このデプロイメントで"
"は、コマンドの移植性を高めるために、コンパイル済みの DRBD カーネルモジュール"
"を使用していないことに注意してください。コンパイル済みのバイナリを使用する"
"と、インストールとデプロイメントは速くなります。大規模な Kubernetes クラス"
"ターでの使用には、 `Compile`  オプションの使用は推奨されません。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath --set \"nodes={<NODE0>,<NODE1>,<NODE2>}\"\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.replicas=3 --set operator.satelliteSet.kernelModuleInjectionMode=Compile\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath --set \"nodes={<NODE0>,<NODE1>,<NODE2>}\"\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.replicas=3 --set operator.satelliteSet.kernelModuleInjectionMode=Compile\n"

#. type: Plain text
msgid ""
"Install with LINSTOR storage-pools defined at install via `sp-values.yaml`, "
"use an already created PostgreSQL DB (preferably clustered), instead of "
"etcd, and use already compiled kernel modules for DRBD. Additionally, we'll "
"disable the Stork scheduler in this example."
msgstr ""
"`sp-values.yaml` で定義された LINSTOR storage-pools, etcd の代わりに作成済み"
"の Postgres DB（できればクラスター化）, DRBD 用にコンパイル済みのカーネルモ"
"ジュールを使用してインストールします。さらに、この例では Stork スケジューラー"
"を無効にします。"

#. type: Plain text
msgid ""
"The PostgreSQL database in this particular example is reachable via a "
"service endpoint named `postgres`. PostgreSQL itself is configured with "
"`POSTGRES_DB=postgresdb`, `POSTGRES_USER=postgresadmin`, and "
"`POSTGRES_PASSWORD=admin123`"
msgstr ""
"この例の Postgres データベースは `postgres` という名前のサービスエンドポイン"
"トでアクセスできます。Postgres 自体は `POSTGRES_DB = postgresdb`, "
"`POSTGRES_USER = postgresadmin`, および `POSTGRES_PASSWORD = admin123` で構成"
"されます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.enabled=false --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\" --set stork.enabled=false\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.enabled=false --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\" --set stork.enabled=false\n"

#. type: Title =====
#, no-wrap
msgid "Terminating Helm deployment"
msgstr "Helm デプロイメントの終了"

#. type: Plain text
msgid ""
"To protect the storage infrastructure of the cluster from accidentally "
"deleting vital components, it is necessary to perform some manual steps "
"before deleting a Helm deployment."
msgstr ""
"重要なコンポーネントを誤って削除しないようにクラスターのストレージインフラス"
"トラクチャを保護するには、Helm デプロイメントを削除する前にいくつかの手動手順"
"を実行する必要があります。"

#. type: Plain text
msgid ""
"Delete all volume claims managed by LINSTOR components. You can use the "
"following command to get a list of volume claims managed by LINSTOR. After "
"checking that none of the listed volumes still hold needed data, you can "
"delete them using the generated kubectl delete command."
msgstr ""
"LINSTOR コンポーネントによって管理されているすべてのボリューム要求を削除しま"
"す。次のコマンドを使用して、LINSTOR が管理するボリューム要求のリストを取得で"
"きます。リストされたどのボリュームにも必要なデータが残っていないことを確認し"
"た後、生成された kubectl delete コマンドを使用してそれらを削除できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get pvc --all-namespaces -o=jsonpath='{range .items[?(@.metadata.annotations.volume\\.beta\\.kubernetes\\.io/storage-provisioner==\"linstor.csi.linbit.com\")]}kubectl delete pvc --namespace {.metadata.namespace} {.metadata.name}{\"\\n\"}{end}'\n"
"kubectl delete pvc --namespace default data-mysql-0\n"
"kubectl delete pvc --namespace default data-mysql-1\n"
"kubectl delete pvc --namespace default data-mysql-2\n"
msgstr ""
"$ kubectl get pvc --all-namespaces -o=jsonpath='{range .items[?(@.metadata.annotations.volume\\.beta\\.kubernetes\\.io/storage-provisioner==\"linstor.csi.linbit.com\")]}kubectl delete pvc --namespace {.metadata.namespace} {.metadata.name}{\"\\n\"}{end}'\n"
"kubectl delete pvc --namespace default data-mysql-0\n"
"kubectl delete pvc --namespace default data-mysql-1\n"
"kubectl delete pvc --namespace default data-mysql-2\n"

#. type: Plain text
msgid "These volumes, once deleted, cannot be recovered."
msgstr "これらのボリュームは、いったん削除されると復元できません。"

#. type: Plain text
msgid "Delete the LINSTOR controller and satellite resources."
msgstr "LINSTOR コントローラーとサテライトリソースを削除します。"

#. type: Plain text
msgid ""
"Deployment of LINSTOR satellite and controller is controlled by the "
"LinstorSatelliteSet and LinstorController resources. You can delete the "
"resources associated with your deployment using kubectl"
msgstr ""
"LINSTOR サテライトとコントローラーのデプロイメントは、LinstorSatelliteSet リ"
"ソースと LinstorController リソースによって制御されます。kubectl を使用して、"
"デプロイメントに関連付けられているリソースを削除できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl delete linstorcontroller <helm-deploy-name>-cs\n"
"kubectl delete linstorsatelliteset <helm-deploy-name>-ns\n"
msgstr ""
"kubectl delete linstorcontroller <helm-deploy-name>-cs\n"
"kubectl delete linstorsatelliteset <helm-deploy-name>-ns\n"

#. type: Plain text
msgid ""
"After a short wait, the controller and satellite pods should terminate. If "
"they continue to run, you can check the above resources for errors (they are "
"only removed after all associated pods terminate)"
msgstr ""
"しばらくすると、コントローラーとサテライトポッドが終了します。終了しない場合"
"は、上記のリソースのエラーを確認します（関連付けられているすべてのポッドが終"
"了した後でのみ削除されます）"

#. type: Plain text
msgid "Delete the Helm deployment."
msgstr "Helm デプロイメントの終了"

#. type: Plain text
msgid ""
"If you removed all PVCs and all LINSTOR pods have terminated, you can "
"uninstall the helm deployment"
msgstr ""
"すべての PVC を削除し、すべての LINSTOR ポッドが終了した場合、helm デプロイメ"
"ントをアンインストールできます。"

#. type: delimited block -
#, no-wrap
msgid "helm uninstall linstor-op\n"
msgstr "helm uninstall linstor-op\n"

#. type: Plain text
msgid ""
"Due to the Helm's current policy, the Custom Resource Definitions named "
"LinstorController and LinstorSatelliteSet will not be deleted by the "
"command.  More information regarding Helm's current position on CRDs can be "
"found https://helm.sh/docs/chart_best_practices/custom_resource_definitions/"
"#method-1-let-helm-do-it-for-you[here]."
msgstr ""
"Helm の現在のポリシーにより、LinstorController および LinstorSatelliteSet と"
"いう名前のカスタムリソース定義はコマンドによって削除されません。CRD の Helm "
"の現状に関しては https://helm.sh/docs/chart_best_practices/"
"custom_resource_definitions/#method-1-let-helm-do-it-for-you[こちら] を参照く"
"ださい。"

#. type: Title ====
#, no-wrap
msgid "Advanced deployment options"
msgstr "高度なデプロイメントオプション"

#. type: Plain text
msgid ""
"The helm charts provide a set of further customization options for advanced "
"use cases."
msgstr "helm チャートは、より高度な使用のための追加オプションを提供します。"

#. type: delimited block -
#, no-wrap
msgid ""
"global:\n"
"  imagePullPolicy: IfNotPresent # empty pull policy means k8s default is used (\"always\" if tag == \":latest\", \"ifnotpresent\" else) <1>\n"
"  setSecurityContext: true # Force non-privileged containers to run as non-root users\n"
"# Dependency charts\n"
"etcd:\n"
"  persistentVolume:\n"
"    enabled: true\n"
"    storage: 1Gi\n"
"  replicas: 1 # How many instances of etcd will be added to the initial cluster. <2>\n"
"  resources: {} # resource requirements for etcd containers <3>\n"
"  image:\n"
"    repository: gcr.io/etcd-development/etcd\n"
"    tag: v3.4.15\n"
"csi-snapshotter:\n"
"  enabled: true # <- enable to add k8s snapshotting CRDs and controller. Needed for CSI snapshotting\n"
"  image: k8s.gcr.io/sig-storage/snapshot-controller:v3.0.3\n"
"  replicas: 1 <2>\n"
"  resources: {} # resource requirements for the cluster snapshot controller. <3>\n"
"stork:\n"
"  enabled: true\n"
"  storkImage: docker.io/openstorage/stork:2.6.2\n"
"  schedulerImage: k8s.gcr.io/kube-scheduler-amd64\n"
"  schedulerTag: \"\"\n"
"  replicas: 1 <2>\n"
"  storkResources: {} # resources requirements for the stork plugin containers <3>\n"
"  schedulerResources: {} # resource requirements for the kube-scheduler containers <3>\n"
"  podsecuritycontext: {}\n"
"csi:\n"
"  enabled: true\n"
"  pluginImage: \"drbd.io/linstor-csi:v0.13.0\"\n"
"  csiAttacherImage: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0\n"
"  csiLivenessProbeImage: k8s.gcr.io/sig-storage/livenessprobe:v2.2.0\n"
"  csiNodeDriverRegistrarImage: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0\n"
"  csiProvisionerImage: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.1\n"
"  csiSnapshotterImage: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3\n"
"  csiResizerImage: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0\n"
"  controllerReplicas: 1 <2>\n"
"  nodeAffinity: {} <4>\n"
"  nodeTolerations: [] <4>\n"
"  controllerAffinity: {} <4>\n"
"  controllerTolerations: [] <4>\n"
"  enableTopology: false\n"
"  resources: {} <3>\n"
"priorityClassName: \"\"\n"
"drbdRepoCred: drbdiocred\n"
"linstorHttpsControllerSecret: \"\" # <- name of secret containing linstor server certificates+key.\n"
"linstorHttpsClientSecret: \"\" # <- name of secret containing linstor client certificates+key.\n"
"controllerEndpoint: \"\" # <- override to the generated controller endpoint. use if controller is not deployed via operator\n"
"psp:\n"
"  privilegedRole: \"\"\n"
"  unprivilegedRole: \"\"\n"
"operator:\n"
"  replicas: 1 # <- number of replicas for the operator deployment <2>\n"
"  image: \"drbd.io/linstor-operator:v1.5.0\"\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  podsecuritycontext: {}\n"
"  controller:\n"
"    enabled: true\n"
"    controllerImage: \"drbd.io/linstor-controller:v1.12.3\"\n"
"    luksSecret: \"\"\n"
"    dbCertSecret: \"\"\n"
"    dbUseClientCert: false\n"
"    sslSecret: \"\"\n"
"    affinity: {} <4>\n"
"    tolerations: <4>\n"
"      - key: node-role.kubernetes.io/master\n"
"        operator: \"Exists\"\n"
"        effect: \"NoSchedule\"\n"
"    resources: {} <3>\n"
"    replicas: 1 <2>\n"
"    additionalEnv: [] <5>\n"
"    additionalProperties: {} <6>\n"
"  satelliteSet:\n"
"    enabled: true\n"
"    satelliteImage: \"drbd.io/linstor-satellite:v1.12.3\"\n"
"    storagePools: {}\n"
"    sslSecret: \"\"\n"
"    automaticStorageType: None\n"
"    affinity: {} <4>\n"
"    tolerations: [] <4>\n"
"    resources: {} <3>\n"
"    monitoringImage: \"drbd.io/drbd-reactor:v0.3.0\"\n"
"    kernelModuleInjectionImage: \"drbd.io/drbd9-rhel7:v9.0.29\"\n"
"    kernelModuleInjectionMode: ShippedModules\n"
"    kernelModuleInjectionResources: {} <3>\n"
"    additionalEnv: [] <5>\n"
"haController:\n"
"  enabled: true\n"
"  image: drbd.io/linstor-k8s-ha-controller:v0.1.3\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  replicas: 1 <2>\n"
msgstr ""
"global:\n"
"  imagePullPolicy: IfNotPresent # empty pull policy means k8s default is used (\"always\" if tag == \":latest\", \"ifnotpresent\" else) <1>\n"
"  setSecurityContext: true # Force non-privileged containers to run as non-root users\n"
"# Dependency charts\n"
"etcd:\n"
"  persistentVolume:\n"
"    enabled: true\n"
"    storage: 1Gi\n"
"  replicas: 1 # How many instances of etcd will be added to the initial cluster. <2>\n"
"  resources: {} # resource requirements for etcd containers <3>\n"
"  image:\n"
"    repository: gcr.io/etcd-development/etcd\n"
"    tag: v3.4.15\n"
"csi-snapshotter:\n"
"  enabled: true # <- enable to add k8s snapshotting CRDs and controller. Needed for CSI snapshotting\n"
"  image: k8s.gcr.io/sig-storage/snapshot-controller:v3.0.3\n"
"  replicas: 1 <2>\n"
"  resources: {} # resource requirements for the cluster snapshot controller. <3>\n"
"stork:\n"
"  enabled: true\n"
"  storkImage: docker.io/openstorage/stork:2.6.2\n"
"  schedulerImage: k8s.gcr.io/kube-scheduler-amd64\n"
"  schedulerTag: \"\"\n"
"  replicas: 1 <2>\n"
"  storkResources: {} # resources requirements for the stork plugin containers <3>\n"
"  schedulerResources: {} # resource requirements for the kube-scheduler containers <3>\n"
"  podsecuritycontext: {}\n"
"csi:\n"
"  enabled: true\n"
"  pluginImage: \"drbd.io/linstor-csi:v0.13.0\"\n"
"  csiAttacherImage: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0\n"
"  csiLivenessProbeImage: k8s.gcr.io/sig-storage/livenessprobe:v2.2.0\n"
"  csiNodeDriverRegistrarImage: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.1.0\n"
"  csiProvisionerImage: k8s.gcr.io/sig-storage/csi-provisioner:v2.1.1\n"
"  csiSnapshotterImage: k8s.gcr.io/sig-storage/csi-snapshotter:v3.0.3\n"
"  csiResizerImage: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0\n"
"  controllerReplicas: 1 <2>\n"
"  nodeAffinity: {} <4>\n"
"  nodeTolerations: [] <4>\n"
"  controllerAffinity: {} <4>\n"
"  controllerTolerations: [] <4>\n"
"  enableTopology: false\n"
"  resources: {} <3>\n"
"priorityClassName: \"\"\n"
"drbdRepoCred: drbdiocred\n"
"linstorHttpsControllerSecret: \"\" # <- name of secret containing linstor server certificates+key.\n"
"linstorHttpsClientSecret: \"\" # <- name of secret containing linstor client certificates+key.\n"
"controllerEndpoint: \"\" # <- override to the generated controller endpoint. use if controller is not deployed via operator\n"
"psp:\n"
"  privilegedRole: \"\"\n"
"  unprivilegedRole: \"\"\n"
"operator:\n"
"  replicas: 1 # <- number of replicas for the operator deployment <2>\n"
"  image: \"drbd.io/linstor-operator:v1.5.0\"\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  podsecuritycontext: {}\n"
"  controller:\n"
"    enabled: true\n"
"    controllerImage: \"drbd.io/linstor-controller:v1.12.3\"\n"
"    luksSecret: \"\"\n"
"    dbCertSecret: \"\"\n"
"    dbUseClientCert: false\n"
"    sslSecret: \"\"\n"
"    affinity: {} <4>\n"
"    tolerations: <4>\n"
"      - key: node-role.kubernetes.io/master\n"
"        operator: \"Exists\"\n"
"        effect: \"NoSchedule\"\n"
"    resources: {} <3>\n"
"    replicas: 1 <2>\n"
"    additionalEnv: [] <5>\n"
"    additionalProperties: {} <6>\n"
"  satelliteSet:\n"
"    enabled: true\n"
"    satelliteImage: \"drbd.io/linstor-satellite:v1.12.3\"\n"
"    storagePools: {}\n"
"    sslSecret: \"\"\n"
"    automaticStorageType: None\n"
"    affinity: {} <4>\n"
"    tolerations: [] <4>\n"
"    resources: {} <3>\n"
"    monitoringImage: \"drbd.io/drbd-reactor:v0.3.0\"\n"
"    kernelModuleInjectionImage: \"drbd.io/drbd9-rhel7:v9.0.29\"\n"
"    kernelModuleInjectionMode: ShippedModules\n"
"    kernelModuleInjectionResources: {} <3>\n"
"    additionalEnv: [] <5>\n"
"haController:\n"
"  enabled: true\n"
"  image: drbd.io/linstor-k8s-ha-controller:v0.1.3\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  replicas: 1 <2>\n"

#. type: Plain text
msgid "Sets the pull policy for all images."
msgstr "すべてのイメージのプルポリシーを設定します。"

#. type: Plain text
msgid "Controls the number of replicas for each component."
msgstr "各コンポーネントのレプリカ数を制御します。"

#. type: Plain text
msgid ""
"Set container resource requests and limits. See https://kubernetes.io/docs/"
"tasks/configure-pod-container/assign-cpu-resource/[the kubernetes docs].  "
"Most containers need a minimal amount of resources, except for:"
msgstr ""
"コンテナリソースのリクエストと制限を設定します。詳細は https://kubernetes.io/"
"docs/tasks/configure-pod-container/assign-cpu-resource/[kubernetes ドキュメン"
"ト] を参照ください。以下を除いて、ほとんどのコンテナには最小限のリソースが必"
"要です。"

#. type: Plain text
msgid ""
"`etcd.resources` See the https://etcd.io/docs/v3.4.0/op-guide/hardware/[etcd "
"docs]"
msgstr ""
"`etcd.resources` https://etcd.io/docs/v3.4.0/op-guide/hardware/[etcd docs] を"
"参照"

#. type: Plain text
msgid "`operator.controller.resources` Around `700MiB` memory is required"
msgstr "`operator.controller.resources` 約 `700MiB` のメモリが必要"

#. type: Plain text
msgid "`operater.satelliteSet.resources` Around `700MiB` memory is required"
msgstr "`operater.satelliteSet.resources` 約 `700MiB` のメモリが必要"

#. type: Plain text
msgid ""
"`operator.satelliteSet.kernelModuleInjectionResources` If kernel modules are "
"compiled, 1GiB of memory is required."
msgstr ""
"`operator.satelliteSet.kernelModuleInjectionResources` カーネルモジュールをコ"
"ンパイルする場合、1GiBのメモリが必要"

#. type: Plain text
msgid ""
"Affinity and toleration determine where pods are scheduled on the cluster. "
"See the https://kubernetes.io/docs/concepts/scheduling-eviction/[kubernetes "
"docs on affinity and toleration].  This may be especially important for the "
"`operator.satelliteSet` and `csi.node*` values. To schedule a pod using a "
"LINSTOR persistent volume, the node requires a running LINSTOR satellite and "
"LINSTOR CSI pod."
msgstr ""
"Affinity と Toleration によって、ポッドがクラスター上でスケジュールされる場所"
"が決まります。詳細は https://kubernetes.io/docs/concepts/scheduling-eviction/"
"[Affinity と Toleration に関する Kubernetes のドキュメント] を参照ください。"
"これは `operator.satelliteSet` および `csi.node*` の値にとって特に重要です。"
"LINSTOR 永続ボリュームを使用してポッドをスケジュールするには、実行中の "
"LINSTOR サテライトと LINSTOR CSI ポッドがノードに必要です。"

#. type: Plain text
msgid ""
"Sets additional environments variables to pass to the Linstor Controller and "
"Satellites. Uses the same format as https://kubernetes.io/docs/tasks/inject-"
"data-application/define-environment-variable-container/[the `env` value of a "
"container]"
msgstr ""
"Linstor コントローラーとサテライトに渡す追加の環境変数を設定します。 https://"
"kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-"
"container/[コンテナ環境変数] と同じフォーマットを使用します。"

#. type: Plain text
msgid ""
"Sets additional properties on the Linstor Controller. Expects a simple "
"mapping of `<property-key>: <value>`."
msgstr ""
"Linstor コントローラーに追加のプロパティを設定します。単純な `<property-"
"key>: <value>` マッピングを使用します。"

#. type: Title =====
#, no-wrap
msgid "High Availability Deployment"
msgstr "高可用性デプロイメント"

#. type: Plain text
msgid ""
"To create a High Availability deployment of all components, take a look at "
"the https://github.com/piraeusdatastore/piraeus-operator/blob/b00fd34/doc/"
"scheduling.md[upstream guide] The default values are chosen so that scaling "
"the components to multiple replicas ensures that the replicas are placed on "
"different nodes. This ensures that a single node failures will not interrupt "
"the service."
msgstr ""
"すべてのコンポーネントの高可用性デプロイメントを作成するには https://github."
"com/piraeusdatastore/piraeus-operator/blob/b00fd34/doc/[アップストリームガイ"
"ド] を参照してください。デフォルト値は、複数のレプリカのコンポーネントが異な"
"るノードに配置されるようにスケーリングが行われるように選択されています。これ"
"により、単一ノードの障害によってサービスが中断されることはありません。"

#. type: Title =====
#, no-wrap
msgid "Monitoring with Prometheus"
msgstr "Prometheus による監視"

#. type: Plain text
msgid ""
"Starting with Linstor Operator v1.5.0, you can use https://prometheus.io/"
"[Prometheus] to monitor Linstor components.  The operator will set up "
"monitoring containers along the existing components and make them available "
"as a `Service`."
msgstr ""
"Linstor Operator v1.5.0 以降 https://prometheus.io/[Prometheus] を使用して "
"Linstor コンポーネントを監視できます。オペレーターは、既存のコンポーネントに"
"沿って監視コンテナーをセットアップし、それらを `Service` として利用できるよう"
"にします。"

#. type: Plain text
msgid ""
"If you use the https://prometheus-operator.dev/[Prometheus Operator], the "
"Linstor Operator will also set up the `ServiceMonitor` instances. The "
"metrics will automatically be collected by the Prometheus instance "
"associated to the operator, assuming https://prometheus-operator.dev/docs/"
"kube/monitoring-other-namespaces/[watching the Piraeus namespace is enabled]."
msgstr ""
"https://prometheus-operator.dev/[Prometheus Operator] を使用する場合、"
"Linstor オペレーターは `ServiceMonitor` インスタンスも設定します。 https://"
"prometheus-operator.dev/docs/kube/monitoring-other-namespaces/[Piraeus 名前空"
"間が有効] と仮定して、メトリックはオペレーターに関連付けられた Prometheus イ"
"ンスタンスによって自動的に収集されます。"

#. type: Plain text
msgid ""
"To disable exporting of metrics, set `operator.satelliteSet.monitoringImage` "
"to an empty value."
msgstr ""
"メトリックのエクスポートを無効にするには `operator.satelliteSet."
"monitoringImage` を空の値に設定します。"

#. type: Plain text
msgid "====== Linstor Controller Monitoring"
msgstr "====== Linstor コントローラー監視"

#. type: Plain text
msgid ""
"The Linstor Controller exports cluster-wide metrics. Metrics are exported on "
"the existing controller service, using the path https://linbit.com/drbd-user-"
"guide/linstor-guide-1_0-en/#s-linstor-monitoring[`/metrics`]."
msgstr ""
"Linstor コントローラーは、クラスター全体のメトリックをエクスポートします。メ"
"トリックは、パス https://linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-"
"linstor-monitoring[`/metrics`] を使用して、既存のコントローラーサービスにエク"
"スポートされます。"

#. type: Plain text
msgid "====== DRBD Resource Monitoring"
msgstr "====== DRBD リソース監視"

#. type: Plain text
msgid ""
"All satellites are bundled with a secondary container that uses https://"
"github.com/LINBIT/drbd-reactor/[`drbd-reactor`] to export metrics directly "
"from DRBD. The metrics are available on port 9942, for convenience a "
"headless service named `<linstorsatelliteset-name>-monitoring` is provided."
msgstr ""
"すべてのサテライトは https://github.com/LINBIT/drbd-reactor/[`drbd-reactor`] "
"を使用して DRBD から直接メトリックをエクスポートするセカンダリコンテナにバン"
"ドルされています。メトリックはポート 9942 で、ヘッドレスサービス "
"`<linstorsatelliteset-name>-monitoring` という名前で提供されています。"

#. type: Plain text
msgid ""
"If you want to disable the monitoring container, set `monitoringImage` to `"
"\"\"` in your LinstorSatelliteSet resource."
msgstr ""
"監視コンテナを無効にする場合は、LinstorSatelliteSet リソースで "
"`monitoringImage` を `\"\"` に設定します。"

#. type: Title ====
#, no-wrap
msgid "Deploying with an external LINSTOR controller"
msgstr "LINSTORオペレーターを使用したデプロイ"

#. type: Plain text
msgid ""
"The operator can configure the satellites and CSI plugin to use an existing "
"LINSTOR setup. This can be useful in cases where the storage infrastructure "
"is separate from the Kubernetes cluster. Volumes can be provisioned in "
"diskless mode on the Kubernetes nodes while the storage nodes will provide "
"the backing disk storage."
msgstr ""
"オペレーターは、既存の LINSTOR を使用するようにサテライトと CSI プラグインを"
"構成できます。これは、ストレージインフラストラクチャが Kubernetes クラスター"
"から分離されている場合に役立ちます。ボリュームは Kubernetes ノードでディスク"
"レスモードでプロビジョニングでき、ストレージノードが下位ディスクストレージを"
"提供します。"

#. type: Plain text
msgid ""
"To skip the creation of a LINSTOR Controller deployment and configure the "
"other components to use your existing LINSTOR Controller, use the following "
"options when running `helm install`:"
msgstr ""
"LINSTOR コントローラーデプロイメントの作成をスキップし、既存の LINSTOR コント"
"ローラーを使用するように他のコンポーネントを構成するには、 `helm install` を"
"実行するときに次のオプションを使用します。"

#. type: Plain text
msgid ""
"`operator.controller.enabled=false` This disables creation of the "
"`LinstorController` resource"
msgstr ""
"`operator.controller.enabled=false` これにより `LinstorController` リソースを"
"作成しなくなります。"

#. type: Plain text
msgid ""
"`operator.etcd.enabled=false` Since no LINSTOR Controller will run on "
"Kubernetes, no database is required."
msgstr ""
"`operator.etcd.enabled=false` Kubernetes では LINSTOR コントローラーが実行さ"
"れないため、データベースは必要ありません。"

#. type: Plain text
msgid ""
"`controllerEndpoint=<url-of-linstor-controller>` The HTTP endpoint of the "
"existing LINSTOR Controller. For example: `http://linstor.storage."
"cluster:3370/`"
msgstr ""
"`controllerEndpoint=<url-of-linstor-controller>` 既存の LINSTOR コントロー"
"ラーの HTTP エンドポイント。例： `http://linstor.storage.cluster:3370/`"

#. type: Plain text
msgid ""
"After all pods are ready, you should see the Kubernetes cluster nodes as "
"satellites in your LINSTOR setup."
msgstr ""
"すべての pod の準備が整うと、既存の LINSTOR 環境で Kubernetes クラスターノー"
"ドがサテライトとして表示されます。"

#. type: Plain text
msgid ""
"Your kubernetes nodes must be reachable using their IP by the controller and "
"storage nodes."
msgstr ""
"kubernetes ノードは、コントローラーとストレージノードが IP を使用して到達可能"
"である必要があります。"

#. type: Plain text
msgid ""
"Create a storage class referencing an existing storage pool on your storage "
"nodes."
msgstr ""
"ストレージノードで既存のストレージプールを参照するストレージクラスを作成しま"
"す。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-on-k8s\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  autoPlace: \"3\"\n"
"  storagePool: existing-storage-pool\n"
"  resourceGroup: linstor-on-k8s\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-on-k8s\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  autoPlace: \"3\"\n"
"  storagePool: existing-storage-pool\n"
"  resourceGroup: linstor-on-k8s\n"

#. type: Plain text
msgid ""
"You can provision new volumes by creating PVCs using your storage class. The "
"volumes will first be placed only on nodes with the given storage pool, i.e. "
"your storage infrastructure. Once you want to use the volume in a pod, "
"LINSTOR CSI will create a diskless resource on the Kubernetes node and "
"attach over the network to the diskful resource."
msgstr ""
"ストレージクラスを使用して PVC を作成することにより、新しいボリュームをプロビ"
"ジョニングできます。ボリュームは、最初に、指定されたストレージプールを持つ"
"ノード、つまりストレージインフラストラクチャにのみ配置されます。pod でボ"
"リュームを使用する場合、LINSTOR CSI は Kubernetes ノードにディスクレスリソー"
"スを作成し、ネットワークを介してディスクリソースに接続します。"

#. type: Title ====
#, no-wrap
msgid "Deploying with the Piraeus Operator"
msgstr "Piraeus オペレーターを使用したデプロイメント"

#. type: Plain text
msgid ""
"The community supported edition of the LINSTOR deployment in Kubernetes is "
"called Piraeus. The Piraeus project provides https://github.com/"
"piraeusdatastore/piraeus-operator[an operator] for deployment."
msgstr ""
"Kubernetes でコミュニティがサポートする LINSTOR デプロイメントのエディション"
"は、Piraeus と呼ばれます。Piraeus プロジェクトに関しては https://github.com/"
"piraeusdatastore/piraeus-operator[オペレータ] を参照ください。"

#. type: Title ===
#, no-wrap
msgid "Interacting with LINSTOR in Kubernetes"
msgstr "Kubernetes で LINSTOR の操作"

#. type: Plain text
msgid ""
"The Controller pod includes a LINSTOR Client, making it easy to interact "
"directly with LINSTOR.  For instance:"
msgstr ""
"コントローラポッドには LINSTOR クライアントが含まれているため、LINSTOR と直接"
"やり取りするのは簡単です。例えば："

#. type: delimited block -
#, no-wrap
msgid "kubectl exec deployment/linstor-op-cs-controller -- linstor storage-pool list\n"
msgstr "kubectl exec deployment/linstor-op-cs-controller -- linstor storage-pool list\n"

#. type: Plain text
msgid ""
"For a convenient shortcut to the above command, download https://github.com/"
"piraeusdatastore/kubectl-linstor/releases[`kubectl-linstor`] and install it "
"alongside `kubectl`. Then you can use `kubectl linstor` to get access to the "
"complete Linstor CLI"
msgstr ""
"上記のコマンドへの便利なショートカットを使用する場合、 https://github.com/"
"piraeusdatastore/kubectl-linstor/releases[`kubectl-linstor`] をダウンロード"
"し `kubectl` と一緒にインストールしてください。 `kubectl linstor` を使用して "
"Linstor CLI にアクセスできます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl linstor node list\n"
"╭───────────────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ Node                                      ┊ NodeType   ┊ Addresses                   ┊ State  ┊\n"
"╞═══════════════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ kube-node-01.test                         ┊ SATELLITE  ┊ 10.43.224.26:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-02.test                         ┊ SATELLITE  ┊ 10.43.224.27:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-03.test                         ┊ SATELLITE  ┊ 10.43.224.28:3366 (PLAIN)   ┊ Online ┊\n"
"┊ linstor-op-cs-controller-85b4f757f5-kxdvn ┊ CONTROLLER ┊ 172.24.116.114:3366 (PLAIN) ┊ Online ┊\n"
"╰───────────────────────────────────────────────────────────────────────────────────────────────╯\n"
msgstr ""
"$ kubectl linstor node list\n"
"╭───────────────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ Node                                      ┊ NodeType   ┊ Addresses                   ┊ State  ┊\n"
"╞═══════════════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ kube-node-01.test                         ┊ SATELLITE  ┊ 10.43.224.26:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-02.test                         ┊ SATELLITE  ┊ 10.43.224.27:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-03.test                         ┊ SATELLITE  ┊ 10.43.224.28:3366 (PLAIN)   ┊ Online ┊\n"
"┊ linstor-op-cs-controller-85b4f757f5-kxdvn ┊ CONTROLLER ┊ 172.24.116.114:3366 (PLAIN) ┊ Online ┊\n"

#. type: Plain text
msgid "It also expands references to PVCs to the matching Linstor resource"
msgstr "また参照を Linstor リソースにマッチする PVC に展開します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl linstor resource list -r pvc:my-namespace/demo-pvc-1 --all\n"
"pvc:my-namespace/demo-pvc-1 -> pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526\n"
"╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ ResourceName                             ┊ Node              ┊ Port ┊ Usage  ┊ Conns ┊    State   ┊ CreatedOn           ┊\n"
"╞═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526 ┊ kube-node-01.test ┊ 7000 ┊ Unused ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"┊ pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526 ┊ kube-node-02.test ┊ 7000 ┊ Unused ┊ Ok    ┊ TieBreaker ┊ 2021-02-05 09:16:08 ┊\n"
"┊ pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526 ┊ kube-node-03.test ┊ 7000 ┊ InUse  ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"
msgstr ""
"$ kubectl linstor resource list -r pvc:my-namespace/demo-pvc-1 --all\n"
"pvc:my-namespace/demo-pvc-1 -> pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526\n"
"╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ ResourceName                             ┊ Node              ┊ Port ┊ Usage  ┊ Conns ┊    State   ┊ CreatedOn           ┊\n"
"╞═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526 ┊ kube-node-01.test ┊ 7000 ┊ Unused ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"┊ pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526 ┊ kube-node-02.test ┊ 7000 ┊ Unused ┊ Ok    ┊ TieBreaker ┊ 2021-02-05 09:16:08 ┊\n"
"┊ pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526 ┊ kube-node-03.test ┊ 7000 ┊ InUse  ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n"

#. type: Plain text
msgid ""
"It also expands references of the form `pod:[<namespace>/]<podname>` into a "
"list resources in use by the pod."
msgstr ""
"また `pod:[<namespace>/]<podname>` 形式の参照をポッドで使用中のリソースリスト"
"へ展開します。"

#. type: Plain text
msgid ""
"This should only be necessary for investigating problems and accessing "
"advanced functionality.  Regular operation such as creating volumes should "
"be achieved via the <<s-kubernetes-basic-configuration-and-deployment,"
"Kubernetes integration>>."
msgstr ""
"これは、問題を調査し、高度な機能にアクセスするためにのみ必要です。ボリューム"
"の作成などの通常の操作は <<s-kubernetes-basic-configuration-and-deployment,"
"Kubernetes の操作>> を参照ください。"

#. type: Title ===
#, no-wrap
msgid "Basic Configuration and Deployment"
msgstr "基本的な構成とデプロイメント"

#. type: Plain text
msgid ""
"Once all linstor-csi __Pod__s are up and running, we can provision volumes "
"using the usual Kubernetes workflows."
msgstr ""
"すべての linstor-csi __Pod__ が稼働したら、通常のKubernetesワークフローを使用"
"してボリュームをプロビジョニングできます。"

#. type: Plain text
msgid ""
"Configuring the behavior and properties of LINSTOR volumes deployed via "
"Kubernetes is accomplished via the use of __StorageClass__es."
msgstr ""
"Kubernetes を介してデプロイされた LINSTOR ボリュームの動作とプロパティの構成"
"は __StorageClass__es を使用して行います。"

#. type: Plain text
msgid ""
"the \"resourceGroup\" parameter is mandatory. Usually you want it to be "
"unique and the same as the storage class name."
msgstr ""
"\"resourceGroup\" パラメータは必須です。通常、一意にしてストレージクラス名と"
"同じにします。"

#. type: Plain text
msgid ""
"Here below is the simplest practical _StorageClass_ that can be used to "
"deploy volumes:"
msgstr ""
"以下は、ボリュームのデプロイに使用できる最も単純で実用的な _StorageClass_ で"
"す。"

#. type: Block title
#, no-wrap
msgid "linstor-basic-sc.yaml"
msgstr "linstor-basic-sc.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1beta1\n"
"kind: StorageClass\n"
"metadata:\n"
"  # The name used to identify this StorageClass.\n"
"  name: linstor-basic-storage-class\n"
"  # The name used to match this StorageClass with a provisioner.\n"
"  # linstor.csi.linbit.com is the name that the LINSTOR CSI plugin uses to identify itself\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  # LINSTOR will provision volumes from the drbdpool storage pool configured\n"
"  # On the satellite nodes in the LINSTOR cluster specified in the plugin's deployment\n"
"  storagePool: \"drbdpool\"\n"
"  resourceGroup: \"linstor-basic-storage-class\"\n"
"  # Setting a fstype is required for \"fsGroup\" permissions to work correctly.\n"
"  # Currently supported: xfs/ext4\n"
"  csi.storage.k8s.io/fstype: xfs\n"
msgstr ""
"apiVersion: storage.k8s.io/v1beta1\n"
"kind: StorageClass\n"
"metadata:\n"
"  # The name used to identify this StorageClass.\n"
"  name: linstor-basic-storage-class\n"
"  # The name used to match this StorageClass with a provisioner.\n"
"  # linstor.csi.linbit.com is the name that the LINSTOR CSI plugin uses to identify itself\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  # LINSTOR will provision volumes from the drbdpool storage pool configured\n"
"  # On the satellite nodes in the LINSTOR cluster specified in the plugin's deployment\n"
"  storagePool: \"drbdpool\"\n"
"  resourceGroup: \"linstor-basic-storage-class\"\n"
"  # Setting a fstype is required for \"fsGroup\" permissions to work correctly.\n"
"  # Currently supported: xfs/ext4\n"
"  csi.storage.k8s.io/fstype: xfs\n"

#. type: Plain text
msgid ""
"DRBD options can be set as well in the parameters section. Valid keys are "
"defined in the https://app.swaggerhub.com/apis-docs/Linstor/Linstor[LINSTOR "
"REST-API] (e.g., `DrbdOptions/Net/allow-two-primaries: \"yes\"`)."
msgstr ""
"DRBD オプションは、パラメーターセクションでも設定できます。有効なキーは "
"https://app.swaggerhub.com/apis-docs/Linstor/Linstor[LINSTOR REST-API] (e."
"g., `DrbdOptions/Net/allow-two-primaries: \"yes\"`) で定義されています。"

#. type: Plain text
msgid "We can create the _StorageClass_ with the following command:"
msgstr "次のコマンドで _StorageClass_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f linstor-basic-sc.yaml\n"
msgstr "kubectl create -f linstor-basic-sc.yaml\n"

#. type: Plain text
msgid ""
"Now that our _StorageClass_ is created, we can now create a "
"_PersistentVolumeClaim_ which can be used to provision volumes known both to "
"Kubernetes and LINSTOR:"
msgstr ""
"_StorageClass_ が作成されたので、KubernetesとLINSTOR の両方に認識されるボ"
"リュームをプロビジョニングするために使用できる _PersistentVolumeClaim_ を作成"
"できます。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-pvc.yaml"
msgstr "my-first-linstor-volume-pvc.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"kind: PersistentVolumeClaim\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: my-first-linstor-volume\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"
msgstr ""
"kind: PersistentVolumeClaim\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: my-first-linstor-volume\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"

#. type: Plain text
msgid "We can create the _PersistentVolumeClaim_ with the following command:"
msgstr "次のコマンドで _PersistentVolumeClaim_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-pvc.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-pvc.yaml\n"

#. type: Plain text
msgid ""
"This will create a _PersistentVolumeClaim_ known to Kubernetes, which will "
"have a _PersistentVolume_ bound to it, additionally LINSTOR will now create "
"this volume according to the configuration defined in the `linstor-basic-"
"storage-class` _StorageClass_. The LINSTOR volume's name will be a UUID "
"prefixed with `csi-` This volume can be observed with the usual `linstor "
"resource list`. Once that volume is created, we can attach it to a pod. The "
"following _Pod_ spec will spawn a Fedora container with our volume attached "
"that busy waits so it is not unscheduled before we can interact with it:"
msgstr ""
"これは Kubernetes に認識されている _PersistentVolumeClaim_ を作成し、それに "
"_PersistentVolume_ がバインドされます。さらにLINSTORは `linstor-basic-"
"storage-class` _StorageClass_ で定義された設定に従ってこのボリュームを作成し"
"ます。 LINSTORボリュームの名前は `csi-` という接頭辞が付いたUUIDになります。"
"このボリュームは通常の `linstor resource list` で見ることができます。一度ボ"
"リュームが作成されたら、それを pod にアタッチすることができます。以下の pod "
"仕様はFedoraコンテナを作成し、ビジーウェイトするので、アンスケジュールされま"
"せん。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-pod.yaml"
msgstr "my-first-linstor-volume-pod.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: fedora\n"
"  namespace: default\n"
"spec:\n"
"  containers:\n"
"  - name: fedora\n"
"    image: fedora\n"
"    command: [/bin/bash]\n"
"    args: [\"-c\", \"while true; do sleep 10; done\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"my-first-linstor-volume\"\n"
msgstr ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: fedora\n"
"  namespace: default\n"
"spec:\n"
"  containers:\n"
"  - name: fedora\n"
"    image: fedora\n"
"    command: [/bin/bash]\n"
"    args: [\"-c\", \"while true; do sleep 10; done\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"my-first-linstor-volume\"\n"

#. type: Plain text
msgid "We can create the _Pod_ with the following command:"
msgstr "次のコマンドで _Pod_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-pod.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-pod.yaml\n"

#. type: Plain text
msgid ""
"Running `kubectl describe pod fedora` can be used to confirm that _Pod_ "
"scheduling and volume attachment succeeded."
msgstr ""
"`kubectl describe pod fedora` を実行することで _Pod_ がスケジュールされ、ボ"
"リュームが正しく割り当てられたのを確認できます。"

#. type: Plain text
msgid ""
"To remove a volume, please ensure that no pod is using it and then delete "
"the _PersistentVolumeClaim_ via `kubectl`. For example, to remove the volume "
"that we just made, run the following two commands, noting that the _Pod_ "
"must be unscheduled before the _PersistentVolumeClaim_ will be removed:"
msgstr ""
"ボリュームを削除するにはpodがもう使われていないことを確認してから `kubectl` "
"を使ってPersistentVolumeClaimを削除します。例えば、先ほど作成したボリュームを"
"削除するには、以下のコマンドを実行します。ボリュームが削除される前にpodのスケ"
"ジュールを解除する必要があります。"

#. type: delimited block -
#, no-wrap
msgid "kubectl delete pod fedora # unschedule the pod.\n"
msgstr "kubectl delete pod fedora # podをアンスケジュール。\n"

#. type: delimited block -
#, no-wrap
msgid "kubectl get pod -w # wait for pod to be unscheduled\n"
msgstr "kubectl get pod -w # podがアンスケジュールされるまで待つ\n"

#. type: delimited block -
#, no-wrap
msgid "kubectl delete pvc my-first-linstor-volume # remove the PersistentVolumeClaim, the PersistentVolume, and the LINSTOR Volume.\n"
msgstr "kubectl delete pvc my-first-linstor-volume # PersistentVolumeClaim、PersistentVolume、Linstorボリュームを削除する。\n"

#. type: Title ====
#, no-wrap
msgid "Available parameters in a StorageClass"
msgstr "StorageClass で使用可能なパラメータ"

#. type: Plain text
msgid ""
"The following storage class contains all currently available parameters to "
"configure the provisioned storage"
msgstr ""
"次のストレージクラスには、プロビジョニングされたストレージを構成するために現"
"在使用可能なすべてのパラメーターが含まれています。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: full-example\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  # CSI related parameters\n"
"  csi.storage.k8s.io/fstype: xfs\n"
"  # LINSTOR parameters\n"
"  autoPlace: \"2\"\n"
"  placementCount: \"2\"\n"
"  resourceGroup: \"full-example\"\n"
"  storagePool: \"my-storage-pool\"\n"
"  disklessStoragePool: \"DfltDisklessStorPool\"\n"
"  layerList: \"drbd storage\"\n"
"  placementPolicy: \"AutoPlace\"\n"
"  allowRemoteVolumeAccess: \"true\"\n"
"  encryption: \"true\"\n"
"  nodeList: \"diskful-a diskful-b\"\n"
"  clientList: \"diskless-a diskless-b\"\n"
"  replicasOnSame: \"zone=a\"\n"
"  replicasOnDifferent: \"rack\"\n"
"  disklessOnRemaining: \"false\"\n"
"  doNotPlaceWithRegex: \"tainted.*\"\n"
"  fsOpts: \"nodiscard\"\n"
"  mountOpts: \"noatime\"\n"
"  postMountXfsOpts: \"extsize 2m\"\n"
"  # Linstor properties\n"
"  property.linstor.csi.linbit.com/*: <x>\n"
"  # DRBD parameters\n"
"  DrbdOptions/*: <x>\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: full-example\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  # CSI related parameters\n"
"  csi.storage.k8s.io/fstype: xfs\n"
"  # LINSTOR parameters\n"
"  autoPlace: \"2\"\n"
"  placementCount: \"2\"\n"
"  resourceGroup: \"full-example\"\n"
"  storagePool: \"my-storage-pool\"\n"
"  disklessStoragePool: \"DfltDisklessStorPool\"\n"
"  layerList: \"drbd storage\"\n"
"  placementPolicy: \"AutoPlace\"\n"
"  allowRemoteVolumeAccess: \"true\"\n"
"  encryption: \"true\"\n"
"  nodeList: \"diskful-a diskful-b\"\n"
"  clientList: \"diskless-a diskless-b\"\n"
"  replicasOnSame: \"zone=a\"\n"
"  replicasOnDifferent: \"rack\"\n"
"  disklessOnRemaining: \"false\"\n"
"  doNotPlaceWithRegex: \"tainted.*\"\n"
"  fsOpts: \"nodiscard\"\n"
"  mountOpts: \"noatime\"\n"
"  postMountXfsOpts: \"extsize 2m\"\n"
"  # Linstor properties\n"
"  property.linstor.csi.linbit.com/*: <x>\n"
"  # DRBD parameters\n"
"  DrbdOptions/*: <x>\n"

#. type: Title ====
#, no-wrap
msgid "csi.storage.k8s.io/fstype"
msgstr "csi.storage.k8s.io/fstype"

#. type: Plain text
msgid ""
"Sets the file system type to create for `volumeMode: FileSystem` PVCs. "
"Currently supported are:"
msgstr ""
"`volumeMode: FileSystem` PVC 用に作成するファイルシステムタイプを設定します。"
"現在サポートされているのは次のとおりです。"

#. type: Plain text
msgid "`ext4` (default)"
msgstr "`ext4` (デフォルト)"

#. type: Plain text
msgid "`xfs`"
msgstr "`xfs`"

#. type: Title ====
#, no-wrap
msgid "autoPlace"
msgstr "autoPlace"

#. type: Plain text
msgid ""
"`autoPlace` is an integer that determines the amount of replicas a volume of "
"this _StorageClass_ will have.  For instance, `autoPlace: \"3\"` will "
"produce volumes with three-way replication. If neither `autoPlace` nor "
"`nodeList` are set, volumes will be <<s-autoplace-linstor,automatically "
"placed>> on one node."
msgstr ""
"`autoPlace` はこの _StorageClass_ が持つボリュームの複製数を指定します。例え"
"ば、 `autoPlace: \"3\"` は３つの複製をもつボリュームを生成します。 "
"`autoPlace` または `nodeList` が指定されていない場合は、１つのノード上にボ"
"リュームが生成されます。<<s-autoplace-linstor,自動配備>> を参照ください。"

#. type: Plain text
msgid ""
"If you use this option, you must not use <<s-kubernetes-nodelist,nodeList>>."
msgstr ""
"このオプションを使用する場合は、 <<s-kubernetes-nodelist,nodeList>> を使用し"
"ないでください。"

#. type: Plain text
msgid ""
"You have to use quotes, otherwise Kubernetes will complain about a malformed "
"_StorageClass_."
msgstr ""
"引用符を使用する必要があります。そうしないと、Kubernetes は不正な形式の "
"_StorageClass_ について文句を言います。"

#. type: Plain text
msgid ""
"This option (and all options which affect autoplacement behavior) modifies "
"the number of LINSTOR nodes on which the underlying storage for volumes will "
"be provisioned and is orthogonal to which _kubelets_ those volumes will be "
"accessible from."
msgstr ""
"このオプション（および自動配置の動作に影響を与えるすべてのオプション）は、ボ"
"リューム用のストレージがプロビジョニングされるLINSTORノードの数を変更し、 "
"_kubelets_ からこれらのボリュームにアクセスできるようにします。"

#. type: Title ====
#, no-wrap
msgid "placementCount"
msgstr "placementCount"

#. type: Plain text
msgid "`placementCount` is an alias for <<s-kubernetes-autoplace,`autoPlace`>>"
msgstr ""
"`placementCount` は <<s-kubernetes-autoplace,`autoPlace`>> のエイリアスです。"

#. type: Title ====
#, no-wrap
msgid "resourceGroup"
msgstr "resourceGroup"

#. type: Plain text
msgid ""
"The <<s-linstor-resource-groups, LINSTOR Resource Group (RG)>> to associate "
"with this StorageClass. If not set, a new RG will be created for each new "
"PVC."
msgstr ""
"この StorageClass に関連付けられた <<s-linstor-resource-groups, LINSTOR "
"Resource Group (RG)>> 。設定されていない場合、新しい PVC ごとに新しい RG が作"
"成されます。"

#. type: Title ====
#, no-wrap
msgid "storagePool"
msgstr "storagePool"

#. type: Plain text
msgid ""
"`storagePool` is the name of the LINSTOR <<s-storage_pools,storage pool>> "
"that will be used to provide storage to the newly-created volumes."
msgstr ""
"`storagePool` は LINSTOR <<s-storage_pools,ストレージプール>> の名前で、新規"
"に作成されたボリュームにストレージを供給するときに使用されます。"

#. type: Plain text
msgid ""
"Only nodes configured with this same _storage pool_ with be considered for "
"<<s-kubernetes-autoplace,autoplacement>>. Likewise, for _StorageClasses_ "
"using <<s-kubernetes-nodelist,nodeList>> all nodes specified in that list "
"must have this _storage pool_ configured on them."
msgstr ""
"これと同じ _storage pool_ で構成されたノードのみが <<s-kubernetes-autoplace,"
"autoplacement>> に使用されます。同様に <<s-kubernetes-nodelist,nodeList>> を"
"使う _StorageClasses_ ではそのリストで指定されたすべてのノードが _storage "
"pool_ を構成している必要があります。"

#. type: Title ====
#, no-wrap
msgid "disklessStoragePool"
msgstr "disklessStoragePool"

#. type: Plain text
msgid ""
"`disklessStoragePool` is an optional parameter that only effects LINSTOR "
"volumes assigned disklessly to _kubelets_ i.e., as clients. If you have a "
"custom _diskless storage pool_ defined in LINSTOR, you'll specify that here."
msgstr ""
"`disklessStoragePool` はオプションでノードが _kubelets_ にディスクレス、すな"
"わちクライアントとして割り当てられるようにするときに使用します。LINSTOR でカ"
"スタムディスクレスストレージプールが定義されている場合は、ここで指定します。"

#. type: Title ====
#, no-wrap
msgid "layerList"
msgstr "layerList"

#. type: Plain text
msgid ""
"A comma-separated list of layers to use for the created volumes. The "
"available layers and their order are described towards the end of <<s-"
"linstor-without-drbd, this section>>. Defaults to `drbd,storage`"
msgstr ""
"作成されたボリュームで使用するレイヤーのコンマ区切りのリスト。使用可能なレイ"
"ヤーと順序は <<s-linstor-without-drbd, このセクション>> の後半に記述されてい"
"ます。"

#. type: Title ====
#, no-wrap
msgid "placementPolicy"
msgstr "placementPolicy"

#. type: Plain text
msgid "Select from one of the available volume schedulers:"
msgstr "使用可能なボリュームスケジューラの 1 つから選択します。"

#. type: Plain text
msgid ""
"`AutoPlace`, the default: Use LINSTOR autoplace, influenced by <<s-"
"kubernetes-replicasonsame>> and <<s-kubernetes-replicasondifferent>>"
msgstr ""
"`AutoPlace`, デフォルト: LINSTOR autoplace を使う。 <<s-kubernetes-"
"replicasonsame>> と <<s-kubernetes-replicasondifferent>> の影響をうける。"

#. type: Plain text
msgid ""
"`FollowTopology`: Use CSI Topology information to place at least one volume "
"in each \"preferred\" zone. Only useable if CSI Topology is enabled."
msgstr ""
"`FollowTopology`: CSI トポロジ情報を使用して、各 \"preferred\" ゾーンに少なく"
"とも 1 つのボリュームを配置します。CSI トポロジが有効になっている場合にのみ使"
"用できます。"

#. type: Plain text
msgid "`Manual`: Use only the nodes listed in `nodeList` and `clientList`."
msgstr ""
"`Manual`: `nodeList` と `clientList` にリストされているノードのみを使用する。"

#. type: Plain text
msgid ""
"`Balanced`: **EXPERIMENTAL** Place volumes across failure domains, using the "
"least used storage pool on each selected node."
msgstr ""
"`Balanced`: **実験的** 選択した各ノードで最も使用されていないストレージプール"
"を使用して、障害のあるドメイン全体にボリュームを配置する。"

#. type: Title ====
#, no-wrap
msgid "allowRemoteVolumeAccess"
msgstr "allowRemoteVolumeAccess"

#. type: Plain text
msgid ""
"Disable remote access to volumes. This implies that volumes can only be "
"accessed from the initial set of nodes selected on creation. CSI Topology "
"processing is required to place pods on the correct nodes."
msgstr ""
"ボリュームへのリモートアクセスを無効にします。これは、ボリュームは、作成時に"
"選択されたノードの初期セットからのみアクセスできることを意味します。ポッドを"
"正しいノードに配置するには、CSI トポロジ処理が必要です。"

#. type: Title ====
#, no-wrap
msgid "encryption"
msgstr "encryption"

#. type: Plain text
msgid ""
"`encryption` is an optional parameter that determines whether to encrypt "
"volumes. LINSTOR must be <<s-linstor-encrypted-volumes,configured for "
"encryption>> for this to work properly."
msgstr ""
"`encryption` はオプションで、ボリュームを暗号化するかどうかを指定します。"
"LINSTOR はこれが正しく動作するように適切に設定されている必要があります。"

#. type: Title ====
#, no-wrap
msgid "nodeList"
msgstr "nodeList"

#. type: Plain text
msgid ""
"`nodeList` is a list of nodes for volumes to be assigned to. This will "
"assign the volume to each node and it will be replicated among all of them. "
"This can also be used to select a single node by hostname, but it's more "
"flexible to use <<s-kubernetes-replicasonsame,replicasOnSame>> to select a "
"single node."
msgstr ""
"`nodeList` はボリュームが割り当てられるノードのリストです。ボリュームがそれぞ"
"れのノードに割り当てられそれらの間で複製が行われます。これはホスト名で１つの"
"ノードを指定できますが、 これには <<s-kubernetes-replicasonsame,"
"replicasOnSame>> を使うほうが柔軟性があります。"

#. type: Plain text
msgid ""
"If you use this option, you must not use <<s-kubernetes-autoplace,"
"autoPlace>>."
msgstr ""
"このオプションを使用する場合は <<s-kubernetes-autoplace,autoPlace>> を使用し"
"ないでください。"

#. type: Plain text
msgid ""
"This option determines on which LINSTOR nodes the underlying storage for "
"volumes will be provisioned and is orthogonal from which _kubelets_ these "
"volumes will be accessible."
msgstr ""
"このオプションは、ボリュームのストレージをどのLINSTORノード上でプロビジョニン"
"グするかを決定し、 _kubelets_ からこれらのボリュームにアクセスできるようにし"
"ます。"

#. type: Title ====
#, no-wrap
msgid "clientList"
msgstr "clientList"

#. type: Plain text
msgid ""
"`clientList` is a list of nodes for diskless volumes to be assigned to. Use "
"in conjunction with <<s-kubernetes-nodelist>>."
msgstr ""
"`clientList` は、割り当てられるディスクレスボリュームのノードのリストです。 "
"<<s-kubernetes-nodelist>> と組み合わせて使用します。"

#. type: Title ====
#, no-wrap
msgid "replicasOnSame"
msgstr "replicasOnSame"

#.  These should link to the linstor documentation about node properties, but those
#.  do not exist at the time of this commit.
#. type: Plain text
msgid ""
"`replicasOnSame` is a list of `key` or `key=value` items used as "
"autoplacement selection labels when <<s-kubernetes-autoplace,autoplace>> is "
"used to determine where to provision storage. These labels correspond to "
"LINSTOR node properties."
msgstr ""
"`replicasOnSame` は自動配置選択ラベルとして使用される `key` または "
"`key=value` アイテムのリストです。これは <<s-kubernetes-autoplace,"
"autoplace>> がストレージをプロビジョニングする場所を決定するために使用されま"
"す。これらのラベルは、LINSTOR ノードのプロパティに対応しています。"

#. type: Plain text
msgid ""
"LINSTOR node properties are different from kubernetes node labels. You can "
"see the properties of a node by running `linstor node list-properties "
"<nodename>`. You can also set additional properties (\"auxiliary properties"
"\"): `linstor node set-property <nodename> --aux <key> <value>`."
msgstr ""
"LINSTOR ノードのプロパティは、kubernetes ノードのラベルとは異なります。"
"`linstor node list-properties <nodename>` を実行すると、ノードのプロパティを"
"確認できます。`linstor node set-property <nodename> --aux <key> <value>` で追"
"加のプロパティ（\"補助プロパティ\"）を設定することもできます。"

#. type: Plain text
msgid ""
"Let's explore this behavior with examples assuming a LINSTOR cluster such "
"that `node-a` is configured with the following auxiliary property `zone=z1` "
"and `role=backups`, while `node-b` is configured with only `zone=z1`."
msgstr ""
"`node-a` が補助プロパティ `zone=z1`, `role=backups` で、 `node-b` が "
"`zone=z1` のみで構成されているような LINSTOR クラスターを想定した例でこの動作"
"を調べてみましょう。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"1\"` and "
"`replicasOnSame: \"zone=z1 role=backups\"`, then all volumes created from "
"that _StorageClass_ will be provisioned on `node-a`, since that is the only "
"node with all of the correct key=value pairs in the LINSTOR cluster. This is "
"the most flexible way to select a single node for provisioning."
msgstr ""
"`autoPlace: \"1\"` と `replicasOnSame: \"zone=z1 role=backups\"` を持つ "
"_StorageClass_ を設定すると、この _StorageClass_ から生成されるすべてのボ"
"リュームは `node-a` にプロビジョニングされます。これは LINSTOR クラスタ内です"
"べての key = value ペアを持つ唯一のノードだからです。これは、プロビジョニング"
"に１つのノードを選択する最も柔軟な方法です。"

#. type: Plain text
msgid ""
"This guide assumes LINSTOR CSI version 0.10.0 or newer. All properties "
"referenced in `replicasOnSame` and `replicasOnDifferent` are interpreted as "
"auxiliary properties. If you are using an older version of LINSTOR CSI, you "
"need to add the `Aux/` prefix to all property names. So `replicasOnSame: "
"\"zone=z1\"` would be `replicasOnSame: \"Aux/zone=z1\"` Using `Aux/` "
"manually will continue to work on newer LINSTOR CSI versions."
msgstr ""
"このガイドは、LINSTOR CSI バージョン 0.10.0 以降を想定しています。 "
"`replicasOnSame` および `replicasOnDifferent` で参照されるすべてのプロパティ"
"は、補助プロパティとして解釈されます。古いバージョンの LINSTOR CSI を使用して"
"いる場合は、すべてのプロパティ名に `Aux/` プレフィックスを追加する必要があり"
"ます。したがって、 `replicasOnSame: \"zone=z1\"` は `replicasOnSame: \"Aux/"
"zone=z1\"` になります。 `Aux/` を手動で追加すると、新しい LINSTOR CSI バー"
"ジョンで引き続き機能します。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"1\"` and "
"`replicasOnSame: \"zone=z1\"`, then volumes will be provisioned on either "
"`node-a` or `node-b` as they both have the `zone=z1` aux prop."
msgstr ""
"`autoPlace: \"1\"` と `replicasOnSame: \"zone=z1\"` を持つ _StorageClass_ を"
"設定すると、ボリュームは `node-a` か `node-b` のどちらかにプロビジョニングさ"
"れます。これは、両方が `zone=z1` aux prop を持つからです。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"2\"` and "
"`replicasOnSame: \"zone=z1 role=backups\"`, then provisioning will fail, as "
"there are not two or more nodes that have the appropriate auxiliary "
"properties."
msgstr ""
"`autoPlace: \"2\"` と `replicasOnSame: \"zone=z1 role=backups\"` を持つ "
"_StorageClass_ を設定すると、適切な補助プロパティを持つノードが2つ以上ないた"
"めプロビジョニングは失敗します。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"2\"` and "
"`replicasOnSame: \"zone=z1\"`, then volumes will be provisioned on both "
"`node-a` and `node-b` as they both have the `zone=z1` aux prop."
msgstr ""
"`autoPlace: \"2\"` と `replicasOnSame: \"zone=z1\"` を持つ _StorageClass_ を"
"設定すると、ボリュームは `node-a` と `node-b` の両方にプロビジョニングされま"
"す。これは、両方が `zone=z1` aux prop を持つからです。"

#. type: Plain text
msgid ""
"You can also use a property key without providing a value to ensure all "
"replicas are placed on nodes with the same property value, with caring about "
"the particular value. Assuming there are 4 nodes, `node-a1` and `node-a2` "
"are configured with `zone=a`. `node-b1` and `node-b2` are configured with "
"`zone=b`. Using `autoPlace: \"2\"` and `replicasOnSame: \"zone\"` will place "
"on either `node-a1` and `node-a2` OR on `node-b1` and `node-b2`."
msgstr ""
"値を指定せずにプロパティキーを使用して、特定の値を考慮しながら、すべてのレプ"
"リカが同じプロパティ値を持つノードに配置されるようにすることもできます。 4つ"
"のノードがあると仮定し `node-a1` と `node-a2` は `zone=a` で構成、 `node-b1` "
"と `node-b2` は `zone=b` で構成されているとします。 `autoPlace: \"2\"` と "
"`replicasOnSame: \"zone\"` を使用すると `node-a1` と `node-a2`、または `node-"
"b1` と `node-b2` のいずれかに配置されます。"

#. type: Title ====
#, no-wrap
msgid "replicasOnDifferent"
msgstr "replicasOnDifferent"

#. type: Plain text
msgid ""
"`replicasOnDifferent` takes a list of properties to consider, same as <<s-"
"kubernetes-replicasonsame,replicasOnSame>>.  There are two modes of using "
"`replicasOnDifferent`:"
msgstr ""
"`replicasOnDifferent` は <<s-kubernetes-replicasonsame,replicasOnSame>> と同"
"じように、考慮すべきプロパティのリストを取ります。 `replicasOnDifferent` の使"
"用には 2 つのモードがあります。"

#. type: Plain text
msgid "Preventing volume placement on specific nodes:"
msgstr "特定のノードでのボリューム配置の防止:"

#. type: Plain text
msgid ""
"If a value is given for the property, the nodes which have that property-"
"value pair assigned will be considered last."
msgstr ""
"プロパティに値が指定されている場合、そのプロパティと値のペアが割り当てられて"
"いるノードが最後に考慮されます。"

#. type: Plain text
msgid ""
"Example: `replicasOnDifferent: \"no-csi-volumes=true\"` will place no volume "
"on any node with property `no-csi-volumes=true` unless there are not enough "
"other nodes to fulfill the `autoPlace` setting."
msgstr ""
"例： `replicasOnDifferent: \"no-csi-volumes=true\"` は `autoPlace` 設定を満た"
"すのに十分なノードが他にない限り、プロパティ `no-csi-volumes=true` を持つノー"
"ドにボリュームを配置しません。"

#. type: Plain text
msgid "Distribute volumes across nodes with different values for the same key:"
msgstr "同じキーの値が異なるノード間でボリュームを分散します。"

#. type: Plain text
msgid ""
"If no property value is given, LINSTOR will place the volumes across nodes "
"with different values for that property if possible."
msgstr ""
"プロパティ値が指定されていない場合、LINSTOR は、可能であれば、そのプロパティ"
"の値が異なるノード間でボリュームを配置します。"

#. type: Plain text
msgid ""
"Example: Assuming there are 4 nodes, `node-a1` and `node-a2` are configured "
"with `zone=a`. `node-b1` and `node-b2` are configured with `zone=b`. Using a "
"_StorageClass_ with `autoPlace: \"2\"` and `replicasOnDifferent: \"zone\"`, "
"LINSTOR will create one replica on either `node-a1` or `node-a2` _and_ one "
"replica on either `node-b1` or `node-b2`."
msgstr ""
"例： 4 つのノードがあると仮定し `node-a1` と `node-a2` は `zone=a` で、 "
"`node-b1` と `node-b2` は `zone=b` で構成されているとします。 _StorageClass_ "
"を `autoPlace: \"2\"` および `replicasOnDifferent: \"zone\"` で使用すると、"
"LINSTOR は `node-a1` または `node-a2` のいずれかに 1 つのレプリカを作成し、 "
"`node-b1` または `node-b2` のいずれかにもう 1 つのレプリカを作成します。"

#. type: Title ====
#, no-wrap
msgid "disklessOnRemaining"
msgstr "disklessOnRemaining"

#. type: Plain text
msgid ""
"Create a diskless resource on _all_ nodes that were not assigned a diskful "
"resource."
msgstr ""
"ディスクフルリソースが割り当てられていないすべてのノードにディスクレスリソー"
"スを作成します。"

#. type: Title ====
#, no-wrap
msgid "doNotPlaceWithRegex"
msgstr "doNotPlaceWithRegex"

#. type: Plain text
msgid ""
"Do not place the resource on a node which has a resource with a name "
"matching the regex."
msgstr "正規表現と一致する名前のリソースを持つノードにリソースを配置しない。"

#. type: Title ====
#, no-wrap
msgid "fsOpts"
msgstr "fsOpts"

#. type: Plain text
msgid ""
"`fsOpts` is an optional parameter that passes options to the volume's "
"filesystem at creation time."
msgstr ""
"`fsOpts` はオプションで、作成時にボリュームのファイルシステムに渡すオプション"
"を指定します。"

#. type: Plain text
msgid ""
"Please note these values are specific to your chosen <<s-kubernetes-"
"filesystem, filesystem>>."
msgstr ""
"これらの値は選択した <<s-kubernetes-filesystem, filesystem>> 固有です。"

#. type: Title ====
#, no-wrap
msgid "mountOpts"
msgstr "mountOpts"

#. type: Plain text
msgid ""
"`mountOpts` is an optional parameter that passes options to the volume's "
"filesystem at mount time."
msgstr ""
"`mountOpts` はオプションで、マウント時にボリュームのファイルシステムに渡すオ"
"プションを指定します。"

#. type: Title ====
#, no-wrap
msgid "postMountXfsOpts"
msgstr "postMountXfsOpts"

#. type: Plain text
msgid ""
"Extra arguments to pass to `xfs_io`, which gets called before right before "
"first use of the volume."
msgstr ""
"ボリュームを最初に使用する直前に呼び出される `xfs_io` に渡す追加の引数。"

#. type: Title ====
#, no-wrap
msgid "property.linstor.csi.linbit.com/*"
msgstr "property.linstor.csi.linbit.com/*"

#. type: Plain text
msgid ""
"Parameters starting with `property.linstor.csi.linbit.com/` are translated "
"to Linstor properties that are set on the <<s-linstor-resource-groups,"
"Resource Group>> associated with the StorageClass."
msgstr ""
"`property.linstor.csi.linbit.com/` で始まるパラメータは StorageClass の <<s-"
"linstor-resource-groups,Resource Group>> に設定される Linstor プロパティに変"
"換されます。"

#. type: Plain text
msgid "For example, to set `DrbdOptions/auto-quorum` to `disabled`, use:"
msgstr ""
"たとえば `DrbdOptions/auto-quorum` を `disabled` に設定するには、次を使用しま"
"す。"

#. type: delimited block -
#, no-wrap
msgid "property.linstor.csi.linbit.com/DrbdOptions/auto-quorum: disabled\n"
msgstr "property.linstor.csi.linbit.com/DrbdOptions/auto-quorum: disabled\n"

#. type: Plain text
msgid ""
"The full list of options is available https://app.swaggerhub.com/apis-docs/"
"Linstor/Linstor/1.7.0#/developers/resourceDefinitionModify[here]"
msgstr ""
"オプションの完全なリストは https://app.swaggerhub.com/apis-docs/Linstor/"
"Linstor/1.7.0#/developers/resourceDefinitionModify[こちら] で入手できます。"

#. type: Title ====
#, no-wrap
msgid "DrbdOptions/*: <x>"
msgstr "DrbdOptions/*: <x>"

#. type: Plain text
msgid ""
"This option is deprecated, use the more general <<s-kubernetes-storage-class-"
"properties, `property.linstor.csi.linbit.com/*`>> form."
msgstr ""
"このオプションは非推奨です。より一般的な <<s-kubernetes-storage-class-"
"properties, `property.linstor.csi.linbit.com/*`>> を使用してください。"

#. type: Plain text
msgid ""
"Advanced DRBD options to pass to LINSTOR. For example, to change the "
"replication protocol, use `DrbdOptions/Net/protocol: \"A\"`."
msgstr ""
"LINSTOR に渡す高度な DRBD オプション。たとえば、レプリケーションプロトコルを"
"変更するには `DrbdOptions/Net/protocol: \"A\"` を使用します。"

#. type: Title ===
#, no-wrap
msgid "Snapshots"
msgstr "スナップショット"

#. type: Plain text
msgid ""
"Creating <<s-linstor-snapshots, snapshots>> and creating new volumes from "
"snapshots is done via the use of __VolumeSnapshot__s, "
"__VolumeSnapshotClass__es, and __PVC__s."
msgstr ""
"<<s-linstor-snapshots, スナップショット>> の作成とスナップショットから新規ボ"
"リュームを作成するには __VolumeSnapshot__, __VolumeSnapshotClass__,  __PVC__ "
"を通して行われます。"

#. type: Title ====
#, no-wrap
msgid "Adding snapshot support"
msgstr "スナップショットサポートの追加"

#. type: Plain text
msgid ""
"LINSTOR supports the volume snapshot feature, which is currently in beta. To "
"use it, you need to install a cluster wide snapshot controller. This is done "
"either by the cluster provider, or you can use the LINSTOR chart."
msgstr ""
"LINSTOR はボリュームのスナップショット機能をサポートしています。これは現在"
"ベータ版です。これを使用するには、クラスター全体のスナップショットコントロー"
"ラーをインストールする必要があります。これは、クラスタープロバイダーによって"
"行われるか、LINSTOR チャートを使用できます。"

#. type: Plain text
msgid ""
"By default, the LINSTOR chart will install its own snapshot controller. This "
"can lead to conflict in some cases:"
msgstr ""
"デフォルトでは、LINSTOR チャートは独自のスナップショットコントローラーをイン"
"ストールします。これにより、場合によっては競合が発生する可能性があります。"

#. type: Plain text
msgid "the cluster already has a snapshot controller"
msgstr "クラスターにはすでにスナップショットコントローラーがある"

#. type: Plain text
msgid "the cluster does not meet the minimal version requirements (>= 1.17)"
msgstr "クラスターが最小バージョンの要件を満たしていない (>= 1.17)"

#. type: Plain text
msgid ""
"In such a case, installation of the snapshot controller can be disabled:"
msgstr ""
"このような場合、スナップショットコントローラーのインストールを無効にすること"
"ができます。"

#. type: delimited block -
#, no-wrap
msgid "--set csi-snapshotter.enabled=false\n"
msgstr "--set csi-snapshotter.enabled=false\n"

#. type: Title ====
#, no-wrap
msgid "Using volume snapshots"
msgstr "ボリュームスナップショットの使用"

#. type: Plain text
msgid "Then we can create our _VolumeSnapshotClass_:"
msgstr "それで _VolumeSnapshotClass_ を作成できます。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-snapshot-class.yaml"
msgstr "my-first-linstor-snapshot-class.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: snapshot.storage.k8s.io/v1beta1\n"
"kind: VolumeSnapshotClass\n"
"metadata:\n"
"  name: my-first-linstor-snapshot-class\n"
"driver: linstor.csi.linbit.com\n"
"deletionPolicy: Delete\n"
msgstr ""
"apiVersion: snapshot.storage.k8s.io/v1beta1\n"
"kind: VolumeSnapshotClass\n"
"metadata:\n"
"  name: my-first-linstor-snapshot-class\n"
"driver: linstor.csi.linbit.com\n"
"deletionPolicy: Delete\n"

#. type: Plain text
msgid "Create the _VolumeSnapshotClass_ with `kubectl`:"
msgstr "`kubectl` を使用して _VolumeSnapshotClass_ を作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-snapshot-class.yaml\n"
msgstr "kubectl create -f my-first-linstor-snapshot-class.yaml\n"

#. type: Plain text
msgid ""
"Now we will create a volume snapshot for the volume that we created above. "
"This is done with a _VolumeSnapshot_:"
msgstr ""
"次に上記で作成したボリュームのボリュームスナップショットを作成します。これは "
"_VolumeSnapshot_ を使用します。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-snapshot.yaml"
msgstr "my-first-linstor-snapshot.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: snapshot.storage.k8s.io/v1beta1\n"
"kind: VolumeSnapshot\n"
"metadata:\n"
"  name: my-first-linstor-snapshot\n"
"spec:\n"
"  volumeSnapshotClassName: my-first-linstor-snapshot-class\n"
"  source:\n"
"    persistentVolumeClaimName: my-first-linstor-volume\n"
msgstr ""
"apiVersion: snapshot.storage.k8s.io/v1beta1\n"
"kind: VolumeSnapshot\n"
"metadata:\n"
"  name: my-first-linstor-snapshot\n"
"spec:\n"
"  volumeSnapshotClassName: my-first-linstor-snapshot-class\n"
"  source:\n"
"    persistentVolumeClaimName: my-first-linstor-volume\n"

#. type: Plain text
msgid "Create the _VolumeSnapshot_ with `kubectl`:"
msgstr "`kubectl` を使用して _VolumeSnapshot_ を作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-snapshot.yaml\n"
msgstr "kubectl create -f my-first-linstor-snapshot.yaml\n"

#. type: Plain text
msgid "You can check that the snapshot creation was successful"
msgstr "スナップショットの作成が成功したことを確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl describe volumesnapshots.snapshot.storage.k8s.io my-first-linstor-snapshot\n"
"...\n"
"Spec:\n"
"  Source:\n"
"    Persistent Volume Claim Name:  my-first-linstor-snapshot\n"
"  Volume Snapshot Class Name:      my-first-linstor-snapshot-class\n"
"Status:\n"
"  Bound Volume Snapshot Content Name:  snapcontent-b6072ab7-6ddf-482b-a4e3-693088136d2c\n"
"  Creation Time:                       2020-06-04T13:02:28Z\n"
"  Ready To Use:                        true\n"
"  Restore Size:                        500Mi\n"
msgstr ""
"kubectl describe volumesnapshots.snapshot.storage.k8s.io my-first-linstor-snapshot\n"
"...\n"
"Spec:\n"
"  Source:\n"
"    Persistent Volume Claim Name:  my-first-linstor-snapshot\n"
"  Volume Snapshot Class Name:      my-first-linstor-snapshot-class\n"
"Status:\n"
"  Bound Volume Snapshot Content Name:  snapcontent-b6072ab7-6ddf-482b-a4e3-693088136d2c\n"
"  Creation Time:                       2020-06-04T13:02:28Z\n"
"  Ready To Use:                        true\n"
"  Restore Size:                        500Mi\n"

#. type: Plain text
msgid "Finally, we'll create a new volume from the snapshot with a _PVC_."
msgstr "最後にスナップショットから _PVC_ で新しいボリュームを作成します。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-from-snapshot.yaml"
msgstr "my-first-linstor-volume-from-snapshot.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: PersistentVolumeClaim\n"
"metadata:\n"
"  name: my-first-linstor-volume-from-snapshot\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  dataSource:\n"
"    name: my-first-linstor-snapshot\n"
"    kind: VolumeSnapshot\n"
"    apiGroup: snapshot.storage.k8s.io\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"
msgstr ""
"apiVersion: v1\n"
"kind: PersistentVolumeClaim\n"
"metadata:\n"
"  name: my-first-linstor-volume-from-snapshot\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  dataSource:\n"
"    name: my-first-linstor-snapshot\n"
"    kind: VolumeSnapshot\n"
"    apiGroup: snapshot.storage.k8s.io\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"

#. type: Plain text
msgid "Create the _PVC_ with `kubectl`:"
msgstr "`kubectl` を使用して _PVC_ を作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-from-snapshot.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-from-snapshot.yaml\n"

#. type: Title ===
#, no-wrap
msgid "Volume Accessibility"
msgstr "ボリュームへのアクセス"

#.  This only covers DRBD volumes, section might change if linked docs are updated.
#. type: Plain text
msgid ""
"LINSTOR volumes are typically accessible both locally and <<s-drbd_clients,"
"over the network>>."
msgstr ""
"LINSTORボリュームは通常、ローカルか <<s-drbd_clients,クライアント>> としてア"
"クセスされます。"

#. type: Plain text
msgid ""
"By default, the CSI plugin will attach volumes directly if the _Pod_ happens "
"to be scheduled on a _kubelet_ where its underlying storage is present. "
"However, _Pod_ scheduling does not currently take volume locality into "
"account. The <<s-kubernetes-replicasonsame,replicasOnSame>> parameter can be "
"used to restrict where the underlying storage may be provisioned, if locally "
"attached volumes are desired."
msgstr ""
"_Pod_ がその基礎となるストレージが存在する _kubelet_ にスケジュールされている"
"場合、デフォルトでCSIプラグインはボリュームを直接接続します。しかしPod スケ"
"ジューリングは現在ボリュームがローカルかどうか考慮に入れていません。 <<s-"
"kubernetes-replicasonsame,replicasOnSame>> パラメータで、ローカルに接続された"
"ボリュームが必要な場合、ストレージをプロビジョニングできる場所を制限できま"
"す。"

#. type: Plain text
msgid ""
"See <<s-kubernetes-placementpolicy>> to see how this default behavior can be "
"modified."
msgstr ""
"このデフォルトの動作を変更するには <<s-kubernetes-placementpolicy>> を参照く"
"ださい。"

#. type: Title ===
#, no-wrap
msgid "Volume Locality Optimization using Stork"
msgstr "Stork を使用したボリューム局所性最適化"

#. type: Plain text
msgid ""
"Stork is a scheduler extender plugin for Kubernetes which allows a storage "
"driver to give the Kubernetes scheduler hints about where to place a new pod "
"so that it is optimally located for storage performance. You can learn more "
"about the project on its https://portworx.com/stork-storage-orchestration-"
"kubernetes/[GitHub page]."
msgstr ""
"Stork は、Kubernetes のスケジューラ拡張プラグインであり、ストレージドライバー"
"は、Kubernetes スケジューラーに新しいポッドを配置する場所に関するヒントを与"
"え、ストレージパフォーマンスのために最適な場所に配置できるようにします。プロ"
"ジェクトの詳細については、 https://portworx.com/stork-storage-orchestration-"
"kubernetes/[GitHub ページ] 参照ください。"

#. type: Plain text
msgid ""
"The next Stork release will include the LINSTOR driver by default.  In the "
"meantime, you can use a custom-built Stork container by LINBIT which "
"includes a LINSTOR driver, https://hub.docker.com/repository/docker/linbit/"
"stork[available on Docker Hub]"
msgstr ""
"次の Stork リリースには、デフォルトで LINSTOR ドライバーが含まれます。それま"
"での間は https://hub.docker.com/repository/docker/linbit/stork[Docker ハブで"
"利用可能] から LINBIT によってカスタム構築された LINSTOR ドライバー を含む "
"Stork コンテナを使用できます。"

#. type: Title ====
#, no-wrap
msgid "Using Stork"
msgstr "Stork の使用"

#. type: Plain text
msgid ""
"By default, the operator will install the components required for Stork, and "
"register a new scheduler called `stork` with Kubernetes. This new scheduler "
"can be used to place pods near to their volumes."
msgstr ""
"デフォルトでは、オペレーターは Stork に必要なコンポーネントをインストールし、"
"Kubernetes に `stork` という新しいスケジューラーを登録します。この新しいスケ"
"ジューラを使用して、ポッドをボリュームの近くに配置できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: busybox\n"
"  namespace: default\n"
"spec:\n"
"  schedulerName: stork <1>\n"
"  containers:\n"
"  - name: busybox\n"
"    image: busybox\n"
"    command: [\"tail\", \"-f\", \"/dev/null\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"test-volume\"\n"
msgstr ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: busybox\n"
"  namespace: default\n"
"spec:\n"
"  schedulerName: stork <1>\n"
"  containers:\n"
"  - name: busybox\n"
"    image: busybox\n"
"    command: [\"tail\", \"-f\", \"/dev/null\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"test-volume\"\n"

#. type: Plain text
msgid "Add the name of the scheduler to your pod."
msgstr "スケジューラの名前をポッドに追加します。"

#. type: Plain text
msgid "Deployment of the scheduler can be disabled using"
msgstr "スケジューラのデプロイメントは以下で無効にできます。"

#. type: delimited block -
#, no-wrap
msgid "--set stork.enabled=false\n"
msgstr "--set stork.enabled=false\n"

#. type: Title ===
#, no-wrap
msgid "Fast workload fail over using the High Availability Controller"
msgstr "高可用性コントローラーを使用した高速ワークロードフェイルオーバー"

#. type: Plain text
msgid ""
"The LINSTOR High Availability Controller (HA Controller) will speed up the "
"fail over process for stateful workloads using LINSTOR for storage.  It is "
"deployed by default, and can be scaled to multiple replicas:"
msgstr ""
"LINSTOR 高可用性コントローラー（HA コントローラー）は、ストレージに LINSTOR "
"を使用して、ステートフルワークロードのフェイルオーバープロセスを高速化しま"
"す。デフォルトでデプロイされ、複数のレプリカにスケーリングされます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get pods -l app.kubernetes.io/name=linstor-op-ha-controller\n"
"NAME                                       READY   STATUS    RESTARTS   AGE\n"
"linstor-op-ha-controller-f496c5f77-fr76m   1/1     Running   0          89s\n"
"linstor-op-ha-controller-f496c5f77-jnqtc   1/1     Running   0          89s\n"
"linstor-op-ha-controller-f496c5f77-zcrqg   1/1     Running   0          89s\n"
msgstr ""
"$ kubectl get pods -l app.kubernetes.io/name=linstor-op-ha-controller\n"
"NAME                                       READY   STATUS    RESTARTS   AGE\n"
"linstor-op-ha-controller-f496c5f77-fr76m   1/1     Running   0          89s\n"
"linstor-op-ha-controller-f496c5f77-jnqtc   1/1     Running   0          89s\n"
"linstor-op-ha-controller-f496c5f77-zcrqg   1/1     Running   0          89s\n"

#. type: Plain text
msgid ""
"In the event of node failures, Kubernetes is very conservative in "
"rescheduling stateful workloads. This means it can take more than 15 minutes "
"for Pods to be moved from unreachable nodes. With the information available "
"to DRBD and LINSTOR, this process can be sped up significantly."
msgstr ""
"ノードに障害が発生した場合、Kubernetes はステートフルワークロードの再スケ"
"ジュールを非常に慎重に行います。これは、ポッドが到達不能なノードから移動され"
"るまでに 15 分以上かかる可能性があることを意味します。DRBD と LINSTOR が利用"
"できる情報により、このプロセスを大幅にスピードアップできます。"

#. type: Plain text
msgid "The HA Controller enables fast fail over for:"
msgstr "HA コントローラーは、以下に対して高速フェイルオーバーを有効にします。"

#. type: Plain text
msgid ""
"Pods using DRBD backed PersistentVolumes. The DRBD resources must make use "
"of the quorum functionality LINSTOR will configure this automatically for "
"volumes with 2 or more replicas in clusters with at least 3 nodes."
msgstr ""
"DRBD でバックアップされた PersistentVolumes を使用するポッド。DRBD リソース"
"は、クォーラム機能を使用する必要があります。LINSTOR は、少なくとも 3 つのノー"
"ドを持つクラスター内の 2 つ以上のレプリカを持つボリュームに対してこれを自動的"
"に構成します。"

#. type: Plain text
msgid ""
"The workload does not use any external resources in a way that could lead to "
"a conflicting state if two instances try to use the external resource at the "
"same time. While DRBD can ensure that only one instance can have write "
"access to the storage, it cannot provide the same guarantee for external "
"resources."
msgstr ""
"ワークロードが、2 つのインスタンスが同時に外部リソースを使用しようとした場合"
"に、競合状態につながる可能性のある方法で外部リソースを使用していないとき。 "
"DRBD は、1 つのインスタンスのみがストレージへの書き込みアクセス権を持つことが"
"できることを保証できますが、外部リソースに対して同じ保証を提供することはでき"
"ません。"

#. type: Plain text
msgid ""
"The Pod is marked with the `linstor.csi.linbit.com/on-storage-lost: remove` "
"label."
msgstr ""
"ポッドに `linstor.csi.linbit.com/on-storage-lost: remove` ラベルが付いてい"
"る。"

#. type: Title ====
#, no-wrap
msgid "Example"
msgstr "サンプル"

#. type: Plain text
msgid ""
"The following StatefulSet uses the HA Controller to manage fail over of a "
"pod."
msgstr ""
"次の StatefulSet は、HA コントローラーを使用してポッドのフェイルオーバーを管"
"理します。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: apps/v1\n"
"kind: StatefulSet\n"
"metadata:\n"
"  name: my-stateful-app\n"
"spec:\n"
"  serviceName: my-stateful-app\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/name: my-stateful-app\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app.kubernetes.io/name: my-stateful-app\n"
"        linstor.csi.linbit.com/on-storage-lost: remove <1>\n"
"    ...\n"
msgstr ""
"apiVersion: apps/v1\n"
"kind: StatefulSet\n"
"metadata:\n"
"  name: my-stateful-app\n"
"spec:\n"
"  serviceName: my-stateful-app\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/name: my-stateful-app\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app.kubernetes.io/name: my-stateful-app\n"
"        linstor.csi.linbit.com/on-storage-lost: remove <1>\n"
"    ...\n"

#. type: Plain text
msgid ""
"The label is applied to Pod template, **not** the StatefulSet. The label was "
"applied correctly, if your Pod appears in the output of `kubectl get pods -l "
"linstor.csi.linbit.com/on-storage-lost=remove`."
msgstr ""
"ラベルは、StatefulSet ではなくポッドテンプレートに適用されます。ポッドが "
"`kubectl get pods -l linstor.csi.linbit.com/on-storage-lost=remove` の出力に"
"表示される場合、ラベルは正しく適用さています。"

#. type: Plain text
msgid "Deploy the set and wait for the pod to start"
msgstr "セットをデプロイし、ポッドが開始するのを待ちます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get pod -o wide\n"
"NAME                                        READY   STATUS              RESTARTS   AGE     IP                NODE                    NOMINATED NODE   READINESS GATES\n"
"my-stateful-app-0                           1/1     Running             0          5m      172.31.0.1        node01.ha.cluster       <none>           <none>\n"
msgstr ""
"$ kubectl get pod -o wide\n"
"NAME                                        READY   STATUS              RESTARTS   AGE     IP                NODE                    NOMINATED NODE   READINESS GATES\n"
"my-stateful-app-0                           1/1     Running             0          5m      172.31.0.1        node01.ha.cluster       <none>           <none>\n"

#. type: Plain text
msgid ""
"Then one of the nodes becomes unreachable. Shortly after, Kubernetes will "
"mark the node as `NotReady`"
msgstr ""
"次に、ノードの 1 つが到達不能になります。その後まもなく、Kubernetes はノード"
"を `NotReady` としてマークします"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get nodes\n"
"NAME                    STATUS     ROLES     AGE    VERSION\n"
"master01.ha.cluster     Ready      master    12d    v1.19.4\n"
"master02.ha.cluster     Ready      master    12d    v1.19.4\n"
"master03.ha.cluster     Ready      master    12d    v1.19.4\n"
"node01.ha.cluster       NotReady   compute   12d    v1.19.4\n"
"node02.ha.cluster       Ready      compute   12d    v1.19.4\n"
"node03.ha.cluster       Ready      compute   12d    v1.19.4\n"
msgstr ""
"$ kubectl get nodes\n"
"NAME                    STATUS     ROLES     AGE    VERSION\n"
"master01.ha.cluster     Ready      master    12d    v1.19.4\n"
"master02.ha.cluster     Ready      master    12d    v1.19.4\n"
"master03.ha.cluster     Ready      master    12d    v1.19.4\n"
"node01.ha.cluster       NotReady   compute   12d    v1.19.4\n"
"node02.ha.cluster       Ready      compute   12d    v1.19.4\n"
"node03.ha.cluster       Ready      compute   12d    v1.19.4\n"

#. type: Plain text
msgid ""
"After about 45 seconds, the Pod will be removed by the HA Controller and re-"
"created by the StatefulSet"
msgstr ""
"約 45 秒後、ポッドは HA コントローラーによって削除され、StatefulSet によって"
"再作成されます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get pod -o wide\n"
"NAME                                        READY   STATUS              RESTARTS   AGE     IP                NODE                    NOMINATED NODE   READINESS GATES\n"
"my-stateful-app-0                           0/1     ContainerCreating   0          3s      172.31.0.1        node02.ha.cluster       <none>           <none>\n"
"$ kubectl get events --sort-by=.metadata.creationTimestamp -w\n"
"...\n"
"0s          Warning   ForceDeleted              pod/my-stateful-app-0                                                                   pod deleted because a used volume is marked as failing\n"
"0s          Warning   ForceDetached             volumeattachment/csi-d2b994ff19d526ace7059a2d8dea45146552ed078d00ed843ac8a8433c1b5f6f   volume detached because it is marked as failing\n"
"...\n"
msgstr ""
"$ kubectl get pod -o wide\n"
"NAME                                        READY   STATUS              RESTARTS   AGE     IP                NODE                    NOMINATED NODE   READINESS GATES\n"
"my-stateful-app-0                           0/1     ContainerCreating   0          3s      172.31.0.1        node02.ha.cluster       <none>           <none>\n"
"$ kubectl get events --sort-by=.metadata.creationTimestamp -w\n"
"...\n"
"0s          Warning   ForceDeleted              pod/my-stateful-app-0                                                                   pod deleted because a used volume is marked as failing\n"
"0s          Warning   ForceDetached             volumeattachment/csi-d2b994ff19d526ace7059a2d8dea45146552ed078d00ed843ac8a8433c1b5f6f   volume detached because it is marked as failing\n"
"...\n"
