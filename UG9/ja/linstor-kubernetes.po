# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-03-07 03:54+0000\n"
"PO-Revision-Date: 2022-04-22 11:53+0900\n"
"Last-Translator: 黒木　博 <h-kuroki@sios.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#. type: Title ==
#, no-wrap
msgid "LINSTOR Volumes in Kubernetes"
msgstr "Kubernetes で LINSTOR ボリューム"

#. type: Plain text
msgid ""
"indexterm:[Kubernetes]This chapter describes the usage of LINSTOR in "
"Kubernetes (K8s)  as managed by the operator and with volumes provisioned "
"using the https://github.com/LINBIT/linstor-csi[LINSTOR CSI plug-in]."
msgstr ""
"indexterm:[Kubernetes] この章では、オペレーターによって管理され、 https://"
"github.com/LINBIT/linstor-csi[LINSTOR CSI plugin] を使用してプロビジョニング"
"された KubernetesのLINSTORボリュームについて説明します。"

#. type: Plain text
msgid ""
"This Chapter goes into great detail regarding all the install time options "
"and various configurations possible with LINSTOR and Kubernetes. For those "
"more interested in a \"quick-start\" for testing, or those looking for some "
"examples for reference. We have some complete <<s-kubernetes-helm-install-"
"examples,Helm Install Examples>> of a few common uses near the end of the "
"chapter."
msgstr ""
"この章では、LINSTOR と Kubernetes で可能なすべてのインストールオプションとさ"
"まざまな構成について詳しく説明します。テスト目的で「クイックスタート」に興味"
"がある方、または参照用の例を探している方は、この章の終わり近くの <<s-"
"kubernetes-helm-install-examples,Helm インストール例>> を参照ください。"

#. type: Title ===
#, no-wrap
msgid "Kubernetes Introduction"
msgstr "Kubernetesの概要"

#. type: Plain text
msgid ""
"_Kubernetes_ is a container orchestrator. Kubernetes defines the behavior of "
"containers and related services, using declarative specifications. In this "
"guide, we will focus on using `kubectl` to manipulate YAML files that define "
"the specifications of Kubernetes objects."
msgstr ""
"Kubernetes_は、コンテナオーケストレーターです。Kubernetes は、宣言した仕様に"
"基づいてコンテナと関連サービスの動作を定義します。このガイドでは、Kubernetes "
"オブジェクトの仕様を定義する AML ファイルを介して `kubectl` を使用することに"
"焦点を当てます。"

#. type: Title ===
#, no-wrap
msgid "Deploying LINSTOR on Kubernetes"
msgstr "Kubernetes への LINSTOR のデプロイ"

#. type: Title ====
#, no-wrap
msgid "Deploying with the LINSTOR Operator"
msgstr "LINSTORオペレーターを使用したデプロイ"

#. type: Plain text
msgid ""
"LINBIT provides a LINSTOR Operator to commercial support customers.  The "
"Operator eases deployment of LINSTOR on Kubernetes by installing DRBD, "
"managing Satellite and Controller pods, and other related functions."
msgstr ""
"LINBITは、商用サポートのお客様向けにLINSTOR Operatorを提供しています。 "
"Operatorは、DRBDのインストール、SatelliteとControllerポッドの管理など、"
"Kubernetes上でのLINSTORの導入を容易にするものです。"

#. type: Plain text
msgid "The Operator itself is installed using a Helm v3 chart as follows:"
msgstr ""
"オペレーター自体は、次のように Helm v3 チャートを使用してインストールされま"
"す。"

#. type: Plain text
msgid ""
"LINBIT's container image repository (http://drbd.io), used in the `kubectl "
"create` command below, is only available to LINBIT customers or through "
"LINBIT customer trial accounts.  link:https://linbit.com/contact-us/[Contact "
"LINBIT for information on pricing or to begin a trial]. Alternatively, you "
"may use LINSTOR SDS' upstream project named link:https://github.com/"
"piraeusdatastore/piraeus-operator[Piraeus], without being a LINBIT customer."
msgstr ""
"以下の `kubectl create` コマンドで使用される LINBIT のコンテナーイメージリポ"
"ジトリ (http://drbd.io) は、LINBIT のお客様または LINBIT のお客様の試用アカウ"
"ントを通じてのみ利用できます。価格についての情報や試用開始するには link:"
"https://linbit.com/contact-us/[こちら] を参照ください。また、LINSTOR SDS の"
"アップストリームプロジェクト link:https://github.com/piraeusdatastore/"
"piraeus-operator[Piraeus] は LINBIT の顧客ではなくてもを使用できます。"

#. type: Plain text
msgid "Create a Kubernetes secret containing your my.linbit.com credentials:"
msgstr "my.linbit.com 認証情報を含む kubernetes シークレットを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"

#. type: Plain text
msgid ""
"The name of this secret must match the one specified in the Helm values, by "
"default `drbdiocred`."
msgstr ""
"このシークレットの名前は、Helm で指定されたものと一致する必要があります。デ"
"フォルトは `drbdiocred` です。"

#. type: Plain text
msgid ""
"Configure the LINSTOR database back end. By default, the chart configures "
"etcd as database back end. The Operator can also configure LINSTOR to use "
"<<s-kubernetes-linstor-k8s-backend,Kubernetes as datastore>> directly. If "
"you go the etcd route, you should configure persistent storage for it:"
msgstr ""
"LINSTORデータベースのバックエンドを設定します。デフォルトでは、チャートはデー"
"タベースとしてetcdを設定します。Operator は、LINSTORが <<s-kubernetes-"
"linstor-k8s-backend,Kubernetes as datastore>> を直接使用するように設定するこ"
"とも可能です。etcd を使う場合は、etcd 用に永続的ストレージを設定します。"

#. type: Plain text
msgid "Use an existing storage provisioner with a default `StorageClass`."
msgstr ""
"デフォルトの `StorageClass` で既存のストレージプロビジョナーを使用する。"

#. type: Plain text
msgid "<<s-kubernetes-etcd-hostpath-persistence,Use `hostPath` volumes>>."
msgstr ""
"<<s-kubernetes-etcd-hostpath-persistence, `hostPath` ボリューム>> を使用す"
"る。"

#. type: Plain text
msgid ""
"Disable persistence, **for basic testing only**. This can be done by adding "
"`--set etcd.persistentVolume.enabled=false` to the `helm install` command "
"below."
msgstr ""
"基本的なテストのみで永続化を無効にします。これは以下の `helm install` コマン"
"ドに `--set etcd.persistentVolume.enabled=false` を追加することで実行できま"
"す。"

#. type: Plain text
msgid ""
"Read <<s-kubernetes-storage, the storage guide>> and configure a basic "
"storage setup for LINSTOR"
msgstr ""
"<<s-kubernetes-storage, ストレージの構成>> を確認し、LINSTOR の基本的なスト"
"レージを構成してください。"

#. type: Plain text
msgid ""
"Read the <<s-kubernetes-securing-deployment,section on securing the "
"deployment>> and configure as needed."
msgstr ""
"<<s-kubernetes-securing-deployment,デプロイメントの保護に関するセクション>> "
"を参照して、必要に応じて設定します。"

#. type: Plain text
msgid ""
"Select the appropriate kernel module injector using `--set` with the `helm "
"install` command in the final step."
msgstr ""
"最後のステップとして `helm install` コマンドで `--set` を使用して、適切なカー"
"ネルモジュールインジェクタを選択します。"

#. type: Plain text
msgid ""
"Choose the injector according to the distribution you are using. Select the "
"latest version from one of `drbd9-rhel7`, `drbd9-rhel8`,...  from http://"
"drbd.io/ as appropriate. The drbd9-rhel8 image should also be used for RHCOS "
"(OpenShift). For the SUSE CaaS Platform use the SLES injector that matches "
"the base system of the CaaS Platform you are using (e.g., `drbd9-"
"sles15sp1`). For example:"
msgstr ""
"使用しているディストリビューションに応じてインジェクターを選択してください。 "
"http://drbd.io/ から、 `drbd9-rhel7`, `drbd9-rhel8`, ... 等の最新バージョンを"
"適宜選択します。drbd9-rhel8 イメージは、RHCOS(OpenShift) でも使用します。"
"SUSE CaaS プラットフォームの場合、使用している CaaS プラットフォームのシステ"
"ムと一致する SLES インジェクターを使用します（ `drbd9-sles15sp1` など）。例え"
"ば以下のようにします。"

#. type: delimited block -
#, no-wrap
msgid "operator.satelliteSet.kernelModuleInjectionImage=drbd.io/drbd9-rhel8:v9.1.8\n"
msgstr "operator.satelliteSet.kernelModuleInjectionImage=drbd.io/drbd9-rhel8:v9.1.8\n"

#. type: Plain text
msgid ""
"Only inject modules that are already present on the host machine. If a "
"module is not found, it will be skipped."
msgstr ""
"ホストマシンに既に存在するモジュールのみを挿入します。モジュールが見つからな"
"い場合は、スキップされます。"

#. type: delimited block -
#, no-wrap
msgid "operator.satelliteSet.kernelModuleInjectionMode=DepsOnly\n"
msgstr "operator.satelliteSet.kernelModuleInjectionMode=DepsOnly\n"

#. type: Plain text
msgid ""
"Disable kernel module injection if you are installing DRBD by other means. "
"Deprecated by `DepsOnly`"
msgstr ""
"他の方法で DRBD をインストールする場合は、カーネルモジュールインジェクション"
"を無効にします。 `DepsOnly` により非推奨になりました。"

# , no-wrap
#. type: delimited block -
#, no-wrap
msgid "operator.satelliteSet.kernelModuleInjectionMode=None\n"
msgstr "operator.satelliteSet.kernelModuleInjectionMode=None\n"

#. type: Plain text
msgid ""
"Finally create a Helm deployment named `linstor-op` that will set up "
"everything."
msgstr ""
"最後にすべてをセットアップする `linstor-op` という名前の Helm デプロイメント"
"を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"
msgstr ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"

#. type: Plain text
msgid ""
"Further deployment customization is discussed in the <<s-kubernetes-advanced-"
"deployments,advanced deployment section>>"
msgstr ""
"詳細なデプロイメントのカスタマイズについては、<<s-kubernetes-advanced-"
"deployments,advanced deployment section>> を参照ください。"

#. type: Title =====
#, no-wrap
msgid "Kubernetes Back End for LINSTOR"
msgstr "LINSTOR向けKubernetesバックエンド"

#. type: Plain text
msgid ""
"The Controller can use the Kubernetes API directly to persist its cluster "
"state. To enable this back end, use the following override file during the "
"chart installation:"
msgstr ""
"Controllerは、Kubernetes APIを直接使用して、クラスタの状態を永続化することが"
"できます。このバックエンドを有効にするには、チャートのインストール時に以下の"
"オーバーライドファイルを使用します。"

#. type: Block title
#, no-wrap
msgid "k8s-backend.yaml"
msgstr "k8s-backend.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"etcd:\n"
"  enabled: false\n"
"operator:\n"
"  controller:\n"
"    dbConnectionURL: k8s\n"
msgstr ""
"etcd:\n"
"  enabled: false\n"
"operator:\n"
"  controller:\n"
"    dbConnectionURL: k8s\n"

#. type: Plain text
msgid ""
"It is **NOT** possible to migrate from an existing cluster with etcd back "
"end to the Kubernetes back end."
msgstr ""
"現在、etcd バックエンドを持つ既存のクラスタから Kubernetes バックエンドへの移"
"行できません。"

#. type: Title =====
#, no-wrap
msgid "Creating Persistent Storage Volumes"
msgstr "永続ストレージボリュームの作成"

#. type: Plain text
msgid ""
"You can use the `pv-hostpath` Helm templates to create `hostPath` persistent "
"volumes. Create as many PVs as needed to satisfy your configured etcd "
"`replicas` (default 1)."
msgstr ""
"`pv-hostpath` Helm テンプレートを使用して、 `hostPath` 永続ボリュームを作成で"
"きます。構成された etcd の `replicas` を満たすために必要な数の PV を作成しま"
"す（デフォルト1）。"

#. type: Plain text
msgid ""
"Create the `hostPath` persistent volumes, substituting cluster node names "
"accordingly in the `nodes=` option:"
msgstr ""
"`nodePath =` オプションでクラスターノード名を指定して `hostPath` 永続ボリュー"
"ムを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath\n"
msgstr ""
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath\n"

#. type: Plain text
msgid ""
"By default, a PV is created on every `control-plane` node. You can manually "
"select the storage nodes by passing `--set \"nodes={<NODE0>,<NODE1>,"
"<NODE2>}\"` to the install command."
msgstr ""
"デフォルトで PV はすべての `control-plane` ノードに作成されます。インストール"
"コマンドに `--set \"nodes={<NODE0>,<NODE1>,NODE2>}\"` を渡すことにより、スト"
"レージノードを手動で選択できます。"

#. type: Plain text
msgid ""
"The correct value to reference the node is the value of the `kubernetes.io/"
"hostname` label. You can list the value for all nodes by running `kubectl "
"get nodes -o custom-columns=\"Name:{.metadata.name},NodeName:{.metadata."
"labels['kubernetes\\.io/hostname']}\"`"
msgstr ""
"ノードを参照するための正しい値は、`kubernetes.io/hostname` ラベルの値です。 "
"`kubectl get nodes -o custom-columns=\"Name:{.metadata.name},NodeName:{."
"metadata.labels['kubernetes\\.io/hostname']}\"` を実行すると、全てのノードに"
"ついてその値を一覧表示することができます。"

#. type: Title =====
#, no-wrap
msgid "Using an Existing Database"
msgstr "既存のデータベースの使用"

#. type: Plain text
msgid ""
"LINSTOR can connect to an existing PostgreSQL, MariaDB or etcd database. For "
"instance, for a PostgreSQL instance with the following configuration:"
msgstr ""
"LINSTOR は既存の PostgreSQL、MariaDB、etcd データベースに接続できます。たとえ"
"ば、次の構成は PostgresSQL インスタンスの場合です。"

#. type: delimited block -
#, no-wrap
msgid ""
"POSTGRES_DB: postgresdb\n"
"POSTGRES_USER: postgresadmin\n"
"POSTGRES_PASSWORD: admin123\n"
msgstr ""
"POSTGRES_DB: postgresdb\n"
"POSTGRES_USER: postgresadmin\n"
"POSTGRES_PASSWORD: admin123\n"

#. type: Plain text
msgid ""
"The Helm chart can be configured to use this database rather than deploying "
"an etcd cluster, by adding the following to the Helm install command:"
msgstr ""
"Helm のインストールコマンドに以下を追加することにより、etcd クラスターをデプ"
"ロイする代わりにこのデータベースを使用するように Helm チャートを構成できま"
"す。"

#. type: delimited block -
#, no-wrap
msgid "--set etcd.enabled=false --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\"\n"
msgstr "--set etcd.enabled=false --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\"\n"

#. type: Title ====
#, no-wrap
msgid "Configuring Storage"
msgstr "ストレージの構成"

#. type: Plain text
msgid ""
"The LINSTOR Operator can automate some basic storage set up for LINSTOR."
msgstr ""
"LINSTORオペレーターは、いくつかの基本的なストレージセットアップを自動化できま"
"す。"

#. type: Title =====
#, no-wrap
msgid "Configuring Storage Pool Creation"
msgstr "ストレージプール作成の構成"

#. type: Plain text
msgid ""
"The LINSTOR Operator can be used to create LINSTOR storage pools. Creation "
"is under control of the LinstorSatelliteSet resource:"
msgstr ""
"LINSTOR オペレーターを使用して、LINSTOR ストレージプールを作成できます。作成"
"は LinstorSatelliteSet リソースの制御下にあります。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get LinstorSatelliteSet.linstor.linbit.com linstor-op-ns -o yaml\n"
"kind: LinstorSatelliteSet\n"
"metadata:\n"
"..\n"
"spec:\n"
"  ..\n"
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: \"\"\n"
"    zfsPools:\n"
"    - name: my-linstor-zpool\n"
"      zPool: for-linstor\n"
"      thin: true\n"
msgstr ""
"$ kubectl get LinstorSatelliteSet.linstor.linbit.com linstor-op-ns -o yaml\n"
"kind: LinstorSatelliteSet\n"
"metadata:\n"
"..\n"
"spec:\n"
"  ..\n"
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: \"\"\n"
"    zfsPools:\n"
"    - name: my-linstor-zpool\n"
"      zPool: for-linstor\n"
"      thin: true\n"

#. type: Title =====
#, no-wrap
msgid "Creating Storage Pools at Installation Time"
msgstr "インストール時のストレージプール作成"

#. type: Plain text
msgid ""
"At installation time, by setting the value of `operator.satelliteSet."
"storagePools` when running the `helm install` command."
msgstr ""
"インストール時の helm install を実行するときに `operator.satelliteSet."
"storagePools` の値を設定します。"

#. type: Plain text
msgid "First create a file with the storage configuration like:"
msgstr "まず、次のようなストレージ構成でファイルを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmPools:\n"
"      - name: lvm-thick\n"
"        volumeGroup: drbdpool\n"
msgstr ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmPools:\n"
"      - name: lvm-thick\n"
"        volumeGroup: drbdpool\n"

#. type: Plain text
msgid "This file can be passed to the Helm installation like this:"
msgstr "このファイルは、次のように helm インストールに渡すことができます。"

#. type: delimited block -
#, no-wrap
msgid "helm install -f <file> linstor-op linstor/linstor\n"
msgstr "helm install -f <file> linstor-op linstor/linstor\n"

#. type: Title =====
#, no-wrap
msgid "Creating Storage Pools After Installation"
msgstr "ストレージプール作成の構成"

#. type: Plain text
msgid ""
"On a cluster with the operator already configured (that is, after `helm "
"install`), you can edit the LinstorSatelliteSet configuration like this:"
msgstr ""
"オペレーターがすでに構成されているクラスター（つまり、 `helm install` の後）"
"では、次のようにして LinstorSatelliteSet 構成を編集できます。"

#. type: delimited block -
#, no-wrap
msgid "$ kubectl edit LinstorSatelliteSet.linstor.linbit.com <satellitesetname>\n"
msgstr "$ kubectl edit LinstorSatelliteSet.linstor.linbit.com <satellitesetname>\n"

#. type: Plain text
msgid ""
"The storage pool configuration can be updated like in the example above."
msgstr "ストレージプールの構成は、上記の例のように更新できます。"

#. type: Title =====
#, no-wrap
msgid "Preparing Physical Devices"
msgstr "物理デバイスの準備"

#. type: Plain text
msgid ""
"By default, LINSTOR expects the referenced VolumeGroups, ThinPools and so on "
"to be present. You can use the `devicePaths: []` option to let LINSTOR "
"automatically prepare devices for the pool. Eligible for automatic "
"configuration are block devices that:"
msgstr ""
"デフォルトでは、LINSTOR は、参照される VolumeGroups, ThinPools などが存在する"
"ことを想定しています。 `devicePaths：[]` オプションを使用して、LINSTOR がプー"
"ル用にデバイスを自動的に準備できるようにすることができます。自動構成の対象と"
"なるのは、次のようなブロックデバイスです。"

#. type: Plain text
msgid "Are a root device (no partition)"
msgstr "ルートデバイス（パーティションなし）"

#. type: Plain text
msgid "do not contain partition information"
msgstr "パーティション情報を含まない。"

#. type: Plain text
msgid "have more than 1 GiB"
msgstr "1 GiB 以上である。"

#. type: Plain text
msgid ""
"To enable automatic configuration of devices, set the `devicePaths` key on "
"`storagePools` entries:"
msgstr ""
"デバイスの自動構成を有効にするには `storagePools` エントリに `devicePaths` "
"キーを設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"      devicePaths:\n"
"      - /dev/vdb\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: linstor_thinpool\n"
"      devicePaths:\n"
"      - /dev/vdc\n"
"      - /dev/vdd\n"
msgstr ""
"  storagePools:\n"
"    lvmPools:\n"
"    - name: lvm-thick\n"
"      volumeGroup: drbdpool\n"
"      devicePaths:\n"
"      - /dev/vdb\n"
"    lvmThinPools:\n"
"    - name: lvm-thin\n"
"      thinVolume: thinpool\n"
"      volumeGroup: linstor_thinpool\n"
"      devicePaths:\n"
"      - /dev/vdc\n"
"      - /dev/vdd\n"

#. type: Plain text
msgid ""
"Currently, this method supports creation of LVM and LVMTHIN storage pools."
msgstr ""
"現在、このメソッドは LVM および LVMTHIN ストレージプールの作成をサポートして"
"います。"

#. type: Title =====
#, no-wrap
msgid "Configuring LVM Storage Pools"
msgstr "LVM ストレージプールの設定"

#. type: Plain text
msgid "The available keys for `lvmPools` entries are:"
msgstr "`lvmPools` エントリで利用可能なキーは以下のとおりです。"

#. type: Plain text
msgid "`name` name of the LINSTOR storage pool. [Required]"
msgstr "`name` LINSTOR ストレージプールの名前。必須"

#. type: Plain text
msgid "`volumeGroup` name of the VG to create. [Required]"
msgstr "`volumeGroup` 作成する VG の名前。必須"

#. type: Plain text
msgid ""
"`devicePaths` devices to configure for this pool. Must be empty and >= 1GiB "
"to be recognized. [Optional]"
msgstr ""
"`devicePaths` このプール用に構成するデバイス。認識されるには、空で 1GiB 以上"
"ある。オプション"

#. type: Plain text
msgid "`raidLevel` LVM raid level. [Optional]"
msgstr "`raidLevel` LVM RAID レベル。オプション"

#. type: Plain text
msgid "`vdo` Enable [VDO] (requires VDO tools in the satellite). [Optional]"
msgstr "`vdo` [VDO]を有効にする（サテライトに VDO ツールが必要）。オプション"

#. type: Plain text
msgid ""
"`vdoLogicalSizeKib` Size of the created VG (expected to be bigger than the "
"backing devices by using VDO). [Optional]"
msgstr ""
"`vdoLogicalSizeKib` 作成された VG のサイズ（VDO を使用することで下位デバイス"
"よりも大きくなることが予想される）。オプション"

#. type: Plain text
msgid "`vdoSlabSizeKib` Slab size for VDO. [Optional]"
msgstr "`vdoSlabSizeKib` VDO のスラブサイズ。オプション"

#. type: Plain text
msgid ""
"[VDO]: https://www.redhat.com/en/blog/look-vdo-new-linux-compression-layer"
msgstr ""
"[VDO]: https://www.redhat.com/en/blog/look-vdo-new-linux-compression-layer"

#. type: Title =====
#, no-wrap
msgid "Configuring LVM Thin Pools"
msgstr "LVM Thin Poolの設定"

#. type: Plain text
msgid ""
"`volumeGroup` VG to use for the thin pool. If you want to use `devicePaths`, "
"you must set this to `\"\"`.  This is required because LINSTOR does not "
"allow configuration of the VG name when preparing devices.  `thinVolume` "
"name of the thin pool. [Required]"
msgstr ""
"`volumeGroup` シンプールに使用するVGです。 `devicePaths` を使用したい場合は、"
"これを `\"\"` に設定します。 LINSTORではデバイスを準備する際にVG名を設定する"
"ことができないため、これは必須です。 `thinVolume` シンプールの名前です。[必"
"須]です。"

#. type: Plain text
msgid ""
"The volume group created by LINSTOR for LVM thin pools will always follow "
"the scheme \"linstor_$THINPOOL\"."
msgstr ""
"LVMTHIN プール用に LINSTOR によって作成されたボリュームグループは、常にスキー"
"ム \"linstor_$THINPOOL\" に従います。"

#. type: Title =====
#, no-wrap
msgid "Configuring ZFS Storage Pools"
msgstr "ZFS ストレージプールの設定"

#. type: Plain text
msgid ""
"`zPool` name of the zpool to use. Must already be present on all machines. "
"[Required]"
msgstr ""
"`zPool` 使用する zpool の名前。すべてのマシンにすでに存在している必要がありま"
"す。必須"

#. type: Plain text
msgid "`thin` `true` to use thin provisioning, `false` otherwise. [Required]"
msgstr ""
"`thin` シンプロビジョニングを使用するには `true`, 使用しないなら `false` を設"
"定する。必須"

#. type: Title =====
#, no-wrap
msgid "Automatic Storage Type Provisioning (DEPRECATED)"
msgstr "`automaticStorageType` の使用（非推奨）"

#. type: Plain text
msgid ""
"_ALL_ eligible devices will be prepared according to the value of `operator."
"satelliteSet.automaticStorageType`, unless they are already prepared using "
"the `storagePools` section. Devices are added to a storage pool based on the "
"device name (that is, all `/dev/nvme1` devices will be part of the pool "
"`autopool-nvme1`)"
msgstr ""
"すべての適切なデバイスは、すでに `storagePools` セクションを使用して準備して"
"いる場合を除き `operator.satelliteSet.automaticStorageType` の値に従って準備"
"されます。デバイスは、デバイス名に基づいてストレージプールに追加さ>れます（つ"
"まり、すべての `/dev/nvme1` デバイスはプール `autopool-nvme1` 一部>になりま"
"す）。"

#. type: Plain text
msgid "The possible values for `operator.satelliteSet.automaticStorageType`:"
msgstr ""
"`operator.satelliteSet.automaticStorageType` の可能な値は次のとおりです。"

#. type: Plain text
msgid "`None` no automatic set up (default)"
msgstr "`None` 自動セットアップなし（デフォルト）"

#. type: Plain text
msgid "`LVM` create a LVM (thick) storage pool"
msgstr "`LVM` LVM（シック）ストレージプールを作成"

#. type: Plain text
msgid "`LVMTHIN` create a LVM thin storage pool"
msgstr "`LVMTHIN` LVM thin ストレージプールを作成"

#. type: Plain text
msgid "`ZFS` create a ZFS based storage pool (**UNTESTED**)"
msgstr "`ZFS` ZFS ベースストレージプールを作成 (** 未テスト **)"

#  no-wrap
#. type: Title ====
#, no-wrap
msgid "Securing Deployment"
msgstr "安全なデプロイメント"

#. type: Plain text
msgid ""
"This section describes the different options for enabling security features "
"available when using this operator. The following guides assume the operator "
"is installed <<s-kubernetes-deploy-linstor-operator,using Helm>>"
msgstr ""
"このセクションでは、オペレーターを使用するときに使用できるセキュリティ機能を"
"有効にするためのさまざまなオプションについて説明します。以下のガイドは <<s-"
"kubernetes-deploy-linstor-operator,Helm>> を使ってオペレーターがインストール"
"されていることを前提とします。"

#. type: Title =====
#, no-wrap
msgid "Secure Communication with an Existing etcd Instance"
msgstr "既存の etcd インスタンスとの安全な通信"

#. type: Plain text
msgid ""
"Secure communication to an `etcd` instance can be enabled by providing a CA "
"certificate to the operator in form of a kubernetes secret. The secret has "
"to contain the key `ca.pem` with the PEM encoded CA certificate as value."
msgstr ""
"`etcd` インスタンスへの安全な通信は、kubernetes シークレットの形式で CA 証明"
"書をオペレーターに提供することで有効にできます。シークレットには、PEM エン"
"コードされた CA 証明書を値として持つキー `ca.pem` を含める必要があります。"

#. type: Plain text
msgid ""
"The secret can then be passed to the controller by passing the following "
"argument to `helm install`"
msgstr ""
"次の引数を `helm install` に渡すことで、シークレットをコントローラーに渡すこ"
"とができます。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.controller.dbCertSecret=<secret name>\n"
msgstr "--set operator.controller.dbCertSecret=<secret name>\n"

#. type: Title =====
#, no-wrap
msgid "Authentication with `etcd` Using Certificates"
msgstr "証明書を使用した `etcd` での認証"

#. type: Plain text
msgid ""
"If you want to use TLS certificates to authenticate with an `etcd` database, "
"you need to set the following option on Helm install:"
msgstr ""
"TLS 証明書を使用して `etcd` データベースで認証する場合は、helm インストールで"
"次のオプションを設定します。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.controller.dbUseClientCert=true\n"
msgstr "--set operator.controller.dbUseClientCert=true\n"

#. type: Plain text
msgid ""
"If this option is active, the secret specified in the above section must "
"contain two additional keys:"
msgstr ""
"このオプションが有効な場合、上記のセクションで指定されたシークレットには、2つ"
"の追加キーが含まれている必要があります。"

#. type: Plain text
msgid ""
"`client.cert` PEM formatted certificate presented to `etcd` for "
"authentication"
msgstr " `client.cert` 認証のために `etcd` に提示される PEM 形式の証明書"

#. type: Plain text
msgid ""
"`client.key` private key **in PKCS8 format**, matching the above client "
"certificate."
msgstr "`client.key` 上記のクライアント証明書と一致する PKCS8 形式の秘密鍵"

#. type: Plain text
msgid "Keys can be converted into PKCS8 format using `openssl`:"
msgstr "鍵は `openssl` を使用して PKCS8 形式に変換できます。"

#. type: delimited block -
#, no-wrap
msgid "openssl pkcs8 -topk8 -nocrypt -in client-key.pem -out client-key.pkcs8\n"
msgstr "openssl pkcs8 -topk8 -nocrypt -in client-key.pem -out client-key.pkcs8\n"

#. type: Title =====
#, no-wrap
msgid "Configuring Secure Communication Between LINSTOR Components"
msgstr "LINSTOR コンポーネント間の安全な通信の設定"

#. type: Plain text
msgid ""
"The default communication between LINSTOR components is not secured by TLS. "
"If this is needed for your setup, choose one of three methods:"
msgstr ""
"LINSTOR コンポーネント間のデフォルトの通信は TLS によって保護されていません。"
"必要な場合は、次の手順に従い設定します。"

#.  "cert-manager" is a product name so keep the original case
#. type: Title =====
#, no-wrap
msgid "Generating Keys and Certificates Using cert-manager"
msgstr "cert-managerを用いた鍵、証明書の生成"

#. type: Plain text
msgid ""
"Requires https://cert-manager.io/docs/[cert-manager] to be installed in your "
"cluster."
msgstr ""
"https://cert-manager.io/docs/[cert-manager] がクラスタにインストールされてい"
"ることが必要です。"

#. type: Plain text
msgid "Set the following options in your Helm override file:"
msgstr "Helmのオーバーライドファイルで以下のオプションを設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"linstorSslMethod: cert-manager\n"
"linstorHttpsMethod: cert-manager\n"
msgstr ""
"linstorSslMethod: cert-manager\n"
"linstorHttpsMethod: cert-manager\n"

#. type: Title =====
#, no-wrap
msgid "Generate Keys and Certificates Using Helm"
msgstr "Generate Keys and Certificates Using Helm"

#. type: delimited block -
#, no-wrap
msgid ""
"linstorSslMethod: helm\n"
"linstorHttpsMethod: helm\n"
msgstr ""
"linstorSslMethod: helm\n"
"linstorHttpsMethod: helm\n"

#. type: Title =====
#, no-wrap
msgid "Generating Keys and Certificates Manually"
msgstr "鍵や証明書の手動生成"

#. type: Plain text
msgid ""
"Create a private key and self-signed certificate for your certificate "
"authorities:"
msgstr "認証局用の秘密鍵と自己署名証明書を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"openssl req -new -newkey rsa:2048 -days 5000 -nodes -x509 -keyout ca.key \\\n"
"  -out ca.crt -subj \"/CN=linstor-system\"\n"
"openssl req -new -newkey rsa:2048 -days 5000 -nodes -x509 -keyout client-ca.key \\\n"
"  -out client-ca.crt -subj \"/CN=linstor-client-ca\"\n"
msgstr ""
"openssl req -new -newkey rsa:2048 -days 5000 -nodes -x509 -keyout ca.key \\\n"
"  -out ca.crt -subj \"/CN=linstor-system\"\n"
"openssl req -new -newkey rsa:2048 -days 5000 -nodes -x509 -keyout client-ca.key \\\n"
"  -out client-ca.crt -subj \"/CN=linstor-client-ca\"\n"

#. type: Plain text
msgid ""
"Create private keys, two for the controller, one for all nodes and one for "
"all clients:"
msgstr ""
"秘密鍵を作成します。コントローラ用に2つ、全ノード用に1つ、全クライアント用に1"
"つ作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"openssl genrsa -out linstor-control.key 2048\n"
"openssl genrsa -out linstor-satellite.key 2048\n"
"openssl genrsa -out linstor-client.key 2048\n"
"openssl genrsa -out linstor-api.key 2048\n"
msgstr ""
"openssl genrsa -out linstor-control.key 2048\n"
"openssl genrsa -out linstor-satellite.key 2048\n"
"openssl genrsa -out linstor-client.key 2048\n"
"openssl genrsa -out linstor-api.key 2048\n"

#. type: Plain text
msgid "Create trusted certificates for controller and nodes:"
msgstr "コントローラーとノードの信頼できる証明書を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"openssl req -new -sha256 -key linstor-control.key -subj \"/CN=system:control\" \\\n"
"  -out linstor-control.csr\n"
"openssl req -new -sha256 -key linstor-satellite.key -subj \"/CN=system:node\" \\\n"
"  -out linstor-satellite.csr\n"
"openssl req -new -sha256 -key linstor-client.key -subj \"/CN=linstor-client\" \\\n"
"  -out linstor-client.csr\n"
"openssl req -new -sha256 -key linstor-api.key -subj \"/CN=linstor-controller\" \\\n"
"  -out  linstor-api.csr\n"
"openssl x509 -req -in linstor-control.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\\n"
"  -out linstor-control.crt -days 5000 -sha256\n"
"openssl x509 -req -in linstor-satellite.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\\n"
"  -out linstor-satellite.crt -days 5000 -sha256\n"
"openssl x509 -req -in linstor-client.csr -CA client-ca.crt -CAkey client-ca.key \\\n"
"  -CAcreateserial -out linstor-client.crt -days 5000 -sha256\n"
"openssl x509 -req -in linstor-api.csr -CA client-ca.crt -CAkey client-ca.key \\\n"
"  -CAcreateserial -out linstor-api.crt -days 5000 -sha256 -extensions 'v3_req' \\\n"
"  -extfile <(printf '%s\\n' '[v3_req]' extendedKeyUsage=serverAuth \\\n"
"  subjectAltName=DNS:linstor-op-cs.default.svc)\n"
msgstr ""
"openssl req -new -sha256 -key linstor-control.key -subj \"/CN=system:control\" \\\n"
"  -out linstor-control.csr\n"
"openssl req -new -sha256 -key linstor-satellite.key -subj \"/CN=system:node\" \\\n"
"  -out linstor-satellite.csr\n"
"openssl req -new -sha256 -key linstor-client.key -subj \"/CN=linstor-client\" \\\n"
"  -out linstor-client.csr\n"
"openssl req -new -sha256 -key linstor-api.key -subj \"/CN=linstor-controller\" \\\n"
"  -out  linstor-api.csr\n"
"openssl x509 -req -in linstor-control.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\\n"
"  -out linstor-control.crt -days 5000 -sha256\n"
"openssl x509 -req -in linstor-satellite.csr -CA ca.crt -CAkey ca.key -CAcreateserial \\\n"
"  -out linstor-satellite.crt -days 5000 -sha256\n"
"openssl x509 -req -in linstor-client.csr -CA client-ca.crt -CAkey client-ca.key \\\n"
"  -CAcreateserial -out linstor-client.crt -days 5000 -sha256\n"
"openssl x509 -req -in linstor-api.csr -CA client-ca.crt -CAkey client-ca.key \\\n"
"  -CAcreateserial -out linstor-api.crt -days 5000 -sha256 -extensions 'v3_req' \\\n"
"  -extfile <(printf '%s\\n' '[v3_req]' extendedKeyUsage=serverAuth \\\n"
"  subjectAltName=DNS:linstor-op-cs.default.svc)\n"

#. type: Plain text
msgid ""
"`linstor-op-cs.default.svc` in the last command needs to match create "
"service name. With Helm, this is always `<release-name>-cs.<namespace>.svc`."
msgstr ""
"最後のコマンドの `linstor-op-cs.default.svc` は create service 名と一致させる"
"必要があります。Helm では、これは常に `<release-name>-cs.<namespace>.svc` に"
"なります。"

#. type: Plain text
msgid ""
"Create kubernetes secrets that can be passed to the controller and node pods:"
msgstr ""
"コントローラとノードポッドに渡すことができるkubernetes シークレットを作成しま"
"す。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret generic linstor-control --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=ca.crt --from-file=tls.crt=linstor-control.crt \\\n"
"  --from-file=tls.key=linstor-control.key\n"
"kubectl create secret generic linstor-satellite --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=ca.crt --from-file=tls.crt=linstor-satellite.crt \\\n"
"  --from-file=tls.key=linstor-satellite.key\n"
"kubectl create secret generic linstor-api --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=client-ca.crt --from-file=tls.crt=linstor-api.crt \\\n"
"  --from-file=tls.key=linstor-api.key\n"
"kubectl create secret generic linstor-client --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=client-ca.crt --from-file=tls.crt=linstor-client.crt \\\n"
"  --from-file=tls.key=linstor-client.key\n"
msgstr ""
"kubectl create secret generic linstor-control --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=ca.crt --from-file=tls.crt=linstor-control.crt \\\n"
"  --from-file=tls.key=linstor-control.key\n"
"kubectl create secret generic linstor-satellite --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=ca.crt --from-file=tls.crt=linstor-satellite.crt \\\n"
"  --from-file=tls.key=linstor-satellite.key\n"
"kubectl create secret generic linstor-api --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=client-ca.crt --from-file=tls.crt=linstor-api.crt \\\n"
"  --from-file=tls.key=linstor-api.key\n"
"kubectl create secret generic linstor-client --type=kubernetes.io/tls \\\n"
"  --from-file=ca.crt=client-ca.crt --from-file=tls.crt=linstor-client.crt \\\n"
"  --from-file=tls.key=linstor-client.key\n"

#. type: Plain text
msgid "Pass the names of the created secrets to `helm install`:"
msgstr "作成したシークレットの名前を `helm install` に渡します。"

#. type: delimited block -
#, no-wrap
msgid ""
"linstorHttpsControllerSecret: linstor-api\n"
"linstorHttpsClientSecret: linstor-client\n"
"operator:\n"
"  controller:\n"
"    sslSecret: linstor-control\n"
"  satelliteSet:\n"
"    sslSecret: linstor-satellite\n"
msgstr ""
"linstorHttpsControllerSecret: linstor-api\n"
"linstorHttpsClientSecret: linstor-client\n"
"operator:\n"
"  controller:\n"
"    sslSecret: linstor-control\n"
"  satelliteSet:\n"
"    sslSecret: linstor-satellite\n"

#. type: Title =====
#, no-wrap
msgid "Automatically Set the Passphrase for LINSTOR"
msgstr "LINSTOR のパスフレーズを自動設定"

#. type: Plain text
msgid ""
"LINSTOR needs to store confidential data to support encrypted information. "
"This data is protected by a master passphrase. A passphrase is automatically "
"generated on the first chart install."
msgstr ""
"LINSTOR は、暗号化された情報をサポートするために機密データを保存する必要があ"
"ります。このデータはマスターパスフレーズによって保護されています。パスフレー"
"ズは、最初のチャートインストール時に自動的に生成されます。"

#. type: Plain text
msgid "If you want to use a custom passphrase, store it in a secret:"
msgstr "カスタムパスフレーズを使用する場合は、シークレットに保存します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create secret generic linstor-pass --from-literal=MASTER_PASSPHRASE=<password>\n"
msgstr "kubectl create secret generic linstor-pass --from-literal=MASTER_PASSPHRASE=<password>\n"

#. type: Plain text
msgid "On install, add the following arguments to the Helm command:"
msgstr "インストール時に、次の引数を helm コマンドに追加します。"

#. type: delimited block -
#, no-wrap
msgid "--set operator.controller.luksSecret=linstor-pass\n"
msgstr "--set operator.controller.luksSecret=linstor-pass\n"

#. type: Title =====
#, no-wrap
msgid "Helm Install Examples"
msgstr "Helm インストール例"

#. type: Plain text
msgid ""
"All the below examples use the following `sp-values.yaml` file. Feel free to "
"adjust this for your uses and environment. See <<Configuring storage pool "
"creation>> for further details."
msgstr ""
"以下のすべての例では、次の `sp-values.yaml` ファイルを使用しています。用途や"
"環境に合わせて調整してください。詳細は <ストレージプール作成の構成> を参照く"
"ださい。"

#. type: delimited block -
#, no-wrap
msgid ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmThinPools:\n"
"      - name: lvm-thin\n"
"        thinVolume: thinpool\n"
"        volumeGroup: \"\"\n"
"        devicePaths:\n"
"        - /dev/sdb\n"
msgstr ""
"operator:\n"
"  satelliteSet:\n"
"    storagePools:\n"
"      lvmThinPools:\n"
"      - name: lvm-thin\n"
"        thinVolume: thinpool\n"
"        volumeGroup: \"\"\n"
"        devicePaths:\n"
"        - /dev/sdb\n"

#. type: Plain text
msgid ""
"Default install. Please note this does not setup any persistence for the "
"backing etcd key-value store."
msgstr ""
"デフォルトのインストールです。これにより etcd KeyValue ストアの設定はされない"
"ことに注意してください。"

#. type: Plain text
msgid "This is not suggested for any use outside of testing."
msgstr "警告：これは、テスト以外での使用は推奨されていません。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-op linstor/linstor\n"

#. type: Plain text
msgid ""
"LINBIT's container image repository (http://drbd.io), used in the previous "
"and upcoming `kubectl create` commands, is only available to LINBIT "
"customers or through LINBIT customer trial accounts.  link:https://linbit."
"com/contact-us/[Contact LINBIT for information on pricing or to begin a "
"trial]. Alternatively, you may use LINSTOR SDS' upstream project named link:"
"https://github.com/piraeusdatastore/piraeus-operator[Piraeus], without being "
"a LINBIT customer."
msgstr ""
"これ以降 `kubectl create` コマンドで使用される LINBIT のコンテナーイメージリ"
"ポジトリ (http://drbd.io) は、LINBIT のお客様または LINBIT のお客様の試用アカ"
"ウントを通じてのみ利用できます。価格についての情報や試用開始するには link:"
"https://linbit.com/contact-us/[こちら] を参照ください。また、LINSTOR SDS の"
"アップストリームプロジェクト link:https://github.com/piraeusdatastore/"
"piraeus-operator[Piraeus] は LINBIT の顧客ではなくてもを使用できます。"

#. type: Plain text
msgid ""
"Install with LINSTOR storage-pools defined at install through `sp-values."
"yaml`, persistent hostPath volumes, 3 etcd replicas, and by compiling the "
"DRBD kernel modules for the host kernels."
msgstr ""
"`sp-values.yaml` で定義された LINSTOR storage-pools, 永続的な hostPath ボ"
"リューム, 3 つの etcd レプリカ, ホストカーネル用にコンパイルされた DRBD カー"
"ネルモジュールを使用してインストールします。"

#. type: Plain text
msgid ""
"This should be adequate for most basic deployments. Please note that this "
"deployment is not using the pre-compiled DRBD kernel modules just to make "
"this command more portable. Using the pre-compiled binaries will make for a "
"much faster install and deployment. Using the `Compile` option would not be "
"suggested for use in a large Kubernetes clusters."
msgstr ""
"これは、ほとんどの基本的なデプロイメントに適しています。このデプロイメントで"
"は、コマンドの移植性を高めるために、コンパイル済みの DRBD カーネルモジュール"
"を使用していないことに注意してください。コンパイル済みのバイナリを使用する"
"と、インストールとデプロイメントは速くなります。大規模な Kubernetes クラス"
"ターでの使用には、 `Compile`  オプションの使用は推奨されません。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath --set \"nodes={<NODE0>,<NODE1>,<NODE2>}\"\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.replicas=3 \\\n"
"  --set operator.satelliteSet.kernelModuleInjectionMode=Compile\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install linstor-etcd linstor/pv-hostpath --set \"nodes={<NODE0>,<NODE1>,<NODE2>}\"\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.replicas=3 \\\n"
"  --set operator.satelliteSet.kernelModuleInjectionMode=Compile\n"

#. type: Plain text
msgid ""
"Install with LINSTOR storage-pools defined at install through `sp-values."
"yaml`, use an already created PostgreSQL DB (preferably clustered), rather "
"than etcd, and use already compiled kernel modules for DRBD."
msgstr ""
"`sp-values.yaml` で定義された LINSTOR storage-pools, etcd の代わりに作成済み"
"の Postgres DB（できればクラスター化）, DRBD 用にコンパイル済みのカーネルモ"
"ジュールを使用してインストールします。"

#. type: Plain text
msgid ""
"The PostgreSQL database in this particular example is reachable through a "
"service endpoint named `postgres`. PostgreSQL itself is configured with "
"`POSTGRES_DB=postgresdb`, `POSTGRES_USER=postgresadmin`, and "
"`POSTGRES_PASSWORD=admin123`"
msgstr ""
"この例の Postgres データベースは `postgres` という名前のサービスエンドポイン"
"トでアクセスできます。Postgres 自体は `POSTGRES_DB = postgresdb`, "
"`POSTGRES_USER = postgresadmin`, および `POSTGRES_PASSWORD = admin123` で構成"
"されます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.enabled=false \\\n"
"  --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\"\n"
msgstr ""
"kubectl create secret docker-registry drbdiocred --docker-server=drbd.io \\\n"
"  --docker-username=<YOUR_LOGIN> --docker-email=<YOUR_EMAIL> --docker-password=<YOUR_PASSWORD>\n"
"helm repo add linstor https://charts.linstor.io\n"
"helm install -f sp-values.yaml linstor-op linstor/linstor --set etcd.enabled=false \\\n"
"  --set \"operator.controller.dbConnectionURL=jdbc:postgresql://postgres/postgresdb?user=postgresadmin&password=admin123\"\n"

#. type: Title =====
#, no-wrap
msgid "Terminating Helm Deployment"
msgstr "Helm デプロイメントの終了"

#. type: Plain text
msgid ""
"To protect the storage infrastructure of the cluster from accidentally "
"deleting vital components, it is necessary to perform some manual steps "
"before deleting a Helm deployment."
msgstr ""
"重要なコンポーネントを誤って削除しないようにクラスターのストレージインフラス"
"トラクチャを保護するには、Helm デプロイメントを削除する前にいくつかの手動手順"
"を実行します。"

#. type: Plain text
msgid ""
"Delete all volume claims managed by LINSTOR components. You can use the "
"following command to get a list of volume claims managed by LINSTOR. After "
"checking that none of the listed volumes still hold needed data, you can "
"delete them using the generated kubectl delete command."
msgstr ""
"LINSTOR コンポーネントによって管理されているすべてのボリューム要求を削除しま"
"す。次のコマンドを使用して、LINSTOR が管理するボリューム要求のリストを取得で"
"きます。リストされたどのボリュームにも必要なデータが残っていないことを確認し"
"た後、生成された kubectl delete コマンドを使用してそれらを削除できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get pvc --all-namespaces -o=jsonpath='{range .items[?(@.metadata.annotations.volume\\.beta\\.kubernetes\\.io/storage-provisioner==\"linstor.csi.linbit.com\")]}kubectl delete pvc --namespace {.metadata.namespace} {.metadata.name}{\"\\n\"}{end}'\n"
"kubectl delete pvc --namespace default data-mysql-0\n"
"kubectl delete pvc --namespace default data-mysql-1\n"
"kubectl delete pvc --namespace default data-mysql-2\n"
msgstr ""
"$ kubectl get pvc --all-namespaces -o=jsonpath='{range .items[?(@.metadata.annotations.volume\\.beta\\.kubernetes\\.io/storage-provisioner==\"linstor.csi.linbit.com\")]}kubectl delete pvc --namespace {.metadata.namespace} {.metadata.name}{\"\\n\"}{end}'\n"
"kubectl delete pvc --namespace default data-mysql-0\n"
"kubectl delete pvc --namespace default data-mysql-1\n"
"kubectl delete pvc --namespace default data-mysql-2\n"

#. type: Plain text
msgid "These volumes, once deleted, cannot be recovered."
msgstr "これらのボリュームは、いったん削除されると復元できません。"

#. type: Plain text
msgid "Delete the LINSTOR controller and satellite resources."
msgstr "LINSTOR コントローラーとサテライトリソースを削除します。"

#. type: Plain text
msgid ""
"Deployment of LINSTOR satellite and controller is controlled by the "
"LinstorSatelliteSet and LinstorController resources. You can delete the "
"resources associated with your deployment using kubectl"
msgstr ""
"LINSTOR サテライトとコントローラーのデプロイメントは、LinstorSatelliteSet リ"
"ソースと LinstorController リソースによって制御されます。kubectl を使用して、"
"デプロイメントに関連付けられているリソースを削除できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl delete linstorcontroller <helm-deploy-name>-cs\n"
"kubectl delete linstorsatelliteset <helm-deploy-name>-ns\n"
msgstr ""
"kubectl delete linstorcontroller <helm-deploy-name>-cs\n"
"kubectl delete linstorsatelliteset <helm-deploy-name>-ns\n"

#. type: Plain text
msgid ""
"After a short wait, the controller and satellite pods should terminate. If "
"they continue to run, you can check the above resources for errors (they are "
"only removed after all associated pods have terminated)."
msgstr ""
"しばらくすると、コントローラーとサテライトポッドが終了します。終了しない場合"
"は、上記のリソースのエラーを確認します（関連付けられているすべてのポッドが終"
"了した後でのみ削除されます）"

#. type: Plain text
msgid "Delete the Helm deployment."
msgstr "Helm デプロイメントの終了"

#. type: Plain text
msgid ""
"If you removed all PVCs and all LINSTOR pods have terminated, you can "
"uninstall the Helm deployment"
msgstr ""
"すべての PVC を削除し、すべての LINSTOR ポッドが終了した場合、helm デプロイメ"
"ントをアンインストールできます。"

#. type: delimited block -
#, no-wrap
msgid "helm uninstall linstor-op\n"
msgstr "helm uninstall linstor-op\n"

#. type: Plain text
#, no-wrap
msgid ""
"Due to the Helm's current policy, the Custom Resource Definitions named LinstorController and LinstorSatelliteSet will not be deleted by the command.\n"
" More information regarding Helm's current position on CRDs can be found https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you[here].\n"
msgstr ""
"Helm の現在のポリシーにより、LinstorController および LinstorSatelliteSet という名前のカスタムリソース定義はコマンドによって削除されません。\n"
"CRD の Helm の現状に関しては https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you[こちら] を参照ください。\n"

#. type: Title ====
#, no-wrap
msgid "Advanced Deployment Options"
msgstr "高度なデプロイメントオプション"

#. type: Plain text
msgid ""
"The Helm charts provide a set of further customization options for advanced "
"use cases."
msgstr ""
"Helm チャートは、高度なユースケースのために、さらなるカスタマイズオプションの"
"セットを提供します。"

#. type: Plain text
msgid ""
"LINBIT's container image repository (http://drbd.io), used in the Helm chart "
"below, is only available to LINBIT customers or through LINBIT customer "
"trial accounts.  link:https://linbit.com/contact-us/[Contact LINBIT for "
"information on pricing or to begin a trial]. Alternatively, you may use "
"LINSTOR SDS' upstream project named link:https://github.com/piraeusdatastore/"
"piraeus-operator[Piraeus], without being a LINBIT customer."
msgstr ""
"以下の Helm チャートで使用される LINBIT のコンテナーイメージリポジトリ "
"(http://drbd.io) は、LINBIT のお客様または LINBIT のお客様の試用アカウントを"
"通じてのみ利用できます。価格についての情報や試用開始するには link:https://"
"linbit.com/contact-us/[こちら] を参照ください。また、LINSTOR SDS のアップスト"
"リームプロジェクト link:https://github.com/piraeusdatastore/piraeus-"
"operator[Piraeus] は LINBIT の顧客ではなくてもを使用できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"global:\n"
"  imagePullPolicy: IfNotPresent # empty pull policy means k8s default is used (\"always\" if tag == \":latest\", \"ifnotpresent\" else) <1>\n"
"  setSecurityContext: true # Force non-privileged containers to run as non-root users\n"
"# Dependency charts\n"
"etcd:\n"
"  enabled: true\n"
"  persistentVolume:\n"
"    enabled: true\n"
"    storage: 1Gi\n"
"  replicas: 1 # How many instances of etcd will be added to the initial cluster. <2>\n"
"  resources: {} # resource requirements for etcd containers <3>\n"
"  image:\n"
"    repository: gcr.io/etcd-development/etcd\n"
"    tag: v3.4.15\n"
"stork:\n"
"  enabled: false\n"
"  storkImage: docker.io/openstorage/stork:2.8.2\n"
"  schedulerImage: k8s.gcr.io/kube-scheduler-amd64\n"
"  schedulerTag: \"\"\n"
"  replicas: 1 <2>\n"
"  storkResources: {} # resources requirements for the stork plug-in containers <3>\n"
"  schedulerResources: {} # resource requirements for the kube-scheduler containers <3>\n"
"  podsecuritycontext: {}\n"
"csi:\n"
"  enabled: true\n"
"  pluginImage: \"drbd.io/linstor-csi:v0.20.0\"\n"
"  csiAttacherImage: k8s.gcr.io/sig-storage/csi-attacher:v4.0.0\n"
"  csiLivenessProbeImage: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0\n"
"  csiNodeDriverRegistrarImage: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1\n"
"  csiProvisionerImage: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1\n"
"  csiSnapshotterImage: k8s.gcr.io/sig-storage/csi-snapshotter:v6.0.1\n"
"  csiResizerImage: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0\n"
"  csiAttacherWorkerThreads: 10 <9>\n"
"  csiProvisionerWorkerThreads: 10 <9>\n"
"  csiSnapshotterWorkerThreads: 10 <9>\n"
"  csiResizerWorkerThreads: 10 <9>\n"
"  controllerReplicas: 1 <2>\n"
"  nodeAffinity: {} <4>\n"
"  nodeTolerations: [] <4>\n"
"  controllerAffinity: {} <4>\n"
"  controllerTolerations: [] <4>\n"
"  enableTopology: true\n"
"  resources: {} <3>\n"
"  customLabels: {}\n"
"  customAnnotations: {}\n"
"  kubeletPath: /var/lib/kubelet <7>\n"
"  controllerSidecars: []\n"
"  controllerExtraVolumes: []\n"
"  nodeSidecars: []\n"
"  nodeExtraVolumes: []\n"
"priorityClassName: \"\"\n"
"drbdRepoCred: drbdiocred\n"
"linstorSslMethod: \"manual\" # <- If set to 'helm' or 'cert-manager' the certificates will be generated automatically\n"
"linstorHttpsMethod: \"manual\" # <- If set to 'helm' or 'cert-manager' the certificates will be generated automatically\n"
"linstorHttpsControllerSecret: \"\" # <- name of secret containing linstor server certificates+key. See docs/security.md\n"
"linstorHttpsClientSecret: \"\" # <- name of secret containing linstor client certificates+key. See docs/security.md\n"
"controllerEndpoint: \"\" # <- override to the generated controller endpoint. use if controller is not deployed via operator\n"
"psp:\n"
"  privilegedRole: \"\"\n"
"  unprivilegedRole: \"\"\n"
"operator:\n"
"  replicas: 1 # <- number of replicas for the operator deployment <2>\n"
"  image: \"drbd.io/linstor-operator:v1.10.0\"\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  customLabels: {}\n"
"  customAnnotations: {}\n"
"  podsecuritycontext: {}\n"
"  args:\n"
"    createBackups: true\n"
"    createMonitoring: true\n"
"  sidecars: []\n"
"  extraVolumes: []\n"
"  controller:\n"
"    enabled: true\n"
"    controllerImage: \"drbd.io/linstor-controller:v1.20.0\"\n"
"    dbConnectionURL: \"\"\n"
"    luksSecret: \"\"\n"
"    dbCertSecret: \"\"\n"
"    dbUseClientCert: false\n"
"    sslSecret: \"\"\n"
"    affinity: {} <4>\n"
"    httpBindAddress: \"\"\n"
"    httpsBindAddress: \"\"\n"
"    tolerations: <4>\n"
"      - key: node-role.kubernetes.io/master\n"
"        operator: Exists\n"
"        effect: NoSchedule\n"
"      - key: node-role.kubernetes.io/control-plane\n"
"        operator: Exists\n"
"        effect: NoSchedule\n"
"    resources: {} <3>\n"
"    replicas: 1 <2>\n"
"    additionalEnv: [] <5>\n"
"    additionalProperties: {} <6>\n"
"    sidecars: []\n"
"    extraVolumes: []\n"
"    customLabels: {}\n"
"    customAnnotations: {}\n"
"  satelliteSet:\n"
"    enabled: true\n"
"    satelliteImage: \"drbd.io/linstor-satellite:v1.20.0\"\n"
"    storagePools: {}\n"
"    sslSecret: \"\"\n"
"    automaticStorageType: None\n"
"    affinity: {} <4>\n"
"    tolerations: [] <4>\n"
"    resources: {} <3>\n"
"    monitoringImage: \"drbd.io/drbd-reactor:v0.9.0\"\n"
"    monitoringBindAddress: \"\"\n"
"    mountDrbdResourceDirectoriesFromHost: false <10>\n"
"    kernelModuleInjectionImage: \"drbd.io/drbd9-rhel7:v9.1.11\"\n"
"    kernelModuleInjectionMode: ShippedModules\n"
"    kernelModuleInjectionAdditionalSourceDirectory: \"\" <8>\n"
"    kernelModuleInjectionResources: {} <3>\n"
"    kernelModuleInjectionExtraVolumeMounts: []\n"
"    additionalEnv: [] <5>\n"
"    sidecars: []\n"
"    extraVolumes: []\n"
"    customLabels: {}\n"
"    customAnnotations: {}\n"
"haController:\n"
"  enabled: false\n"
"  image: drbd.io/linstor-k8s-ha-controller:v0.3.0\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  replicas: 1 <2>\n"
"  customLabels: {}\n"
"  customAnnotations: {}\n"
msgstr ""
"global:\n"
"  imagePullPolicy: IfNotPresent # empty pull policy means k8s default is used (\"always\" if tag == \":latest\", \"ifnotpresent\" else) <1>\n"
"  setSecurityContext: true # Force non-privileged containers to run as non-root users\n"
"# Dependency charts\n"
"etcd:\n"
"  enabled: true\n"
"  persistentVolume:\n"
"    enabled: true\n"
"    storage: 1Gi\n"
"  replicas: 1 # How many instances of etcd will be added to the initial cluster. <2>\n"
"  resources: {} # resource requirements for etcd containers <3>\n"
"  image:\n"
"    repository: gcr.io/etcd-development/etcd\n"
"    tag: v3.4.15\n"
"stork:\n"
"  enabled: false\n"
"  storkImage: docker.io/openstorage/stork:2.8.2\n"
"  schedulerImage: k8s.gcr.io/kube-scheduler-amd64\n"
"  schedulerTag: \"\"\n"
"  replicas: 1 <2>\n"
"  storkResources: {} # resources requirements for the stork plug-in containers <3>\n"
"  schedulerResources: {} # resource requirements for the kube-scheduler containers <3>\n"
"  podsecuritycontext: {}\n"
"csi:\n"
"  enabled: true\n"
"  pluginImage: \"drbd.io/linstor-csi:v0.20.0\"\n"
"  csiAttacherImage: k8s.gcr.io/sig-storage/csi-attacher:v4.0.0\n"
"  csiLivenessProbeImage: k8s.gcr.io/sig-storage/livenessprobe:v2.7.0\n"
"  csiNodeDriverRegistrarImage: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1\n"
"  csiProvisionerImage: k8s.gcr.io/sig-storage/csi-provisioner:v3.2.1\n"
"  csiSnapshotterImage: k8s.gcr.io/sig-storage/csi-snapshotter:v6.0.1\n"
"  csiResizerImage: k8s.gcr.io/sig-storage/csi-resizer:v1.6.0\n"
"  csiAttacherWorkerThreads: 10 <9>\n"
"  csiProvisionerWorkerThreads: 10 <9>\n"
"  csiSnapshotterWorkerThreads: 10 <9>\n"
"  csiResizerWorkerThreads: 10 <9>\n"
"  controllerReplicas: 1 <2>\n"
"  nodeAffinity: {} <4>\n"
"  nodeTolerations: [] <4>\n"
"  controllerAffinity: {} <4>\n"
"  controllerTolerations: [] <4>\n"
"  enableTopology: true\n"
"  resources: {} <3>\n"
"  customLabels: {}\n"
"  customAnnotations: {}\n"
"  kubeletPath: /var/lib/kubelet <7>\n"
"  controllerSidecars: []\n"
"  controllerExtraVolumes: []\n"
"  nodeSidecars: []\n"
"  nodeExtraVolumes: []\n"
"priorityClassName: \"\"\n"
"drbdRepoCred: drbdiocred\n"
"linstorSslMethod: \"manual\" # <- If set to 'helm' or 'cert-manager' the certificates will be generated automatically\n"
"linstorHttpsMethod: \"manual\" # <- If set to 'helm' or 'cert-manager' the certificates will be generated automatically\n"
"linstorHttpsControllerSecret: \"\" # <- name of secret containing linstor server certificates+key. See docs/security.md\n"
"linstorHttpsClientSecret: \"\" # <- name of secret containing linstor client certificates+key. See docs/security.md\n"
"controllerEndpoint: \"\" # <- override to the generated controller endpoint. use if controller is not deployed via operator\n"
"psp:\n"
"  privilegedRole: \"\"\n"
"  unprivilegedRole: \"\"\n"
"operator:\n"
"  replicas: 1 # <- number of replicas for the operator deployment <2>\n"
"  image: \"drbd.io/linstor-operator:v1.10.0\"\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  customLabels: {}\n"
"  customAnnotations: {}\n"
"  podsecuritycontext: {}\n"
"  args:\n"
"    createBackups: true\n"
"    createMonitoring: true\n"
"  sidecars: []\n"
"  extraVolumes: []\n"
"  controller:\n"
"    enabled: true\n"
"    controllerImage: \"drbd.io/linstor-controller:v1.20.0\"\n"
"    dbConnectionURL: \"\"\n"
"    luksSecret: \"\"\n"
"    dbCertSecret: \"\"\n"
"    dbUseClientCert: false\n"
"    sslSecret: \"\"\n"
"    affinity: {} <4>\n"
"    httpBindAddress: \"\"\n"
"    httpsBindAddress: \"\"\n"
"    tolerations: <4>\n"
"      - key: node-role.kubernetes.io/master\n"
"        operator: Exists\n"
"        effect: NoSchedule\n"
"      - key: node-role.kubernetes.io/control-plane\n"
"        operator: Exists\n"
"        effect: NoSchedule\n"
"    resources: {} <3>\n"
"    replicas: 1 <2>\n"
"    additionalEnv: [] <5>\n"
"    additionalProperties: {} <6>\n"
"    sidecars: []\n"
"    extraVolumes: []\n"
"    customLabels: {}\n"
"    customAnnotations: {}\n"
"  satelliteSet:\n"
"    enabled: true\n"
"    satelliteImage: \"drbd.io/linstor-satellite:v1.20.0\"\n"
"    storagePools: {}\n"
"    sslSecret: \"\"\n"
"    automaticStorageType: None\n"
"    affinity: {} <4>\n"
"    tolerations: [] <4>\n"
"    resources: {} <3>\n"
"    monitoringImage: \"drbd.io/drbd-reactor:v0.9.0\"\n"
"    monitoringBindAddress: \"\"\n"
"    mountDrbdResourceDirectoriesFromHost: false <10>\n"
"    kernelModuleInjectionImage: \"drbd.io/drbd9-rhel7:v9.1.11\"\n"
"    kernelModuleInjectionMode: ShippedModules\n"
"    kernelModuleInjectionAdditionalSourceDirectory: \"\" <8>\n"
"    kernelModuleInjectionResources: {} <3>\n"
"    kernelModuleInjectionExtraVolumeMounts: []\n"
"    additionalEnv: [] <5>\n"
"    sidecars: []\n"
"    extraVolumes: []\n"
"    customLabels: {}\n"
"    customAnnotations: {}\n"
"haController:\n"
"  enabled: false\n"
"  image: drbd.io/linstor-k8s-ha-controller:v0.3.0\n"
"  affinity: {} <4>\n"
"  tolerations: [] <4>\n"
"  resources: {} <3>\n"
"  replicas: 1 <2>\n"
"  customLabels: {}\n"
"  customAnnotations: {}\n"

#. type: Plain text
msgid "Sets the pull policy for all images."
msgstr "すべてのイメージのプルポリシーを設定します。"

#. type: Plain text
msgid "Controls the number of replicas for each component."
msgstr "各コンポーネントのレプリカ数を制御します。"

#. type: Plain text
msgid ""
"Set container resource requests and limits. See https://kubernetes.io/docs/"
"tasks/configure-pod-container/assign-cpu-resource/[the kubernetes docs]."
msgstr ""
"コンテナリソースのリクエストと制限を設定します。詳細は https://kubernetes.io/"
"docs/tasks/configure-pod-container/assign-cpu-resource/[kubernetes ドキュメン"
"ト] を参照ください。"

#. type: Plain text
msgid "Most containers need a minimal amount of resources, except for:"
msgstr ""
"以下を除いて、ほとんどのコンテナは、最小限のリソースしか必要としません。"

#. type: Plain text
msgid ""
"`etcd.resources` See the https://etcd.io/docs/v3.4.0/op-guide/hardware/[etcd "
"docs]"
msgstr ""
"`etcd.resources` https://etcd.io/docs/v3.4.0/op-guide/hardware/[etcd docs] を"
"参照"

#. type: Plain text
msgid "`operator.controller.resources` Around `700MiB` memory is required"
msgstr "`operator.controller.resources` 約 `700MiB` のメモリが必要"

#. type: Plain text
msgid "`operater.satelliteSet.resources` Around `700MiB` memory is required"
msgstr "`operater.satelliteSet.resources` 約 `700MiB` のメモリが必要"

#. type: Plain text
msgid ""
"`operator.satelliteSet.kernelModuleInjectionResources` If kernel modules are "
"compiled, 1GiB of memory is required."
msgstr ""
"`operator.satelliteSet.kernelModuleInjectionResources` カーネルモジュールをコ"
"ンパイルする場合、1GiBのメモリが必要"

#. type: Plain text
msgid ""
"Affinity and toleration determine where pods are scheduled on the cluster. "
"See the https://kubernetes.io/docs/concepts/scheduling-eviction/[kubernetes "
"docs on affinity and toleration].  This may be especially important for the "
"`operator.satelliteSet` and `csi.node*` values. To schedule a pod using a "
"LINSTOR persistent volume, the node requires a running LINSTOR satellite and "
"LINSTOR CSI pod."
msgstr ""
"AffinityとTolerationは、クラスタ上のどこにポッドがスケジュールされるかを決定"
"します。詳細は https://kubernetes.io/docs/concepts/scheduling-eviction/"
"[kubernetes docs on affinity and toleration] を参照ください。これは "
"`operator.satelliteSet` と `csi.node*` の値に対して特に重要かもしれません。"
"LINSTOR 永続ボリュームを使用してポッドをスケジュールするには、そのノードで実"
"行中の LINSTOR satellite と LINSTOR CSI ポッドが必要です。"

#. type: Plain text
msgid ""
"Sets additional environments variables to pass to the LINSTOR Controller and "
"Satellites.  Uses the same format as https://kubernetes.io/docs/tasks/inject-"
"data-application/define-environment-variable-container/[the `env` value of a "
"container]"
msgstr ""
"コントローラとサテライトポッドに渡す kubernetes シークレットを作成します。"
"Linstor コントローラーとサテライトに渡す追加の環境変数を設定します。 https://"
"kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-"
"container/[コンテナ環境変数] と同じフォーマットを使用します。"

#. type: Plain text
msgid ""
"Sets additional properties on the LINSTOR Controller. Expects a simple "
"mapping of `<property-key>: <value>`."
msgstr ""
"Linstor コントローラーに追加のプロパティを設定します。単純な `<property-"
"key>: <value>` マッピングを使用します。"

#. type: Plain text
msgid ""
"Kubelet expects every CSI plug-in to mount volumes under a specific "
"subdirectory of its own state directory. By default, this state directory is "
"`/var/lib/kubelet`. Some Kubernetes distributions use a different directory:"
msgstr ""
"Kubelet は、すべての CSI プラグインが独自の状態ディレクトリの特定のサブディレ"
"クトリにボリュームをマウントすることを想定しています。デフォルトでは、この状"
"態ディレクトリは `/var/lib/kubelet` です。一部の Kubernetes ディストリビュー"
"ションは異なるディレクトリを使用します。"

#. type: Plain text
msgid "microk8s: `/var/snap/microk8s/common/var/lib/kubelet`"
msgstr "microk8s: `/var/snap/microk8s/common/var/lib/kubelet`"

#. type: Plain text
msgid ""
"Directory on the host that is required for building kernel modules. Only "
"needed if using the `Compile` injection method. Defaults to `/usr/src`, "
"which is where the actual kernel sources are stored on most distributions. "
"Use `\"none\"` to not mount any additional directories."
msgstr ""
"カーネルモジュールのビルドに必要な、ホスト上のディレクトリ。Compile` インジェ"
"クションメソッドを使用する場合のみ必要です。デフォルトは `/usr/src` で、ほと"
"んどのディストリビューションで実際のカーネルソースがここに格納されています。"
"追加のディレクトリをマウントしない場合は、 `\"none\"` を使用します。"

#. type: Plain text
msgid ""
"Set the number of worker threads used by the CSI driver. Higher values put "
"more load on the LINSTOR Controller, which may lead to instability when "
"creating many volumes at once."
msgstr ""
"CSIドライバによって使用されるワーカスレッドの数を設定します。より高い値は"
"LINSTORコントローラに多くの負荷を与え、一度に多くのボリュームを作成する際に不"
"安定になる可能性があります。"

#. type: Plain text
msgid ""
"If set to true, the satellite containers will have the following files and "
"directories mounted from the host OS:"
msgstr ""
"true に設定すると、サテライトコンテナーには、ホスト OS からマウントされた次の"
"ファイルとディレクトリが含まれます。"

#. type: Plain text
msgid "`/etc/drbd/drbd.conf` (file)"
msgstr "`/etc/drbd/drbd.conf` (ファイル)"

#. type: Plain text
msgid "`/etc/drbd.d` (directory)"
msgstr "`/etc/drbd.d` (ディレクトリ)"

#. type: Plain text
msgid "`/var/lib/drbd` (directory)"
msgstr "`/var/lib/drbd` (ディレクトリ)"

#. type: Plain text
msgid "`/var/lib/linstor.d` (directory)"
msgstr "`/var/lib/linstor.d` (ディレクトリ)"

#. type: Plain text
msgid "All files and directories must already exist on the host."
msgstr ""
"すべてのファイルとディレクトリは、ホスト上にすでに存在している必要がありま"
"す。"

#. type: Title =====
#, no-wrap
msgid "High-Availability Deployment"
msgstr "高可用性デプロイメント"

#. type: Plain text
msgid ""
"To create a high-availability deployment of all components, consult the "
"https://github.com/piraeusdatastore/piraeus-operator/blob/b00fd34/doc/"
"scheduling.md[upstream guide] The default values are chosen so that scaling "
"the components to multiple replicas ensures that the replicas are placed on "
"different nodes. This ensures that a single node failures will not interrupt "
"the service."
msgstr ""
"すべてのコンポーネントの高可用性デプロイメントを作成するには https://github."
"com/piraeusdatastore/piraeus-operator/blob/b00fd34/doc/[アップストリームガイ"
"ド] を参照してください。デフォルト値は、複数のレプリカのコンポーネントが異な"
"るノードに配置されるようにスケーリングが行われるように選択されています。これ"
"により、単一ノードの障害によってサービスが中断されることはありません。"

#. type: Title ====
#, no-wrap
msgid "Monitoring with Prometheus"
msgstr "Prometheus による監視"

#. type: Plain text
msgid ""
"You can use https://prometheus.io/[Prometheus] to monitor LINSTOR "
"components.  The operator will set up monitoring containers along the "
"existing components and make them available as a `Service`."
msgstr ""
"https://prometheus.io/[Prometheus] を使って LINSTOR のコンポーネントを監視す"
"ることができます。 オペレータは既存のコンポーネントに沿ってモニタリングコンテ"
"ナをセットアップし、`Service` として利用できるようにします。"

#. type: Plain text
msgid ""
"If you use the https://prometheus-operator.dev/[Prometheus Operator], the "
"LINSTOR Operator will also set up the `ServiceMonitor` instances. The "
"metrics will automatically be collected by the Prometheus instance "
"associated to the operator, assuming https://prometheus-operator.dev/docs/"
"kube/monitoring-other-namespaces/[watching the Piraeus namespace is enabled]."
msgstr ""
"https://prometheus-operator.dev/[Prometheus Operator] を使用する場合、"
"Linstor オペレーターは `ServiceMonitor` インスタンスも設定します。 https://"
"prometheus-operator.dev/docs/kube/monitoring-other-namespaces/[Piraeus 名前空"
"間が有効] と仮定して、メトリックはオペレーターに関連付けられた Prometheus イ"
"ンスタンスによって自動的に収集されます。"

#. type: Plain text
msgid ""
"To disable exporting of metrics, set `operator.satelliteSet.monitoringImage` "
"to an empty value."
msgstr ""
"メトリックのエクスポートを無効にするには `operator.satelliteSet."
"monitoringImage` を空の値に設定します。"

#. type: Title =====
#, no-wrap
msgid "LINSTOR Controller Monitoring"
msgstr "LINSTOR コントローラー監視"

#. type: Plain text
msgid ""
"The LINSTOR Controller exports cluster-wide metrics. Metrics are exported on "
"the existing controller service, using the path https://linbit.com/drbd-user-"
"guide/linstor-guide-1_0-en/#s-linstor-monitoring[`/metrics`]."
msgstr ""
"Linstor コントローラーは、クラスター全体のメトリックをエクスポートします。メ"
"トリックは、パス https://linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-"
"linstor-monitoring[`/metrics`] を使用して、既存のコントローラーサービスにエク"
"スポートされます。"

#. type: Title =====
#, no-wrap
msgid "DRBD Resource Monitoring"
msgstr "DRBD リソース監視"

#. type: Plain text
msgid ""
"All satellites are bundled with a secondary container that uses https://"
"github.com/LINBIT/drbd-reactor/[`drbd-reactor`] to export metrics directly "
"from DRBD. The metrics are available on port 9942, for convenience a "
"headless service named `<linstorsatelliteset-name>-monitoring` is provided."
msgstr ""
"すべてのサテライトは https://github.com/LINBIT/drbd-reactor/[`drbd-reactor`] "
"を使用して DRBD から直接メトリックをエクスポートするセカンダリコンテナにバン"
"ドルされています。メトリックはポート 9942 で、ヘッドレスサービス "
"`<linstorsatelliteset-name>-monitoring` という名前で提供されています。"

#. type: Plain text
msgid ""
"If you want to disable the monitoring container, set `monitoringImage` to "
"`\"\"` in your LinstorSatelliteSet resource."
msgstr ""
"監視コンテナを無効にする場合は、LinstorSatelliteSet リソースで "
"`monitoringImage` を `\"\"` に設定します。"

#. type: Title ====
#, no-wrap
msgid "Deploying with an External LINSTOR Controller"
msgstr "LINSTORオペレーターを使用したデプロイ"

#. type: Plain text
msgid ""
"The operator can configure the satellites and CSI plug-in to use an existing "
"LINSTOR setup. This can be useful in cases where the storage infrastructure "
"is separate from the Kubernetes cluster. Volumes can be provisioned in "
"diskless mode on the Kubernetes nodes while the storage nodes will provide "
"the backing disk storage."
msgstr ""
"オペレーターは、既存の LINSTOR を使用するようにサテライトと CSI プラグインを"
"構成できます。これは、ストレージインフラストラクチャが Kubernetes クラスター"
"から分離されている場合に役立ちます。ボリュームは Kubernetes ノードでディスク"
"レスモードでプロビジョニングでき、ストレージノードが下位ディスクストレージを"
"提供します。"

#. type: Plain text
msgid ""
"To skip the creation of a LINSTOR Controller deployment and configure the "
"other components to use your existing LINSTOR Controller, use the following "
"options when running `helm install`:"
msgstr ""
"LINSTOR コントローラーデプロイメントの作成をスキップし、既存の LINSTOR コント"
"ローラーを使用するように他のコンポーネントを構成するには、 `helm install` を"
"実行するときに次のオプションを使用します。"

#. type: Plain text
msgid ""
"`operator.controller.enabled=false` This disables creation of the "
"`LinstorController` resource"
msgstr ""
"`operator.controller.enabled=false` これにより `LinstorController` リソースを"
"作成しなくなります。"

#. type: Plain text
msgid ""
"`operator.etcd.enabled=false` Since no LINSTOR Controller will run on "
"Kubernetes, no database is required."
msgstr ""
"`operator.etcd.enabled=false` Kubernetes では LINSTOR コントローラーが実行さ"
"れないため、データベースは必要ありません。"

#. type: Plain text
msgid ""
"`controllerEndpoint=<url-of-linstor-controller>` The HTTP endpoint of the "
"existing LINSTOR Controller. For example: `http://linstor.storage."
"cluster:3370/`"
msgstr ""
"`controllerEndpoint=<url-of-linstor-controller>` 既存の LINSTOR コントロー"
"ラーの HTTP エンドポイント。 例えば `http://linstor.storage.cluster:3370/` "

#. type: Plain text
msgid ""
"After all pods are ready, you should see the Kubernetes cluster nodes as "
"satellites in your LINSTOR setup."
msgstr ""
"すべての pod の準備が整うと、既存の LINSTOR 環境で Kubernetes クラスターノー"
"ドがサテライトとして表示されます。"

#. type: Plain text
msgid ""
"Your kubernetes nodes must be reachable using their IP by the controller and "
"storage nodes."
msgstr ""
"kubernetes ノードは、コントローラーとストレージノードが IP を使用して到達可能"
"である必要があります。"

#. type: Plain text
msgid ""
"Create a storage class referencing an existing storage pool on your storage "
"nodes."
msgstr ""
"ストレージノードで既存のストレージプールを参照するストレージクラスを作成しま"
"す。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-on-k8s\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  autoPlace: \"3\"\n"
"  storagePool: existing-storage-pool\n"
"  resourceGroup: linstor-on-k8s\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-on-k8s\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  autoPlace: \"3\"\n"
"  storagePool: existing-storage-pool\n"
"  resourceGroup: linstor-on-k8s\n"

#. type: Plain text
msgid ""
"You can provision new volumes by creating PVCs using your storage class. The "
"volumes will first be placed only on nodes with the given storage pool, that "
"is, your storage infrastructure. Once you want to use the volume in a pod, "
"LINSTOR CSI will create a diskless resource on the Kubernetes node and "
"attach over the network to the diskful resource."
msgstr ""
"ストレージクラスを使用してPVCを作成することで、新しいボリュームをプロビジョニ"
"ングすることができます。ボリュームはまず、指定されたストレージプールを持つ"
"ノード、つまりストレージインフラストラクチャにのみ配置されます。ポッドでボ"
"リュームを使用したい場合は、LINSTOR CSIがKubernetesノードにディスクレスリソー"
"スを作成し、ネットワーク経由でディスクフルリソースに接続します。"

#. type: Title ====
#, no-wrap
msgid "Deploying with the Piraeus Operator"
msgstr "Piraeus オペレーターを使用したデプロイメント"

#. type: Plain text
msgid ""
"The community supported edition of the LINSTOR deployment in Kubernetes is "
"called Piraeus. The Piraeus project provides https://github.com/"
"piraeusdatastore/piraeus-operator[an operator] for deployment."
msgstr ""
"Kubernetes でコミュニティがサポートする LINSTOR デプロイメントのエディション"
"は、Piraeus と呼ばれます。Piraeus プロジェクトに関しては https://github.com/"
"piraeusdatastore/piraeus-operator[オペレータ] を参照ください。"

#. type: Title ===
#, no-wrap
msgid "Interacting with LINSTOR in Kubernetes"
msgstr "Kubernetes で LINSTOR の操作"

#. type: Plain text
msgid ""
"The Controller pod includes a LINSTOR Client, making it easy to interact "
"directly with LINSTOR.  For instance:"
msgstr ""
"コントローラポッドには LINSTOR クライアントが含まれているため、LINSTOR と直接"
"やり取りするのは簡単です。例えば："

#. type: delimited block -
#, no-wrap
msgid "kubectl exec deployment/linstor-op-cs-controller -- linstor storage-pool list\n"
msgstr "kubectl exec deployment/linstor-op-cs-controller -- linstor storage-pool list\n"

#. type: Plain text
msgid ""
"For a convenient shortcut to the above command, download https://github.com/"
"piraeusdatastore/kubectl-linstor/releases[`kubectl-linstor`] and install it "
"alongside `kubectl`. Then you can use `kubectl linstor` to get access to the "
"complete LINSTOR CLI."
msgstr ""
"上記のコマンドへの便利なショートカットを使用する場合、 https://github.com/"
"piraeusdatastore/kubectl-linstor/releases[`kubectl-linstor`] をダウンロード"
"し `kubectl` と一緒にインストールしてください。 `kubectl linstor` を使用して "
"Linstor CLI にアクセスできます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl linstor node list\n"
"╭────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ Node                           ┊ NodeType   ┊ Addresses                   ┊ State  ┊\n"
"╞════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ kube-node-01.test              ┊ SATELLITE  ┊ 10.43.224.26:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-02.test              ┊ SATELLITE  ┊ 10.43.224.27:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-03.test              ┊ SATELLITE  ┊ 10.43.224.28:3366 (PLAIN)   ┊ Online ┊\n"
"┊ linstor-op-cs-controller-[...] ┊ CONTROLLER ┊ 172.24.116.114:3366 (PLAIN) ┊ Online ┊\n"
"╰────────────────────────────────────────────────────────────────────────────────────╯\n"
msgstr ""
"$ kubectl linstor node list\n"
"╭────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ Node                           ┊ NodeType   ┊ Addresses                   ┊ State  ┊\n"
"╞════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ kube-node-01.test              ┊ SATELLITE  ┊ 10.43.224.26:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-02.test              ┊ SATELLITE  ┊ 10.43.224.27:3366 (PLAIN)   ┊ Online ┊\n"
"┊ kube-node-03.test              ┊ SATELLITE  ┊ 10.43.224.28:3366 (PLAIN)   ┊ Online ┊\n"
"┊ linstor-op-cs-controller-[...] ┊ CONTROLLER ┊ 172.24.116.114:3366 (PLAIN) ┊ Online ┊\n"
"╰────────────────────────────────────────────────────────────────────────────────────╯\n"

#. type: Plain text
msgid "It also expands references to PVCs to the matching LINSTOR resource"
msgstr "また参照を Linstor リソースにマッチする PVC に展開します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl linstor resource list -r pvc:my-namespace/demo-pvc-1 --all\n"
"pvc:my-namespace/demo-pvc-1 -> pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526\n"
"╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ ResourceName ┊ Node              ┊ Port ┊ Usage  ┊ Conns ┊    State   ┊ CreatedOn           ┊\n"
"╞═════════════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ pvc-[...]    ┊ kube-node-01.test ┊ 7000 ┊ Unused ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"┊ pvc-[...]    ┊ kube-node-02.test ┊ 7000 ┊ Unused ┊ Ok    ┊ TieBreaker ┊ 2021-02-05 09:16:08 ┊\n"
"┊ pvc-[...]    ┊ kube-node-03.test ┊ 7000 ┊ InUse  ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"
msgstr ""
"$ kubectl linstor resource list -r pvc:my-namespace/demo-pvc-1 --all\n"
"pvc:my-namespace/demo-pvc-1 -> pvc-2f982fb4-bc05-4ee5-b15b-688b696c8526\n"
"╭─────────────────────────────────────────────────────────────────────────────────────────────╮\n"
"┊ ResourceName ┊ Node              ┊ Port ┊ Usage  ┊ Conns ┊    State   ┊ CreatedOn           ┊\n"
"╞═════════════════════════════════════════════════════════════════════════════════════════════╡\n"
"┊ pvc-[...]    ┊ kube-node-01.test ┊ 7000 ┊ Unused ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"┊ pvc-[...]    ┊ kube-node-02.test ┊ 7000 ┊ Unused ┊ Ok    ┊ TieBreaker ┊ 2021-02-05 09:16:08 ┊\n"
"┊ pvc-[...]    ┊ kube-node-03.test ┊ 7000 ┊ InUse  ┊ Ok    ┊   UpToDate ┊ 2021-02-05 09:16:09 ┊\n"
"╰─────────────────────────────────────────────────────────────────────────────────────────────╯\n"

#. type: Plain text
msgid ""
"It also expands references of the form `pod:[<namespace>/]<podname>` into a "
"list resources in use by the pod."
msgstr ""
"また `pod:[<namespace>/]<podname>` 形式の参照をポッドで使用中のリソースリスト"
"へ展開します。"

#. type: Plain text
msgid ""
"This should only be necessary for investigating problems and accessing "
"advanced functionality.  Regular operation such as creating volumes should "
"be achieved through the <<s-kubernetes-basic-configuration-and-deployment,"
"Kubernetes integration>>."
msgstr ""
"これは、問題を調査し、高度な機能にアクセスするためにのみ必要です。ボリューム"
"の作成などの通常の操作は <<s-kubernetes-basic-configuration-and-deployment,"
"Kubernetes の操作>> を参照ください。"

#. type: Title ===
#, no-wrap
msgid "Basic Configuration and Deployment"
msgstr "基本的な構成とデプロイメント"

#. type: Plain text
msgid ""
"Once all linstor-csi __Pod__s are up and running, we can provision volumes "
"using the usual Kubernetes workflows."
msgstr ""
"すべての linstor-csi __Pod__ が稼働したら、通常のKubernetesワークフローを使用"
"してボリュームをプロビジョニングできます。"

#. type: Plain text
msgid ""
"Configuring the behavior and properties of LINSTOR volumes deployed through "
"Kubernetes is accomplished using __StorageClass__es."
msgstr ""
"Kubernetes を介してデプロイされた LINSTOR ボリュームの動作とプロパティの構成"
"は __StorageClass__es を使用して行います。"

#. type: Plain text
msgid ""
"the \"resourceGroup\" parameter is mandatory. Usually you want it to be "
"unique and the same as the storage class name."
msgstr ""
"\"resourceGroup\" パラメータは必須です。通常、一意にしてストレージクラス名と"
"同じにします。"

#. type: Plain text
msgid ""
"Here below is the simplest practical _StorageClass_ that can be used to "
"deploy volumes:"
msgstr ""
"以下は、ボリュームのデプロイに使用できる最も単純で実用的な _StorageClass_ で"
"す。"

#. type: Block title
#, no-wrap
msgid "linstor-basic-sc.yaml"
msgstr "linstor-basic-sc.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  # The name used to identify this StorageClass.\n"
"  name: linstor-basic-storage-class\n"
"  # The name used to match this StorageClass with a provisioner.\n"
"  # linstor.csi.linbit.com is the name that the LINSTOR CSI plug-in uses to identify itself\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer\n"
"parameters:\n"
"  # LINSTOR will provision volumes from the drbdpool storage pool configured\n"
"  # On the satellite nodes in the LINSTOR cluster specified in the plug-in's deployment\n"
"  storagePool: \"lvm-thin\"\n"
"  resourceGroup: \"linstor-basic-storage-class\"\n"
"  # Setting a fstype is required for \"fsGroup\" permissions to work correctly.\n"
"  # Currently supported: xfs/ext4\n"
"  csi.storage.k8s.io/fstype: xfs\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  # The name used to identify this StorageClass.\n"
"  name: linstor-basic-storage-class\n"
"  # The name used to match this StorageClass with a provisioner.\n"
"  # linstor.csi.linbit.com is the name that the LINSTOR CSI plug-in uses to identify itself\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer\n"
"parameters:\n"
"  # LINSTOR will provision volumes from the drbdpool storage pool configured\n"
"  # On the satellite nodes in the LINSTOR cluster specified in the plug-in's deployment\n"
"  storagePool: \"lvm-thin\"\n"
"  resourceGroup: \"linstor-basic-storage-class\"\n"
"  # Setting a fstype is required for \"fsGroup\" permissions to work correctly.\n"
"  # Currently supported: xfs/ext4\n"
"  csi.storage.k8s.io/fstype: xfs\n"

#. type: Plain text
msgid ""
"The _storagePool_ value, `lvm-thin` in the example YAML configuration file "
"above, must match an available LINSTOR _StoragePool_. You can list storage "
"pool information using the `linstor storage-pool list` command, executed "
"within the running `linstor-op-cs-controller` pod."
msgstr ""
"上記の YAML 構成ファイルの例の _storagePool_ の値 `lvm-thin` は利用可能な "
"LINSTOR _StoragePool_ と一致する必要があります。実行中の `linstor-op-cs-"
"controller` ポッド内で実行される `linstorstorage-pool list` コマンドを使用し"
"て、ストレージプール情報を一覧表示できます。"

#. type: Plain text
msgid "We can create the _StorageClass_ with the following command:"
msgstr "次のコマンドで _StorageClass_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f linstor-basic-sc.yaml\n"
msgstr "kubectl create -f linstor-basic-sc.yaml\n"

#. type: Plain text
msgid ""
"Now that our _StorageClass_ is created, we can now create a "
"_PersistentVolumeClaim_ which can be used to provision volumes known both to "
"Kubernetes and LINSTOR:"
msgstr ""
"_StorageClass_ が作成されたので、KubernetesとLINSTOR の両方に認識されるボ"
"リュームをプロビジョニングするために使用できる _PersistentVolumeClaim_ を作成"
"できます。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-pvc.yaml"
msgstr "my-first-linstor-volume-pvc.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"kind: PersistentVolumeClaim\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: my-first-linstor-volume\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"
msgstr ""
"kind: PersistentVolumeClaim\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: my-first-linstor-volume\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"

#. type: Plain text
msgid "We can create the _PersistentVolumeClaim_ with the following command:"
msgstr "次のコマンドで _PersistentVolumeClaim_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-pvc.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-pvc.yaml\n"

#. type: Plain text
msgid ""
"This will create a _PersistentVolumeClaim_, but no volume will be created "
"just yet.  The storage class we used specified `volumeBindingMode: "
"WaitForFirstConsumer`, which means that the volume is only created once a "
"workload starts using it. This ensures that the volume is placed on the same "
"node as the workload."
msgstr ""
"これにより _PersistentVolumeClaim_ が作成されますが、ボリュームはまだ作成され"
"ません。使用したストレージクラスは `volumeBindingMode: WaitForFirstConsumer` "
"を指定しました。これは、ワークロードがボリュームの使用を開始したときにのみボ"
"リュームが作成されることを意味します。これにより、ボリュームがワークロードと"
"同じノードに配置されます。"

#. type: Plain text
msgid ""
"For our example, we create a simple Pod, which mounts or volume by "
"referencing the _PersistentVolumeClaim_."
msgstr ""
"この例では、_PersistentVolumeClaim_ を参照してマウントまたはボリューム化する"
"単純なポッドを作成します。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-pod.yaml"
msgstr "my-first-linstor-volume-pod.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: fedora\n"
"  namespace: default\n"
"spec:\n"
"  containers:\n"
"  - name: fedora\n"
"    image: fedora\n"
"    command: [/bin/bash]\n"
"    args: [\"-c\", \"while true; do sleep 10; done\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"my-first-linstor-volume\"\n"
msgstr ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: fedora\n"
"  namespace: default\n"
"spec:\n"
"  containers:\n"
"  - name: fedora\n"
"    image: fedora\n"
"    command: [/bin/bash]\n"
"    args: [\"-c\", \"while true; do sleep 10; done\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"my-first-linstor-volume\"\n"

#. type: Plain text
msgid "We can create the _Pod_ with the following command:"
msgstr "次のコマンドで _Pod_ を作成できます。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-pod.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-pod.yaml\n"

#. type: Plain text
msgid ""
"Running `kubectl describe pod fedora` can be used to confirm that _Pod_ "
"scheduling and volume attachment succeeded. Examining the "
"_PersistentVolumeClaim_, we can see that it is now bound to a volume."
msgstr ""
"`kubectl describe pod fedora` を実行すると、 _Pod_ スケジューリングとボリュー"
"ム接続が成功したことを確認できます。 _PersistentVolumeClaim_ を見ると、ボ"
"リュームにバインドされていることがわかります。"

#. type: Plain text
msgid ""
"To remove a volume, please ensure that no pod is using it and then delete "
"the _PersistentVolumeClaim_ using the `kubectl` command. For example, to "
"remove the volume that we just made, run the following two commands, noting "
"that the _Pod_ must be unscheduled before the _PersistentVolumeClaim_ will "
"be removed:"
msgstr ""
"ボリュームを削除するにはpodがもう使われていないことを確認してから `kubectl` "
"を使ってPersistentVolumeClaimを削除します。例えば、先ほど作成したボリュームを"
"削除するには、以下のコマンドを実行します。ボリュームが削除される前にpodのスケ"
"ジュールを解除します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl delete pod fedora # unschedule the pod.\n"
msgstr "kubectl delete pod fedora # podをアンスケジュール。\n"

#. type: delimited block -
#, no-wrap
msgid "kubectl get pod -w # wait for pod to be unscheduled\n"
msgstr "kubectl get pod -w # podがアンスケジュールされるまで待つ\n"

#. type: delimited block -
#, no-wrap
msgid "kubectl delete pvc my-first-linstor-volume # remove the PersistentVolumeClaim, the PersistentVolume, and the LINSTOR Volume.\n"
msgstr "kubectl delete pvc my-first-linstor-volume # PersistentVolumeClaim、PersistentVolume、Linstorボリュームを削除する。\n"

#. type: Title ====
#, no-wrap
msgid "Available Parameters in a Storage Class"
msgstr "StorageClass で使用可能なパラメータ"

#. type: Plain text
msgid ""
"The following storage class contains all currently available parameters to "
"configure the provisioned storage."
msgstr ""
"次のストレージクラスには、プロビジョニングされたストレージを構成するために現"
"在使用可能なすべてのパラメーターが含まれています。"

#. type: Plain text
msgid ""
"`linstor.csi.linbit.com/` is an optional, but recommended prefix for LINSTOR "
"CSI specific parameters."
msgstr ""
"`linstor.csi.linbit.com/` はオプションですが、LINSTOR CSI 固有のパラメーター"
"のプレフィックスとして推奨されます。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: full-example\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  # CSI related parameters\n"
"  csi.storage.k8s.io/fstype: xfs\n"
"  # LINSTOR parameters\n"
"  linstor.csi.linbit.com/autoPlace: \"2\"\n"
"  linstor.csi.linbit.com/placementCount: \"2\"\n"
"  linstor.csi.linbit.com/resourceGroup: \"full-example\"\n"
"  linstor.csi.linbit.com/storagePool: \"my-storage-pool\"\n"
"  linstor.csi.linbit.com/disklessStoragePool: \"DfltDisklessStorPool\"\n"
"  linstor.csi.linbit.com/layerList: \"drbd storage\"\n"
"  linstor.csi.linbit.com/placementPolicy: \"AutoPlaceTopology\"\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: \"true\"\n"
"  linstor.csi.linbit.com/encryption: \"true\"\n"
"  linstor.csi.linbit.com/nodeList: \"diskful-a diskful-b\"\n"
"  linstor.csi.linbit.com/clientList: \"diskless-a diskless-b\"\n"
"  linstor.csi.linbit.com/replicasOnSame: \"zone=a\"\n"
"  linstor.csi.linbit.com/replicasOnDifferent: \"rack\"\n"
"  linstor.csi.linbit.com/disklessOnRemaining: \"false\"\n"
"  linstor.csi.linbit.com/doNotPlaceWithRegex: \"tainted.*\"\n"
"  linstor.csi.linbit.com/fsOpts: \"-E nodiscard\"\n"
"  linstor.csi.linbit.com/mountOpts: \"noatime\"\n"
"  linstor.csi.linbit.com/postMountXfsOpts: \"extsize 2m\"\n"
"  # Linstor properties\n"
"  property.linstor.csi.linbit.com/*: <x>\n"
"  # DRBD parameters\n"
"  DrbdOptions/*: <x>\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: full-example\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  # CSI related parameters\n"
"  csi.storage.k8s.io/fstype: xfs\n"
"  # LINSTOR parameters\n"
"  linstor.csi.linbit.com/autoPlace: \"2\"\n"
"  linstor.csi.linbit.com/placementCount: \"2\"\n"
"  linstor.csi.linbit.com/resourceGroup: \"full-example\"\n"
"  linstor.csi.linbit.com/storagePool: \"my-storage-pool\"\n"
"  linstor.csi.linbit.com/disklessStoragePool: \"DfltDisklessStorPool\"\n"
"  linstor.csi.linbit.com/layerList: \"drbd storage\"\n"
"  linstor.csi.linbit.com/placementPolicy: \"AutoPlaceTopology\"\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: \"true\"\n"
"  linstor.csi.linbit.com/encryption: \"true\"\n"
"  linstor.csi.linbit.com/nodeList: \"diskful-a diskful-b\"\n"
"  linstor.csi.linbit.com/clientList: \"diskless-a diskless-b\"\n"
"  linstor.csi.linbit.com/replicasOnSame: \"zone=a\"\n"
"  linstor.csi.linbit.com/replicasOnDifferent: \"rack\"\n"
"  linstor.csi.linbit.com/disklessOnRemaining: \"false\"\n"
"  linstor.csi.linbit.com/doNotPlaceWithRegex: \"tainted.*\"\n"
"  linstor.csi.linbit.com/fsOpts: \"-E nodiscard\"\n"
"  linstor.csi.linbit.com/mountOpts: \"noatime\"\n"
"  linstor.csi.linbit.com/postMountXfsOpts: \"extsize 2m\"\n"
"  # Linstor properties\n"
"  property.linstor.csi.linbit.com/*: <x>\n"
"  # DRBD parameters\n"
"  DrbdOptions/*: <x>\n"

#. type: Title ====
#, no-wrap
msgid "csi.storage.k8s.io/fstype"
msgstr "csi.storage.k8s.io/fstype"

#. type: Plain text
msgid ""
"The `csi.storage.k8s.io/fstype` parameter sets the file system type to "
"create for `volumeMode: FileSystem` PVCs. Currently supported are:"
msgstr ""
"csi.storage.k8s.io/fstype` パラメータは `volumeMode.Fileystem` PVC に作成する"
"ファイルシステムの種類を設定します。FileSystem` のPVCに作成するファイルシステ"
"ムの種類を設定します。現在サポートされているのは次のとおりです。"

#. type: Plain text
msgid "`ext4` (default)"
msgstr "`ext4` (デフォルト)"

#. type: Plain text
msgid "`xfs`"
msgstr "`xfs`"

#. type: Title ====
#, no-wrap
msgid "autoPlace"
msgstr "autoPlace"

#. type: Plain text
msgid ""
"`autoPlace` is an integer that determines the amount of replicas a volume of "
"this _StorageClass_ will have. For instance, `autoPlace: \"3\"` will produce "
"volumes with three-way replication. If neither `autoPlace` nor `nodeList` "
"are set, volumes will be <<s-autoplace-linstor,automatically placed>> on one "
"node."
msgstr ""
"`autoPlace` は、この _StorageClass_ のボリュームが持つレプリカの量を決定する"
"整数値です。例えば、`autoPlace: \"3\"` は３つの複製をもつボリュームを生成しま"
"す。`autoPlace` と `nodeList` のどちらも設定されていない場合、１つのノード上"
"にボリュームが生成されます。<<s-autoplace-linstor,自動配備>> を参照ください。"

#. type: Plain text
msgid ""
"If you use this option, you must not use <<s-kubernetes-nodelist,nodeList>>."
msgstr ""
"このオプションを使用する場合は、 <<s-kubernetes-nodelist,nodeList>> を使用し"
"ないでください。"

#. type: Plain text
msgid ""
"You have to use quotes, otherwise Kubernetes will complain about a malformed "
"_StorageClass_."
msgstr ""
"引用符を使用する必要があります。そうしないと、Kubernetes は不正な形式の "
"_StorageClass_ について文句を言います。"

#. type: Plain text
msgid ""
"This option (and all options which affect autoplacement behavior) modifies "
"the number of LINSTOR nodes on which the underlying storage for volumes will "
"be provisioned and is orthogonal to which _kubelets_ those volumes will be "
"accessible from."
msgstr ""
"このオプション（および自動配置の動作に影響を与えるすべてのオプション）は、ボ"
"リューム用のストレージがプロビジョニングされるLINSTORノードの数を変更し、 "
"_kubelets_ からこれらのボリュームにアクセスできるようにします。"

#. type: Title ====
#, no-wrap
msgid "placementCount"
msgstr "placementCount"

#. type: Plain text
msgid "`placementCount` is an alias for <<s-kubernetes-autoplace,`autoPlace`>>"
msgstr ""
"`placementCount` は <<s-kubernetes-autoplace,`autoPlace`>> のエイリアスです。"

#. type: Title ====
#, no-wrap
msgid "resourceGroup"
msgstr "resourceGroup"

#. type: Plain text
msgid ""
"The <<s-linstor-resource-groups, LINSTOR Resource Group (RG)>> to associate "
"with this StorageClass. If not set, a new RG will be created for each new "
"PVC."
msgstr ""
"この StorageClass に関連付けられた <<s-linstor-resource-groups, LINSTOR "
"Resource Group (RG)>> 。設定されていない場合、新しい PVC ごとに新しい RG が作"
"成されます。"

#. type: Title ====
#, no-wrap
msgid "storagePool"
msgstr "storagePool"

#. type: Plain text
msgid ""
"`storagePool` is the name of the LINSTOR <<s-storage_pools,storage pool>> "
"that will be used to provide storage to the newly-created volumes."
msgstr ""
"`storagePool` は LINSTOR <<s-storage_pools,ストレージプール>> の名前で、新規"
"に作成されたボリュームにストレージを供給するときに使用されます。"

#. type: Plain text
msgid ""
"Only nodes configured with this same _storage pool_ with be considered for "
"<<s-kubernetes-autoplace,autoplacement>>. Likewise, for _StorageClasses_ "
"using <<s-kubernetes-nodelist,nodeList>> all nodes specified in that list "
"must have this _storage pool_ configured on them."
msgstr ""
"これと同じ _storage pool_ で構成されたノードのみが <<s-kubernetes-autoplace,"
"autoplacement>> に使用されます。同様に <<s-kubernetes-nodelist,nodeList>> を"
"使う _StorageClasses_ ではそのリストで指定されたすべてのノードが _storage "
"pool_ を構成している必要があります。"

#. type: Title ====
#, no-wrap
msgid "disklessStoragePool"
msgstr "disklessStoragePool"

#. type: Plain text
msgid ""
"`disklessStoragePool` is an optional parameter that only effects LINSTOR "
"volumes assigned disklessly to _kubelets_ i.e., as clients. If you have a "
"custom _diskless storage pool_ defined in LINSTOR, you'll specify that here."
msgstr ""
"`disklessStoragePool` はオプションでノードが _kubelets_ にディスクレス、すな"
"わちクライアントとして割り当てられるようにするときに使用します。LINSTOR でカ"
"スタムディスクレスストレージプールが定義されている場合は、ここで指定します。"

#. type: Title ====
#, no-wrap
msgid "layerList"
msgstr "layerList"

#. type: Plain text
msgid ""
"A comma-separated list of layers to use for the created volumes. The "
"available layers and their order are described towards the end of <<s-"
"linstor-without-drbd, this section>>. Defaults to `drbd,storage`"
msgstr ""
"作成されたボリュームで使用するレイヤーのコンマ区切りのリスト。使用可能なレイ"
"ヤーと順序は <<s-linstor-without-drbd, このセクション>> の後半に記述されてい"
"ます。"

#. type: Title ====
#, no-wrap
msgid "placementPolicy"
msgstr "placementPolicy"

#. type: Plain text
msgid "Select from one of the available volume schedulers:"
msgstr "使用可能なボリュームスケジューラの 1 つから選択します。"

#. type: Plain text
msgid ""
"`AutoPlaceTopology`, the default: Use topology information from Kubernetes "
"together with user provided constraints (see <<s-kubernetes-replicasonsame>> "
"and <<s-kubernetes-replicasondifferent>>)."
msgstr ""
"`AutoPlaceTopology` (デフォルト)： ユーザー提供の制約とともに、Kubernetesから"
"のトポロジ情報を使用する(詳細は see <<s-kubernetes-replicasonsame>> と <<s-"
"kubernetes-replicasondifferent>> を参照)。"

#. type: Plain text
msgid ""
"`AutoPlace` Use LINSTOR autoplace, influenced by <<s-kubernetes-"
"replicasonsame>> and <<s-kubernetes-replicasondifferent>>"
msgstr ""
"`AutoPlace` : LINSTOR autoplace を使う。 <<s-kubernetes-replicasonsame>> と "
"<<s-kubernetes-replicasondifferent>> の影響をうける。"

#. type: Plain text
msgid ""
"`FollowTopology`: Use CSI Topology information to place at least one volume "
"in each \"preferred\" zone. Only useable if CSI Topology is enabled."
msgstr ""
"`FollowTopology`: CSI トポロジ情報を使用して、各 \"preferred\" ゾーンに少なく"
"とも 1 つのボリュームを配置します。CSI トポロジが有効になっている場合にのみ使"
"用できます。"

#. type: Plain text
msgid "`Manual`: Use only the nodes listed in `nodeList` and `clientList`."
msgstr ""
"`Manual`: `nodeList` と `clientList` にリストされているノードのみを使用する。"

#. type: Plain text
msgid ""
"`Balanced`: **EXPERIMENTAL** Place volumes across failure domains, using the "
"least used storage pool on each selected node."
msgstr ""
"`Balanced`: **実験的** 選択した各ノードで最も使用されていないストレージプール"
"を使用して、障害のあるドメイン全体にボリュームを配置する。"

#. type: Title ====
#, no-wrap
msgid "allowRemoteVolumeAccess"
msgstr "allowRemoteVolumeAccess"

#. type: Plain text
msgid ""
"Control on which nodes a volume is accessible. The value for this option can "
"take two different forms:"
msgstr ""
"ボリュームにアクセスできるノードを制御します。このオプションの値は、次の 2 つ"
"の異なる形式をとることができます。"

#. type: Plain text
msgid ""
"A simple `\"true\"` or `\"false\"` allows access from all nodes, or only "
"those nodes with diskfull resources."
msgstr ""
"`\"true\"` または `\"false\"` は、すべてのノードからのアクセス、またはディス"
"クフルリソースを持つノードのみからのアクセスを許可します。"

#. type: Plain text
msgid ""
"Advanced rules, which allow more granular rules on which nodes can access "
"the volume."
msgstr ""
"高度なルール。ノードがボリュームにアクセスできる、より詳細なルールを可能にし"
"ます。"

#. type: Plain text
msgid ""
"The current implementation can grant access to the volume for nodes that "
"share the same labels. For example, if you want to allow access from all "
"nodes in the same region and zone as a diskfull resource, you could use:"
msgstr ""
"現在の実装では、同じラベルを共有するノードのボリュームへのアクセスを許可でき"
"ます。たとえば、ディスクフルリソースと同じリージョンおよびゾーン内のすべての"
"ノードからのアクセスを許可する場合は、次を使用できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"parameters:\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: |\n"
"    - fromSame:\n"
"      - topology.kubernetes.io/region\n"
"      - topology.kubernetes.io/zone\n"
msgstr ""
"parameters:\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: |\n"
"    - fromSame:\n"
"      - topology.kubernetes.io/region\n"
"      - topology.kubernetes.io/zone\n"

#. type: Plain text
msgid ""
"You can specify multiple rules. The rules are additive, a node only need to "
"match one rule to be assignable."
msgstr ""
"複数のルールを指定でき、1 つのルールに一致するだけで割り当て可能になります。"

#. type: Title ====
#, no-wrap
msgid "encryption"
msgstr "encryption"

#. type: Plain text
msgid ""
"`encryption` is an optional parameter that determines whether to encrypt "
"volumes. LINSTOR must be <<s-linstor-encrypted-volumes,configured for "
"encryption>> for this to work properly."
msgstr ""
"`encryption` はオプションで、ボリュームを暗号化するかどうかを指定します。"
"LINSTOR はこれが正しく動作するように適切に設定されている必要があります。"

#. type: Title ====
#, no-wrap
msgid "nodeList"
msgstr "nodeList"

#. type: Plain text
msgid ""
"`nodeList` is a list of nodes for volumes to be assigned to. This will "
"assign the volume to each node and it will be replicated among all of them. "
"This can also be used to select a single node by hostname, but it's more "
"flexible to use <<s-kubernetes-replicasonsame,replicasOnSame>> to select a "
"single node."
msgstr ""
"`nodeList` はボリュームが割り当てられるノードのリストです。ボリュームがそれぞ"
"れのノードに割り当てられそれらの間で複製が行われます。これはホスト名で１つの"
"ノードを指定できますが、 これには <<s-kubernetes-replicasonsame,"
"replicasOnSame>> を使うほうが柔軟性があります。"

#. type: Plain text
msgid ""
"If you use this option, you must not use <<s-kubernetes-autoplace,"
"autoPlace>>."
msgstr ""
"このオプションを使用する場合は <<s-kubernetes-autoplace,autoPlace>> を使用し"
"ないでください。"

#. type: Plain text
msgid ""
"This option determines on which LINSTOR nodes the underlying storage for "
"volumes will be provisioned and is orthogonal from which _kubelets_ these "
"volumes will be accessible."
msgstr ""
"このオプションは、ボリュームのストレージをどのLINSTORノード上でプロビジョニン"
"グするかを決定し、 _kubelets_ からこれらのボリュームにアクセスできるようにし"
"ます。"

#. type: Title ====
#, no-wrap
msgid "clientList"
msgstr "clientList"

#. type: Plain text
msgid ""
"`clientList` is a list of nodes for diskless volumes to be assigned to. Use "
"in conjunction with <<s-kubernetes-nodelist>>."
msgstr ""
"`clientList` は、割り当てられるディスクレスボリュームのノードのリストです。 "
"<<s-kubernetes-nodelist>> と組み合わせて使用します。"

#. type: Title ====
#, no-wrap
msgid "replicasOnSame"
msgstr "replicasOnSame"

#.  These should link to the linstor documentation about node properties, but those
#.  do not exist at the time of this commit.
#. type: Plain text
msgid ""
"`replicasOnSame` is a list of `key` or `key=value` items used as "
"autoplacement selection labels when <<s-kubernetes-autoplace,autoplace>> is "
"used to determine where to provision storage. These labels correspond to "
"LINSTOR node properties."
msgstr ""
"`replicasOnSame` は自動配置選択ラベルとして使用される `key` または "
"`key=value` アイテムのリストです。これは <<s-kubernetes-autoplace,"
"autoplace>> がストレージをプロビジョニングする場所を決定するために使用されま"
"す。これらのラベルは、LINSTOR ノードのプロパティに対応しています。"

#. type: Plain text
msgid ""
"The operator periodically synchronizes all labels from Kubernetes Nodes, so "
"you can use them as keys for scheduling constraints."
msgstr ""
"オペレーターは、Kubernetes ノードからのすべてのラベルを定期的に同期するため、"
"それらをスケジューリング制約のキーとして使用できます。"

#. type: Plain text
msgid ""
"Let's explore this behavior with examples assuming a LINSTOR cluster such "
"that `node-a` is configured with the following auxiliary property `zone=z1` "
"and `role=backups`, while `node-b` is configured with only `zone=z1`."
msgstr ""
"`node-a` が補助プロパティ `zone=z1`, `role=backups` で、 `node-b` が "
"`zone=z1` のみで構成されているような LINSTOR クラスターを想定した例でこの動作"
"を調べてみましょう。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"1\"` and "
"`replicasOnSame: \"zone=z1 role=backups\"`, then all volumes created from "
"that _StorageClass_ will be provisioned on `node-a`, since that is the only "
"node with all of the correct key=value pairs in the LINSTOR cluster. This is "
"the most flexible way to select a single node for provisioning."
msgstr ""
"`autoPlace: \"1\"` と `replicasOnSame: \"zone=z1 role=backups\"` を持つ "
"_StorageClass_ を設定すると、この _StorageClass_ から生成されるすべてのボ"
"リュームは `node-a` にプロビジョニングされます。これは LINSTOR クラスタ内です"
"べての key = value ペアを持つ唯一のノードだからです。これは、プロビジョニング"
"に１つのノードを選択する最も柔軟な方法です。"

#. type: Plain text
msgid ""
"This guide assumes LINSTOR CSI version 0.10.0 or newer. All properties "
"referenced in `replicasOnSame` and `replicasOnDifferent` are interpreted as "
"auxiliary properties. If you are using an older version of LINSTOR CSI, you "
"need to add the `Aux/` prefix to all property names. So `replicasOnSame: "
"\"zone=z1\"` would be `replicasOnSame: \"Aux/zone=z1\"` Using `Aux/` "
"manually will continue to work on newer LINSTOR CSI versions."
msgstr ""
"このガイドは、LINSTOR CSI バージョン 0.10.0 以降を想定しています。 "
"`replicasOnSame` および `replicasOnDifferent` で参照されるすべてのプロパティ"
"は、補助プロパティとして解釈されます。古いバージョンの LINSTOR CSI を使用して"
"いる場合は、すべてのプロパティ名に `Aux/` プレフィックスを追加する必要があり"
"ます。したがって、 `replicasOnSame: \"zone=z1\"` は `replicasOnSame: \"Aux/"
"zone=z1\"` になります。 `Aux/` を手動で追加すると、新しい LINSTOR CSI バー"
"ジョンで引き続き機能します。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"1\"` and "
"`replicasOnSame: \"zone=z1\"`, then volumes will be provisioned on either "
"`node-a` or `node-b` as they both have the `zone=z1` aux prop."
msgstr ""
"`autoPlace: \"1\"` と `replicasOnSame: \"zone=z1\"` を持つ _StorageClass_ を"
"設定すると、ボリュームは `node-a` か `node-b` のどちらかにプロビジョニングさ"
"れます。これは、両方が `zone=z1` aux prop を持つからです。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"2\"` and "
"`replicasOnSame: \"zone=z1 role=backups\"`, then provisioning will fail, as "
"there are not two or more nodes that have the appropriate auxiliary "
"properties."
msgstr ""
"`autoPlace: \"2\"` と `replicasOnSame: \"zone=z1 role=backups\"` を持つ "
"_StorageClass_ を設定すると、適切な補助プロパティを持つノードが2つ以上ないた"
"めプロビジョニングは失敗します。"

#. type: Plain text
msgid ""
"If we configure a _StorageClass_ with `autoPlace: \"2\"` and "
"`replicasOnSame: \"zone=z1\"`, then volumes will be provisioned on both "
"`node-a` and `node-b` as they both have the `zone=z1` aux prop."
msgstr ""
"`autoPlace: \"2\"` と `replicasOnSame: \"zone=z1\"` を持つ _StorageClass_ を"
"設定すると、ボリュームは `node-a` と `node-b` の両方にプロビジョニングされま"
"す。これは、両方が `zone=z1` aux prop を持つからです。"

#. type: Plain text
msgid ""
"You can also use a property key without providing a value to ensure all "
"replicas are placed on nodes with the same property value, with caring about "
"the particular value. Assuming there are 4 nodes, `node-a1` and `node-a2` "
"are configured with `zone=a`. `node-b1` and `node-b2` are configured with "
"`zone=b`. Using `autoPlace: \"2\"` and `replicasOnSame: \"zone\"` will place "
"on either `node-a1` and `node-a2` OR on `node-b1` and `node-b2`."
msgstr ""
"値を指定せずにプロパティキーを使用して、特定の値を考慮しながら、すべてのレプ"
"リカが同じプロパティ値を持つノードに配置されるようにすることもできます。 4つ"
"のノードがあると仮定し `node-a1` と `node-a2` は `zone=a` で構成、 `node-b1` "
"と `node-b2` は `zone=b` で構成されているとします。 `autoPlace: \"2\"` と "
"`replicasOnSame: \"zone\"` を使用すると `node-a1` と `node-a2`、または `node-"
"b1` と `node-b2` のいずれかに配置されます。"

#. type: Title ====
#, no-wrap
msgid "replicasOnDifferent"
msgstr "replicasOnDifferent"

#. type: Plain text
msgid ""
"`replicasOnDifferent` takes a list of properties to consider, same as <<s-"
"kubernetes-replicasonsame,replicasOnSame>>.  There are two modes of using "
"`replicasOnDifferent`:"
msgstr ""
"`replicasOnDifferent` は <<s-kubernetes-replicasonsame,replicasOnSame>> と同"
"じように、考慮すべきプロパティのリストを取ります。 `replicasOnDifferent` の使"
"用には 2 つのモードがあります。"

#. type: Plain text
msgid "Preventing volume placement on specific nodes:"
msgstr "特定のノードでのボリューム配置の防止:"

#. type: Plain text
msgid ""
"If a value is given for the property, the nodes which have that property-"
"value pair assigned will be considered last."
msgstr ""
"プロパティに値が指定されている場合、そのプロパティと値のペアが割り当てられて"
"いるノードが最後に考慮されます。"

#. type: Plain text
msgid ""
"Example: `replicasOnDifferent: \"no-csi-volumes=true\"` will place no volume "
"on any node with property `no-csi-volumes=true` unless there are not enough "
"other nodes to fulfill the `autoPlace` setting."
msgstr ""
"例： `replicasOnDifferent: \"no-csi-volumes=true\"` は `autoPlace` 設定を満た"
"すのに十分なノードが他にない限り、プロパティ `no-csi-volumes=true` を持つノー"
"ドにボリュームを配置しません。"

#. type: Plain text
msgid "Distribute volumes across nodes with different values for the same key:"
msgstr "同じキーの値が異なるノード間でボリュームを分散します。"

#. type: Plain text
msgid ""
"If no property value is given, LINSTOR will place the volumes across nodes "
"with different values for that property if possible."
msgstr ""
"プロパティ値が指定されていない場合、LINSTOR は、可能であれば、そのプロパティ"
"の値が異なるノード間でボリュームを配置します。"

#. type: Plain text
msgid ""
"Example: Assuming there are 4 nodes, `node-a1` and `node-a2` are configured "
"with `zone=a`. `node-b1` and `node-b2` are configured with `zone=b`. Using a "
"_StorageClass_ with `autoPlace: \"2\"` and `replicasOnDifferent: \"zone\"`, "
"LINSTOR will create one replica on either `node-a1` or `node-a2` _and_ one "
"replica on either `node-b1` or `node-b2`."
msgstr ""
"例： 4 つのノードがあると仮定し `node-a1` と `node-a2` は `zone=a` で、 "
"`node-b1` と `node-b2` は `zone=b` で構成されているとします。 _StorageClass_ "
"を `autoPlace: \"2\"` および `replicasOnDifferent: \"zone\"` で使用すると、"
"LINSTOR は `node-a1` または `node-a2` のいずれかに 1 つのレプリカを作成し、 "
"`node-b1` または `node-b2` のいずれかにもう 1 つのレプリカを作成します。"

#. type: Title ====
#, no-wrap
msgid "disklessOnRemaining"
msgstr "disklessOnRemaining"

#. type: Plain text
msgid ""
"Create a diskless resource on _all_ nodes that were not assigned a diskful "
"resource."
msgstr ""
"ディスクフルリソースが割り当てられていないすべてのノードにディスクレスリソー"
"スを作成します。"

#. type: Title ====
#, no-wrap
msgid "doNotPlaceWithRegex"
msgstr "doNotPlaceWithRegex"

#. type: Plain text
msgid ""
"Do not place the resource on a node which has a resource with a name "
"matching the regex."
msgstr "正規表現と一致する名前のリソースを持つノードにリソースを配置しない。"

#. type: Title ====
#, no-wrap
msgid "fsOpts"
msgstr "fsOpts"

#. type: Plain text
msgid ""
"`fsOpts` is an optional parameter that passes options to the volume's "
"filesystem at creation time."
msgstr ""
"`fsOpts` はオプションで、作成時にボリュームのファイルシステムに渡すオプション"
"を指定します。"

#. type: Plain text
msgid ""
"Please note these values are specific to your chosen <<s-kubernetes-"
"filesystem, filesystem>>."
msgstr ""
"これらの値は選択した <<s-kubernetes-filesystem, filesystem>> 固有です。"

#. type: Title ====
#, no-wrap
msgid "mountOpts"
msgstr "mountOpts"

#. type: Plain text
msgid ""
"`mountOpts` is an optional parameter that passes options to the volume's "
"filesystem at mount time."
msgstr ""
"`mountOpts` はオプションで、マウント時にボリュームのファイルシステムに渡すオ"
"プションを指定します。"

#. type: Title ====
#, no-wrap
msgid "postMountXfsOpts"
msgstr "postMountXfsOpts"

#. type: Plain text
msgid ""
"Extra arguments to pass to `xfs_io`, which gets called before right before "
"first use of the volume."
msgstr ""
"ボリュームを最初に使用する直前に呼び出される `xfs_io` に渡す追加の引数。"

#. type: Title ====
#, no-wrap
msgid "property.linstor.csi.linbit.com/*"
msgstr "property.linstor.csi.linbit.com/*"

#. type: Plain text
msgid ""
"Parameters starting with `property.linstor.csi.linbit.com/` are translated "
"to LINSTOR properties that are set on the <<s-linstor-resource-groups,"
"Resource Group>> associated with the StorageClass."
msgstr ""
"`property.linstor.csi.linbit.com/` で始まるパラメータは StorageClass の <<s-"
"linstor-resource-groups,Resource Group>> に設定される Linstor プロパティに変"
"換されます。"

#. type: Plain text
msgid "For example, to set `DrbdOptions/auto-quorum` to `disabled`, use:"
msgstr ""
"たとえば `DrbdOptions/auto-quorum` を `disabled` に設定するには、次を使用しま"
"す。"

#. type: delimited block -
#, no-wrap
msgid "property.linstor.csi.linbit.com/DrbdOptions/auto-quorum: disabled\n"
msgstr "property.linstor.csi.linbit.com/DrbdOptions/auto-quorum: disabled\n"

#. type: Plain text
msgid ""
"The full list of options is available https://app.swaggerhub.com/apis-docs/"
"Linstor/Linstor/1.7.0#/developers/resourceDefinitionModify[here]"
msgstr ""
"オプションの完全なリストは https://app.swaggerhub.com/apis-docs/Linstor/"
"Linstor/1.7.0#/developers/resourceDefinitionModify[こちら] で入手できます。"

#. type: Title ====
#, no-wrap
msgid "DrbdOptions/*: <x>"
msgstr "DrbdOptions/*: <x>"

#. type: Plain text
msgid ""
"This option is deprecated, use the more general <<s-kubernetes-storage-class-"
"properties, `property.linstor.csi.linbit.com/*`>> form."
msgstr ""
"このオプションは非推奨です。より一般的な <<s-kubernetes-storage-class-"
"properties, `property.linstor.csi.linbit.com/*`>> を使用してください。"

#. type: Plain text
msgid ""
"Advanced DRBD options to pass to LINSTOR. For example, to change the "
"replication protocol, use `DrbdOptions/Net/protocol: \"A\"`."
msgstr ""
"LINSTOR に渡す高度な DRBD オプション。たとえば、レプリケーションプロトコルを"
"変更するには `DrbdOptions/Net/protocol: \"A\"` を使用します。"

#. type: Title ===
#, no-wrap
msgid "Snapshots"
msgstr "スナップショット"

#. type: Plain text
msgid ""
"Creating <<s-linstor-snapshots, snapshots>> and creating new volumes from "
"snapshots is done using __VolumeSnapshot__s, __VolumeSnapshotClass__es, and "
"__PVC__s."
msgstr ""
"<<s-linstor-snapshots, スナップショット>> の作成とスナップショットからの新し"
"いボリュームの作成は __VolumeSnapshot__s, __VolumeSnapshotClass__es, と "
"__PVC__s を使用して行われます。"

#. type: Title ====
#, no-wrap
msgid "Adding Snapshot Support"
msgstr "スナップショットサポートの追加"

#. type: Plain text
msgid ""
"LINSTOR supports the volume snapshot feature, which is configured in some, "
"but not all Kubernetes distributions."
msgstr ""
"LINSTOR は、すべてではありませんが一部の Kubernetes ディストリビューションで"
"ボリュームスナップショット機能をサポートしています。"

#. type: Plain text
msgid ""
"To check if your Kubernetes distribution supports snapshots out of the box, "
"run the following command:"
msgstr ""
"Kubernetes ディストリビューションがスナップショットをサポートしているかどうか"
"を確認するには、次のコマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl get --raw /apis/snapshot.storage.k8s.io/v1\n"
"{\"kind\":\"APIResourceList\",\"apiVersion\":\"v1\",\"groupVersion\":\"snapshot.storage.k8s.io/v1\"...\n"
"$ # If your distribution does NOT support snapshots out of the box, you will get a different response:\n"
"$ kubectl get --raw /apis/snapshot.storage.k8s.io/v1\n"
"Error from server (NotFound): the server could not find the requested resource\n"
msgstr ""
"$ kubectl get --raw /apis/snapshot.storage.k8s.io/v1\n"
"{\"kind\":\"APIResourceList\",\"apiVersion\":\"v1\",\"groupVersion\":\"snapshot.storage.k8s.io/v1\"...\n"
"$ # If your distribution does NOT support snapshots out of the box, you will get a different response:\n"
"$ kubectl get --raw /apis/snapshot.storage.k8s.io/v1\n"
"Error from server (NotFound): the server could not find the requested resource\n"

#. type: Plain text
msgid ""
"In case your Kubernetes distribution _does not_ support snapshots, you can "
"manually add the {snapshot-controller-link}[required components] from the "
"Kubernetes Storage SIG. For convenience, you can use {piraeus-charts-link}"
"[Helm Charts] provided by the {piraeus-org}[Piraeus team] to add these "
"components."
msgstr ""
"Kubernetes ディストリビューションがスナップショットをサポートしていない場合"
"は、Kubernetes Storage SIG から {snapshot-controller-link}[required "
"components] を手動で追加できます。 {piraeus-org}[Piraeus team] が提供する "
"{piraeus-charts-link}[Helm Charts] を使用してこれらのコンポーネントを追加する"
"ことも可能です。"

#. type: Block title
#, no-wrap
msgid "Adding snapshot support using the Piraeus Charts"
msgstr "Piraeus チャートを使用したスナップショットサポートの追加"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kubectl create namespace snapshot-controller\n"
"$ helm repo add piraeus-charts https://piraeus.io/helm-charts/\n"
"$ helm install -n snapshot-controller snapshot-validation-webhook \\\n"
"  piraeus-charts/snapshot-validation-webhook\n"
"$ helm install -n snapshot-controller snapshot-controller \\\n"
"  piraeus-charts/snapshot-controller --wait\n"
msgstr ""
"$ kubectl create namespace snapshot-controller\n"
"$ helm repo add piraeus-charts https://piraeus.io/helm-charts/\n"
"$ helm install -n snapshot-controller snapshot-validation-webhook \\\n"
"  piraeus-charts/snapshot-validation-webhook\n"
"$ helm install -n snapshot-controller snapshot-controller \\\n"
"  piraeus-charts/snapshot-controller --wait\n"

#. type: Title ====
#, no-wrap
msgid "Using Volume Snapshots"
msgstr "ボリュームスナップショットの使用"

#. type: Plain text
msgid "Then we can create our _VolumeSnapshotClass_:"
msgstr "それで _VolumeSnapshotClass_ を作成できます。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-snapshot-class.yaml"
msgstr "my-first-linstor-snapshot-class.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshotClass\n"
"metadata:\n"
"  name: my-first-linstor-snapshot-class\n"
"driver: linstor.csi.linbit.com\n"
"deletionPolicy: Delete\n"
msgstr ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshotClass\n"
"metadata:\n"
"  name: my-first-linstor-snapshot-class\n"
"driver: linstor.csi.linbit.com\n"
"deletionPolicy: Delete\n"

#. type: Plain text
msgid "Create the _VolumeSnapshotClass_ with `kubectl`:"
msgstr "`kubectl` を使用して _VolumeSnapshotClass_ を作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-snapshot-class.yaml\n"
msgstr "kubectl create -f my-first-linstor-snapshot-class.yaml\n"

#. type: Plain text
msgid ""
"Now we will create a volume snapshot for the volume that we created above. "
"This is done with a _VolumeSnapshot_:"
msgstr ""
"次に上記で作成したボリュームのボリュームスナップショットを作成します。これは "
"_VolumeSnapshot_ を使用します。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-snapshot.yaml"
msgstr "my-first-linstor-snapshot.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshot\n"
"metadata:\n"
"  name: my-first-linstor-snapshot\n"
"spec:\n"
"  volumeSnapshotClassName: my-first-linstor-snapshot-class\n"
"  source:\n"
"    persistentVolumeClaimName: my-first-linstor-volume\n"
msgstr ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshot\n"
"metadata:\n"
"  name: my-first-linstor-snapshot\n"
"spec:\n"
"  volumeSnapshotClassName: my-first-linstor-snapshot-class\n"
"  source:\n"
"    persistentVolumeClaimName: my-first-linstor-volume\n"

#. type: Plain text
msgid "Create the _VolumeSnapshot_ with `kubectl`:"
msgstr "`kubectl` を使用して _VolumeSnapshot_ を作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-snapshot.yaml\n"
msgstr "kubectl create -f my-first-linstor-snapshot.yaml\n"

#. type: Plain text
msgid "You can check that the snapshot creation was successful"
msgstr "スナップショットの作成が成功したことを確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"kubectl describe volumesnapshots.snapshot.storage.k8s.io my-first-linstor-snapshot\n"
"...\n"
"Spec:\n"
"  Source:\n"
"    Persistent Volume Claim Name:  my-first-linstor-snapshot\n"
"  Volume Snapshot Class Name:      my-first-linstor-snapshot-class\n"
"Status:\n"
"  Bound Volume Snapshot Content Name:  snapcontent-b6072ab7-6ddf-482b-a4e3-693088136d2c\n"
"  Creation Time:                       2020-06-04T13:02:28Z\n"
"  Ready To Use:                        true\n"
"  Restore Size:                        500Mi\n"
msgstr ""
"kubectl describe volumesnapshots.snapshot.storage.k8s.io my-first-linstor-snapshot\n"
"...\n"
"Spec:\n"
"  Source:\n"
"    Persistent Volume Claim Name:  my-first-linstor-snapshot\n"
"  Volume Snapshot Class Name:      my-first-linstor-snapshot-class\n"
"Status:\n"
"  Bound Volume Snapshot Content Name:  snapcontent-b6072ab7-6ddf-482b-a4e3-693088136d2c\n"
"  Creation Time:                       2020-06-04T13:02:28Z\n"
"  Ready To Use:                        true\n"
"  Restore Size:                        500Mi\n"

#. type: Plain text
msgid "Finally, we'll create a new volume from the snapshot with a _PVC_."
msgstr "最後にスナップショットから _PVC_ で新しいボリュームを作成します。"

#. type: Block title
#, no-wrap
msgid "my-first-linstor-volume-from-snapshot.yaml"
msgstr "my-first-linstor-volume-from-snapshot.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: PersistentVolumeClaim\n"
"metadata:\n"
"  name: my-first-linstor-volume-from-snapshot\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  dataSource:\n"
"    name: my-first-linstor-snapshot\n"
"    kind: VolumeSnapshot\n"
"    apiGroup: snapshot.storage.k8s.io\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"
msgstr ""
"apiVersion: v1\n"
"kind: PersistentVolumeClaim\n"
"metadata:\n"
"  name: my-first-linstor-volume-from-snapshot\n"
"spec:\n"
"  storageClassName: linstor-basic-storage-class\n"
"  dataSource:\n"
"    name: my-first-linstor-snapshot\n"
"    kind: VolumeSnapshot\n"
"    apiGroup: snapshot.storage.k8s.io\n"
"  accessModes:\n"
"    - ReadWriteOnce\n"
"  resources:\n"
"    requests:\n"
"      storage: 500Mi\n"

#. type: Plain text
msgid "Create the _PVC_ with `kubectl`:"
msgstr "`kubectl` を使用して _PVC_ を作成します。"

#. type: delimited block -
#, no-wrap
msgid "kubectl create -f my-first-linstor-volume-from-snapshot.yaml\n"
msgstr "kubectl create -f my-first-linstor-volume-from-snapshot.yaml\n"

#. type: Title =====
#, no-wrap
msgid "Storing Snapshots on S3 Storage"
msgstr "スナップショットのS3ストレージへの保存"

#. type: Plain text
msgid ""
"LINSTOR can store snapshots on S3 compatible storage for disaster recovery. "
"This is integrated in Kubernetes using special a special VolumeSnapshotClass:"
msgstr ""
"LINSTORはディザスターリカバリーのために、スナップショットをS3互換のストレージ"
"に保存することができます。これは特別なVolumeSnapshotClassを使用してKubernetes"
"に統合されています。"

#. type: delimited block -
#, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: delimited block -
#, no-wrap
msgid ""
"kind: VolumeSnapshotClass\n"
"apiVersion: snapshot.storage.k8s.io/v1\n"
"metadata:\n"
"  name: linstor-csi-snapshot-class-s3\n"
"driver: linstor.csi.linbit.com\n"
"deletionPolicy: Retain\n"
"parameters:\n"
"  snap.linstor.csi.linbit.com/type: S3\n"
"  snap.linstor.csi.linbit.com/remote-name: backup-remote\n"
"  snap.linstor.csi.linbit.com/allow-incremental: \"false\"\n"
"  snap.linstor.csi.linbit.com/s3-bucket: snapshot-bucket\n"
"  snap.linstor.csi.linbit.com/s3-endpoint: s3.us-west-1.amazonaws.com\n"
"  snap.linstor.csi.linbit.com/s3-signing-region: us-west-1\n"
"  snap.linstor.csi.linbit.com/s3-use-path-style: \"false\"\n"
"  # Refer here to the secret that holds access and secret key for the S3 endpoint.\n"
"  # See below for an example.\n"
"  csi.storage.k8s.io/snapshotter-secret-name: linstor-csi-s3-access\n"
"  csi.storage.k8s.io/snapshotter-secret-namespace: storage\n"
"---\n"
msgstr ""
"kind: VolumeSnapshotClass\n"
"apiVersion: snapshot.storage.k8s.io/v1\n"
"metadata:\n"
"  name: linstor-csi-snapshot-class-s3\n"
"driver: linstor.csi.linbit.com\n"
"deletionPolicy: Retain\n"
"parameters:\n"
"  snap.linstor.csi.linbit.com/type: S3\n"
"  snap.linstor.csi.linbit.com/remote-name: backup-remote\n"
"  snap.linstor.csi.linbit.com/allow-incremental: \"false\"\n"
"  snap.linstor.csi.linbit.com/s3-bucket: snapshot-bucket\n"
"  snap.linstor.csi.linbit.com/s3-endpoint: s3.us-west-1.amazonaws.com\n"
"  snap.linstor.csi.linbit.com/s3-signing-region: us-west-1\n"
"  snap.linstor.csi.linbit.com/s3-use-path-style: \"false\"\n"
"  # Refer here to the secret that holds access and secret key for the S3 endpoint.\n"
"  # See below for an example.\n"
"  csi.storage.k8s.io/snapshotter-secret-name: linstor-csi-s3-access\n"
"  csi.storage.k8s.io/snapshotter-secret-namespace: storage\n"
"---\n"

#. type: delimited block -
#, no-wrap
msgid ""
"kind: Secret\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: linstor-csi-s3-access\n"
"  namespace: storage\n"
"immutable: true\n"
"type: linstor.csi.linbit.com/s3-credentials.v1\n"
"stringData:\n"
"  access-key: access-key\n"
"  secret-key: secret-key\n"
msgstr ""
"kind: Secret\n"
"apiVersion: v1\n"
"metadata:\n"
"  name: linstor-csi-s3-access\n"
"  namespace: storage\n"
"immutable: true\n"
"type: linstor.csi.linbit.com/s3-credentials.v1\n"
"stringData:\n"
"  access-key: access-key\n"
"  secret-key: secret-key\n"

#. type: Plain text
msgid ""
"Check <<s-shipping_snapshots-linstor, the LINSTOR snapshot guide>> on the "
"exact meaning of the `snap.linstor.csi.linbit.com/` parameters. The "
"credentials used to log in are stored in a separate secret, as show in the "
"example above."
msgstr ""
"`snap.linstor.csi.linbit.com/` パラメータの正確な意味については <<s-"
"shipping_snapshots-linstor, LINSTOR スナップショットガイド>> を確認してくださ"
"い。ログインに使用される認証情報は、上記の例で示すように、別のシークレットに"
"保存されます。"

#. type: Plain text
msgid ""
"Referencing the above storage class when creating snapshots causes the "
"snapshots to be automatically uploaded to the configured S3 storage."
msgstr ""
"スナップショット作成時に上記のストレージクラスを参照すると、設定したS3スト"
"レージにスナップショットが自動的にアップロードされるようになります。"

#. type: Title =====
#, no-wrap
msgid "Restoring from Pre-existing Snapshots"
msgstr "既存のスナップショットからリストア"

#. type: Plain text
msgid ""
"Restoring from pre-existing snapshots is an important step in disaster "
"recovery. A snapshot needs to be registered with Kubernetes before it can be "
"used to restore."
msgstr ""
"既存のスナップショットからの復元は、ディザスターリカバリーの重要なステップで"
"す。スナップショットは、リストアに使用する前にKubernetesに登録される必要があ"
"ります。"

#. type: Plain text
msgid ""
"If the snapshot that should be restored is part of a backup to S3, the "
"LINSTOR \"remote\" needs to be configured first."
msgstr ""
"復元すべきスナップショットがS3へのバックアップの一部である場合、LINSTOR "
"\"remote\" を最初に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"linstor remote create s3 backup-remote s3.us-west-1.amazonaws.com \\\n"
"  snapshot-bucket us-west-1 access-key secret-key\n"
"linstor backup list backup-remote\n"
msgstr ""
"linstor remote create s3 backup-remote s3.us-west-1.amazonaws.com \\\n"
"  snapshot-bucket us-west-1 access-key secret-key\n"
"linstor backup list backup-remote\n"

#. type: Plain text
msgid ""
"The snapshot you want to register needs to be one of the listed snapshots."
msgstr ""
"登録するスナップショットは、リストアップされたスナップショットのうちの1つを指"
"定します。"

#. type: Plain text
msgid ""
"To register the snapshot with Kubernetes, you need to create two resources, "
"one VolumeSnapshotContent referencing the ID of the snapshot and one "
"VolumeSnapshot, referencing the content."
msgstr ""
"Kubernetesにスナップショットを登録するには、スナップショットのIDを参照する"
"VolumeSnapshotContentと、コンテンツを参照するVolumeSnapshotの2つのリソースを"
"作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshot\n"
"metadata:\n"
"  name: example-backup-from-s3\n"
"  namespace: project\n"
"spec:\n"
"  source:\n"
"    volumeSnapshotContentName: restored-snap-content-from-s3\n"
"  volumeSnapshotClassName: linstor-csi-snapshot-class-s3\n"
"---\n"
msgstr ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshot\n"
"metadata:\n"
"  name: example-backup-from-s3\n"
"  namespace: project\n"
"spec:\n"
"  source:\n"
"    volumeSnapshotContentName: restored-snap-content-from-s3\n"
"  volumeSnapshotClassName: linstor-csi-snapshot-class-s3\n"
"---\n"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshotContent\n"
"metadata:\n"
"  name: restored-snap-content-from-s3\n"
"spec:\n"
"  deletionPolicy: Delete\n"
"  driver: linstor.csi.linbit.com\n"
"  source:\n"
"    snapshotHandle: snapshot-id\n"
"  volumeSnapshotClassName: linstor-csi-snapshot-class-s3\n"
"  volumeSnapshotRef:\n"
"    apiVersion: snapshot.storage.k8s.io/v1\n"
"    kind: VolumeSnapshot\n"
"    name: example-backup-from-s3\n"
"    namespace: project\n"
msgstr ""
"apiVersion: snapshot.storage.k8s.io/v1\n"
"kind: VolumeSnapshotContent\n"
"metadata:\n"
"  name: restored-snap-content-from-s3\n"
"spec:\n"
"  deletionPolicy: Delete\n"
"  driver: linstor.csi.linbit.com\n"
"  source:\n"
"    snapshotHandle: snapshot-id\n"
"  volumeSnapshotClassName: linstor-csi-snapshot-class-s3\n"
"  volumeSnapshotRef:\n"
"    apiVersion: snapshot.storage.k8s.io/v1\n"
"    kind: VolumeSnapshot\n"
"    name: example-backup-from-s3\n"
"    namespace: project\n"

#. type: Plain text
msgid ""
"Once applied, the VolumeSnapshot should be shown as `ready`, at which point "
"you can reference it as a `dataSource` in a PVC."
msgstr ""
"適用すると、VolumeSnapshot は `ready` と表示され、その時点で PVC の "
"`dataSource` として参照することができるようになります。"

#. type: Title ===
#, no-wrap
msgid "Volume Accessibility and Locality"
msgstr "ボリュームのアクセスしやすさと局所性"

#.  This only covers DRBD volumes, section might change if linked docs are updated.
#. type: Plain text
msgid ""
"LINSTOR volumes are typically accessible both locally and <<s-drbd_clients,"
"over the network>>. The CSI driver will ensure that the volume is accessible "
"on whatever node was selected for the consumer. The driver also provides "
"options to ensure volume locality (the consumer is placed on the same node "
"as the backing data) and restrict accessibility (only a subset of nodes can "
"access the volume over the network)."
msgstr ""
"LINSTOR ボリュームはローカルと <<s-drbd_clients,ネットワーク経由>> の両方でア"
"クセスできます。CSI ドライバーは、コンシューマー用に選択されたノードでボ"
"リュームにアクセスできるようにします。ドライバーは、ボリュームの局所性の確保"
"（コンシューマーは下位データと同じノードに配置される）と、アクセスを制限する"
"（ノードのサブセットのみがネットワーク経由でボリュームにアクセスできる）オプ"
"ションも提供します。"

#. type: Plain text
msgid ""
"Volume locality is achieved by setting `volumeBindingMode: "
"WaitForFirstConsumer` in the storage class. This tell Kubernetes and the CSI "
"driver to wait until the first consumer (Pod) referencing the PVC is "
"scheduled. The CSI driver then provisions the volume with backing data on "
"the same node as the consumer. In case a node without appropriate storage "
"pool was selected, a replacement node in the set of accessible nodes is "
"chosen (see below)."
msgstr ""
"ボリュームの局所性は、ストレージクラスで `volumeBindingMode: "
"WaitForFirstConsumer` を設定することで実現されます。これにより、Kubernetes "
"と CSI ドライバーは、PVC を参照する最初のコンシューマー（ポッド）がスケジュー"
"ルされるまで待機するように指示されます。次に、CSI ドライバーは、コンシュー"
"マーと同じノード上の下位データを使用してボリュームをプロビジョニングします。"
"適切なストレージプールのないノードが選択された場合、アクセス可能なノードの"
"セットから代替ノードが選択されます（以下を参照）。"

#. type: Plain text
msgid ""
"Volume accessibility is controlled by the <<s-kubernetes-params-allow-remote-"
"volume-access,`allowRemoteVolumeAccess` parameter>>. Whenever the CSI plug-"
"in needs to place a volume, this parameter is consulted to get the set of "
"\"accessible\" nodes. This means they can share volumes placed on them "
"through the network. This information is also propagated to Kubernetes using "
"label selectors on the PV."
msgstr ""
"ボリュームのアクセスしやすさは <<s-kubernetes-params-allow-rems-kubernetes-"
"params-allow-remote-volume-access,`allowRemoteVolumeAccess` パラメータ>> に"
"よって制御されます。CSI プラグインがボリュームを配置するときはいつでも、この"
"パラメーターを調べてアクセス可能なノードのセットを取得します。これは、ネット"
"ワークを介して配置されたボリュームを共有できることを意味します。この情報は、"
"PV のラベルセレクターを介して Kubernetes にも伝達されます。"

#. type: Title ====
#, no-wrap
msgid "Volume Accessibility and Locality Examples"
msgstr "ボリュームのアクセスしやすさと局所性の例"

#. type: Plain text
msgid ""
"The following example show common scenarios where you want to optimize "
"volume accessibility and locality. It also includes examples of how to "
"spread volume replicas across zones in a cluster."
msgstr ""
"次の例は、ボリュームのアクセスしやすさと局所性を最適化する一般的なシナリオを"
"示しています。また、クラスター内のゾーン間でボリュームレプリカを分散する方法"
"の例も含まれています。"

#. type: Title =====
#, no-wrap
msgid "Single-zone Homogeneous Clusters"
msgstr "単一ゾーンの同種クラスター"

#. type: Plain text
msgid ""
"The cluster only spans a single zone, so latency between nodes is low. The "
"cluster is homogeneous, that is, all nodes are configured similarly. All "
"nodes have their own local storage pool."
msgstr ""
"クラスタは単一のゾーンにのみまたがっています。つまり、ノード間の遅延は低く"
"なっています。クラスタは同種です。つまり、すべてのノードが同様に構成され、す"
"べてのノードに独自のローカルストレージプールがあります。"

#. type: Block title
#, no-wrap
msgid "example-storage-class.yaml"
msgstr "example-storage-class.yaml"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer <1>\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <2>\n"
"  linstor.csi.linbit.com/placementCount: \"2\" <3>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: \"true\" <4>\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer <1>\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <2>\n"
"  linstor.csi.linbit.com/placementCount: \"2\" <3>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: \"true\" <4>\n"

#. type: Plain text
msgid ""
"Enable late volume binding. This places one replica on the same node as the "
"first consuming pod, if possible."
msgstr ""
"レイトボリュームバインディングを有効にします。これにより、可能であれば、最初"
"に実行するポッドと同じノードに 1 つのレプリカが配置されます。"

#. type: Plain text
msgid "Set the storage pool(s) to use."
msgstr "使用するストレージプールを設定します。"

#. type: Plain text
msgid ""
"Ensure that the data is replicated, so that at least 2 nodes store the data."
msgstr "少なくとも 2 つのノードがデータを格納することを確証します。"

#. type: Plain text
msgid ""
"Allow using the volume even on nodes without replica. Since all nodes are "
"connected equally, performance impact should be manageable."
msgstr ""
"レプリカのないノードでもボリュームの使用を許可します。すべてのノードが均等に"
"接続されているため、パフォーマンスへの影響は小さいです。"

#. type: Title =====
#, no-wrap
msgid "Multi-zonal Homogenous Clusters"
msgstr "マルチゾーン同種クラスター"

#. type: Plain text
msgid ""
"As before, in our homogenous cluster all nodes are configured similarly with "
"their own local storage pool. The cluster spans now multiple zones, with "
"increased latency across nodes in different zones. To ensure low latency, we "
"want to restrict access to the volume with a local replica to only those "
"zones that do have a replica. At the same time, we want to spread our data "
"across multiple zones."
msgstr ""
"単一ゾーンと同様に、同種のクラスターでは、すべてのノードが独自のローカルスト"
"レージプールで構成されます。クラスターは複数のゾーンにまたがり、異なるゾーン"
"のノード間のレイテンシーが加わりました。低レイテンシーを考慮して、ローカルレ"
"プリカのボリュームへのアクセスを、レプリカを持つゾーンのみに制限する必要があ"
"ります。同時に、データを複数のゾーンに分散させたいと考えています。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer <1>\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <2>\n"
"  linstor.csi.linbit.com/placementCount: \"2\" <3>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: | <4>\n"
"    - fromSame:\n"
"      - topology.kubernetes.io/zone\n"
"  linstor.csi.linbit.com/replicasOnDifferent: topology.kubernetes.io/zone <5>\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer <1>\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <2>\n"
"  linstor.csi.linbit.com/placementCount: \"2\" <3>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: | <4>\n"
"    - fromSame:\n"
"      - topology.kubernetes.io/zone\n"
"  linstor.csi.linbit.com/replicasOnDifferent: topology.kubernetes.io/zone <5>\n"

#. type: Plain text
msgid ""
"Allow using the volume on nodes in the same zone as a replica, under the "
"assumption that zone internal networking is fast and low latency."
msgstr ""
"ゾーンの内部ネットワークが高速で低遅延であるという前提で、レプリカと同じゾー"
"ンのノードでボリュームを使用できるようにします。"

#. type: Plain text
msgid "Spread the replicas across different zones."
msgstr "レプリカを異なるゾーンに配置します。"

#. type: Title =====
#, no-wrap
msgid "Multi-region Clusters"
msgstr "マルチリージョンクラスター"

#. type: Plain text
msgid ""
"Our cluster now spans multiple regions. We don't want to incur the latency "
"penalty to replicate our data across regions, we just want to replicate in "
"the same zone."
msgstr ""
"クラスターは複数のリージョンにまたがっています。リージョン間でデータを複製す"
"る遅延ペナルティを発生させたくないので、同じゾーンで複製します。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer <1>\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <2>\n"
"  linstor.csi.linbit.com/placementCount: \"2\" <3>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: | <4>\n"
"    - fromSame:\n"
"      - topology.kubernetes.io/zone\n"
"  linstor.csi.linbit.com/replicasOnSame: topology.kubernetes.io/region <5>\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"volumeBindingMode: WaitForFirstConsumer <1>\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <2>\n"
"  linstor.csi.linbit.com/placementCount: \"2\" <3>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: | <4>\n"
"    - fromSame:\n"
"      - topology.kubernetes.io/zone\n"
"  linstor.csi.linbit.com/replicasOnSame: topology.kubernetes.io/region <5>\n"

#. type: Plain text
msgid "Restrict replicas to only a single region."
msgstr "レプリカを単一のリージョンのみに制限します。"

#. type: Title =====
#, no-wrap
msgid "Cluster with External Storage"
msgstr "外部ストレージを備えたクラスター"

#. type: Plain text
msgid ""
"Our cluster now only consists of compute nodes without local storage. Any "
"volume access has to occur through remote volume access."
msgstr ""
"クラスターはローカルストレージのないノードのみで構成されています。ボリューム"
"アクセスは、リモートボリュームアクセスを介して行う必要があります。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <1>\n"
"  linstor.csi.linbit.com/placementCount: \"1\" <2>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: \"true\" <3>\n"
msgstr ""
"apiVersion: storage.k8s.io/v1\n"
"kind: StorageClass\n"
"metadata:\n"
"  name: linstor-storage\n"
"provisioner: linstor.csi.linbit.com\n"
"parameters:\n"
"  linstor.csi.linbit.com/storagePool: linstor-pool <1>\n"
"  linstor.csi.linbit.com/placementCount: \"1\" <2>\n"
"  linstor.csi.linbit.com/allowRemoteVolumeAccess: \"true\" <3>\n"

#. type: Plain text
msgid ""
"Assuming we only have one storage host, we can only place a single volume "
"without additional replicas."
msgstr ""
"ストレージホストが 1 つのみであると仮定して、追加のレプリカなしで 1 つのボ"
"リュームのみを配置します。"

#. type: Plain text
msgid ""
"Our worker nodes need to be allowed to connect to the external storage host."
msgstr "ワーカーノードが外部ストレージホストに接続できるようにします。"

#. type: Title ===
#, no-wrap
msgid "LINSTOR Affinity Controller"
msgstr "LINSTOR アフィニティ コントローラ"

#. type: Plain text
msgid ""
"Volume Accessibility is controlled by the https://kubernetes.io/docs/"
"concepts/scheduling-eviction/assign-pod-node/#node-affinity[node affinity] "
"of the PersistentVolume (PV). This affinity is static, that is once defined "
"it cannot be changed."
msgstr ""
"ボリュームのアクセシビリティは、PersistentVolume (PV) の https://kubernetes."
"io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity[node "
"affinity] によって制御されます。このアフィニティは静的です。つまり、一度定義"
"すると変更できません。"

#. type: Plain text
msgid ""
"This can be an issue if you would like to use a strict affinity: Your PV is "
"pinned to specific nodes, but you might want to remove or add nodes. While "
"LINSTOR can move the volume (for example: this happens automatically if you "
"remove a node in kubernetes), the PV affinity is not updated to reflect this."
msgstr ""
"これは、厳密なアフィニティを使用する場合に問題になる可能性があります。PV は特"
"定のノードに固定されていますが、ノードを削除または追加する必要がある場合があ"
"ります。LINSTOR はボリュームを移動できますが (たとえば、これは kubernetes で"
"ノードを削除すると自動的に行われます)、PV アフィニティはこれを反映するように"
"更新されません。"

#. type: Plain text
msgid ""
"This is where the LINSTOR Affinity Controller comes in: it watches PVs and "
"compares their affinity with the volumes' states in LINSTOR. If they go out "
"of sync, the PV is replaced with an updated version."
msgstr ""
"ここで、LINSTOR Affinity Controller の出番です。PV を監視し、それらのアフィニ"
"ティを LINSTOR のボリュームの状態と比較します。それらが同期しなくなると、PV "
"は更新されたバージョンに置き換えられます。"

#. type: Plain text
msgid ""
"The LINSTOR Affinity Controller is packaged in a Helm chart. If you install "
"it in the same namespace as the Operator, simply run:"
msgstr ""
"LINSTOR Affinity Controller は、Helm チャートにパッケージ化されています。 "
"Operator と同じ名前空間にインストールする場合は、以下を実行するだけです。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ helm repo update\n"
"$ helm install linstor-affinity-controller linstor/linstor-affinity-controller\n"
msgstr ""
"$ helm repo update\n"
"$ helm install linstor-affinity-controller linstor/linstor-affinity-controller\n"

#. type: Plain text
msgid ""
"Additional options for the chart are available at the https://github.com/"
"piraeusdatastore/linstor-affinity-controller[upstream project]."
msgstr ""
"チャートの追加オプションは https://github.com/piraeusdatastore/linstor-"
"affinity-controller[upstream project] で利用できます。"

#. type: Title ===
#, no-wrap
msgid "Volume Locality Optimization Using LINSTOR Scheduler"
msgstr "LINSTOR スケジューラーを使用したボリューム局所性の最適化"

#. type: Plain text
msgid ""
"We maintain an open source plug-in for the Kubernetes scheduler. The "
"scheduler will take the current placement of volumes into account and "
"optimize for data locality. If possible, the pod will be assigned to a node "
"that also hosts replicas of attached volumes, reducing latency for read "
"operations."
msgstr ""
"LINBIT は Kubernetes スケジューラ用のオープンソースプラグインをメンテナンスし"
"ています。スケジューラは、ボリュームの現在の配置を考慮して、データの局所性を"
"最適化します。可能であれば、接続されたボリュームのレプリカもホストするノード"
"にポッドが割り当てられ、読み取り操作のレイテンシーが短縮されます。"

#. type: Plain text
msgid ""
"The scheduler is available as a separate chart https://artifacthub.io/"
"packages/helm/piraeus-charts/linstor-scheduler[from artifacthub.io].  The "
"chart will deploy a new scheduler, which you can later use when creating pod "
"resources:"
msgstr ""
"スケジューラーは別のチャート https://artifacthub.io/packages/helm/piraeus-"
"charts/linstor-scheduler[artifacthub.io] から利用できます。チャートは、後で "
"Pod リソースを作成するときに使用できる新しいスケジューラーをデプロイします。"

#. type: delimited block -
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: busybox\n"
"spec:\n"
"  schedulerName: linstor-scheduler <1>\n"
"  containers:\n"
"  - name: busybox\n"
"    image: busybox\n"
"    command: [\"tail\", \"-f\", \"/dev/null\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"test-volume\"\n"
msgstr ""
"apiVersion: v1\n"
"kind: Pod\n"
"metadata:\n"
"  name: busybox\n"
"spec:\n"
"  schedulerName: linstor-scheduler <1>\n"
"  containers:\n"
"  - name: busybox\n"
"    image: busybox\n"
"    command: [\"tail\", \"-f\", \"/dev/null\"]\n"
"    volumeMounts:\n"
"    - name: my-first-linstor-volume\n"
"      mountPath: /data\n"
"    ports:\n"
"    - containerPort: 80\n"
"  volumes:\n"
"  - name: my-first-linstor-volume\n"
"    persistentVolumeClaim:\n"
"      claimName: \"test-volume\"\n"

#. type: Plain text
msgid "Add the name of the scheduler to your pod."
msgstr "スケジューラの名前をポッドに追加します。"

#. type: Title ===
#, no-wrap
msgid "Fast Workload Failover Using the High Availability Controller"
msgstr "高可用性コントローラーを使用した高速ワークロードフェイルオーバー"

#. type: Plain text
msgid ""
"When node failures occur, Kubernetes is very conservative in rescheduling "
"stateful workloads. This means it can take more than 15 minutes for Pods to "
"be moved from unreachable nodes. With the information available to DRBD and "
"LINSTOR, this process can be sped up significantly."
msgstr ""
"ノードに障害が発生した場合、Kubernetes はステートフルワークロードの再スケ"
"ジュールを非常に慎重に行います。これは、ポッドが到達不能なノードから移動され"
"るまでに 15 分以上かかる可能性があることを意味します。DRBD と LINSTOR が利用"
"できる情報により、このプロセスを大幅にスピードアップできます。"

#. type: Plain text
msgid ""
"The LINSTOR High Availability Controller (HA Controller) speeds up the "
"failover process for stateful workloads using LINSTOR for storage. It "
"monitors and manages any Pod that is attached to at least one DRBD resource."
msgstr ""
"LINSTOR 高可用性コントローラー (HA コントローラー) は、ストレージに LINSTOR "
"を使用して、ステートフル ワークロードのフェイルオーバー プロセスを高速化しま"
"す。少なくとも 1 つの DRBD リソースにアタッチされている Pod を監視および管理"
"します。"

#. type: Plain text
msgid ""
"For the HA Controller to work properly, you need quorum, that is at least "
"three replicas (or two replicas + one diskless tiebreaker). If using lower "
"replica counts, attached Pods will be ignored and are not eligible for "
"faster failover."
msgstr ""
"HA コントローラーが正しく機能するには、クォーラム、つまり少なくとも 3 つのレ"
"プリカ (または 2 つのレプリカと 1 つのディスクレス タイブレーカー) が必要で"
"す。使用するレプリカ数が少ない場合、アタッチされた Pod は無視され、より高速な"
"フェイルオーバーの対象にはなりません。"

#. type: Plain text
msgid ""
"The HA Controller is packaged as a Helm chart, and can be deployed using:"
msgstr ""
"HA コントローラーは Helm チャートとしてパッケージ化されており、以下を使用して"
"デプロイできます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ helm repo update\n"
"$ helm install linstor-ha-controller linstor/linstor-ha-controller\n"
msgstr ""
"$ helm repo update\n"
"$ helm install linstor-ha-controller linstor/linstor-ha-controller\n"

#. type: Plain text
msgid ""
"If you are using the HA Controller in your cluster you can set additional "
"parameters in all StorageClasses. These parameters ensure that the volume is "
"not accidentally remounted as read-only, leading to degraded Pods."
msgstr ""
"クラスタで HA コントローラを使用している場合は、すべての StorageClass で追加"
"のパラメータを設定できます。これらのパラメーターにより、ボリュームが誤って読"
"み取り専用として再マウントされて、Pod の機能が低下することがなくなります。"

#. type: delimited block -
#, no-wrap
msgid ""
"parameters:\n"
"  property.linstor.csi.linbit.com/DrbdOptions/auto-quorum: suspend-io\n"
"  property.linstor.csi.linbit.com/DrbdOptions/Resource/on-no-data-accessible: suspend-io\n"
"  property.linstor.csi.linbit.com/DrbdOptions/Resource/on-suspended-primary-outdated: force-secondary\n"
"  property.linstor.csi.linbit.com/DrbdOptions/Net/rr-conflict: retry-connect\n"
msgstr ""
"parameters:\n"
"  property.linstor.csi.linbit.com/DrbdOptions/auto-quorum: suspend-io\n"
"  property.linstor.csi.linbit.com/DrbdOptions/Resource/on-no-data-accessible: suspend-io\n"
"  property.linstor.csi.linbit.com/DrbdOptions/Resource/on-suspended-primary-outdated: force-secondary\n"
"  property.linstor.csi.linbit.com/DrbdOptions/Net/rr-conflict: retry-connect\n"

#. type: Plain text
msgid ""
"To exempt a Pod from management by the HA Controller, add the following "
"annotation to the Pod:"
msgstr ""
"Pod を HA コントローラーによる管理から除外するには、次のアノテーションを Pod "
"に追加します。"

#. type: delimited block -
#, no-wrap
msgid "$ kubectl annotate pod <podname> drbd.linbit.com/ignore-fail-over=\"\"\n"
msgstr "$ kubectl annotate pod <podname> drbd.linbit.com/ignore-fail-over=\"\"\n"

#. type: Title ===
#, no-wrap
msgid "Evacuating a Node in Kubernetes"
msgstr "Kubernetes でのノードの退避"

#. type: Plain text
msgid ""
"If you want to evacuate a LINSTOR node of its resources, so that they are "
"placed onto other nodes within your cluster, the process is detailed in <<s-"
"linstor-node-evacuate>>. However, before evacuating a LINSTOR node in "
"Kubernetes, you need to take an additional action."
msgstr ""
"リソースの LINSTOR ノードを退避させて、クラスター内の他のノードに配置する場"
"合、そのプロセスは <<s-linstor-node-evacuate>> で詳しく説明されています。 た"
"だし、Kubernetes で LINSTOR ノードを退避させる前に、追加のアクションを実行す"
"る必要があります。"

#. type: Plain text
msgid ""
"First move the node's workload to another node. You can do this by entering "
"the command:"
msgstr ""
"まず、ノードのワークロードを別のノードに移動します。これを行うには、次のコマ"
"ンドを入力します。"

#. type: delimited block -
#, no-wrap
msgid "# kubectl drain --ignore-daemonsets <node_name>\n"
msgstr "# kubectl drain --ignore-daemonsets <node_name>\n"

#. type: Plain text
msgid ""
"After verifying that your cluster is running all right, you can continue to "
"follow the steps in <<s-linstor-node-evacuate>>."
msgstr ""
"クラスターが正常に動作していることを確認したら <<s-linstor-node-evacuate>> の"
"手順を続行できます。"

#. type: Plain text
msgid ""
"If you are planning on evacuating more than one node, enter the following "
"command on all the nodes that you will be evacuating:"
msgstr ""
"複数のノードの退避を計画している場合は、退避するすべてのノードで次のコマンド"
"を入力します。"

#. type: delimited block -
#, no-wrap
msgid "# linstor node set-property n1.k8s-mwa.at.linbit.com AutoplaceTarget false\n"
msgstr "# linstor node set-property n1.k8s-mwa.at.linbit.com AutoplaceTarget false\n"

#. type: Plain text
msgid ""
"This ensures that LINSTOR will not place resources from a node that you are "
"evacuating onto another node that you plan on evacuating."
msgstr ""
"これにより、退避しようとしているノードから、退避を計画している別のノードに "
"LINSTOR がリソースを配置することがなくなります。"
