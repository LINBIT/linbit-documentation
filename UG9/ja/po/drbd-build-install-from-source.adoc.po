# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: documentation@linbit.com\n"
"POT-Creation-Date: 2024-09-20 18:07+0900\n"
"PO-Revision-Date: 2024-05-26 16:44+0900\n"
"Last-Translator: 黒木　博 <h-kuroki@sios.com>\n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.4.4\n"

#. type: Title ==
#, no-wrap
msgid "Building and installing DRBD from source"
msgstr "ソースコードからのDRBDのビルドおよびインストール"

#. type: Title ===
#, no-wrap
msgid "Downloading the DRBD Sources"
msgstr "DRBDのソースコードをダウンロードする"

#. type: Plain text
msgid ""
"The source tar files for both current and historic DRBD releases are "
"available for download from https://pkg.linbit.com/. Source tar files, by "
"convention, are named `drbd-__x__.__y__.__z__.tar.gz`, for example, `drbd-"
"utils-__x__.__y__.__z__.tar.gz`, where _x_, _y_ and _z_ refer to the major, "
"minor and bug fix release numbers."
msgstr ""
"現在のDRBDリリースと過去のリリースのソースtarファイルは、 https://pkg.linbit."
"com/ からダウンロード可能です。ソースtarファイルは通常、`drbd-__x__.__y__."
"__z__.tar.gz` という名前が付けられています。例えば、`drbd-utils-__x__.__y__."
"__z__.tar.gz` のように、_x_、_y_、_z_ はメジャー番号、マイナー番号、バグ修正"
"リリース番号を表します。"

#. type: Plain text
msgid ""
"DRBD's compressed source archive is less than half a megabyte in size. After "
"downloading a tar file, you can decompress its contents into your current "
"working directory, by using the `tar -xzf` command."
msgstr ""
"DRBDの圧縮されたソースアーカイブは、サイズが半メガバイト未満です。tarファイル"
"をダウンロードした後は、`tar -xzf` コマンドを使用してその内容を展開して、現在"
"の作業ディレクトリにダウンロードすることができます。"

#. type: Plain text
msgid ""
"For organizational purposes, decompress DRBD into a directory normally used "
"for keeping source code, such as `/usr/src` or `/usr/local/src`. The "
"examples in this guide assume `/usr/src`."
msgstr ""
"組織的な目的で、通常ソースコードを保管するディレクトリ（たとえば `/usr/src` "
"や `/usr/local/src` など）に DRBD を展開してください。このガイドの例では `/"
"usr/src` を前提としています。"

#. type: Title ===
#, no-wrap
msgid "Checking out Sources from the Public DRBD Source Repository"
msgstr "公開されているDRBDソースリポジトリからソースを取得する"

#. type: Plain text
msgid ""
"DRBD's source code is kept in a public Git repository. You can browse this "
"online at https://github.com/LINBIT. The DRBD software consists of these "
"projects:"
msgstr ""
"DRBDのソースコードは公開されたGitリポジトリに保管されています。このリポジトリ"
"は https://github.com/LINBIT からオンラインで閲覧できます。DRBDソフトウェアは"
"以下のプロジェクトから構成されています。"

#. type: Plain text
msgid "The DRBD kernel module"
msgstr "DRBDカーネルモジュール"

#. type: Plain text
msgid "The DRBD utilities"
msgstr "DRBDユーティリティ"

#. type: Plain text
msgid ""
"Source code can be obtained by either cloning Git repositories or "
"downloading release tar files. There are two minor differences between an "
"unpacked source tar file and a Git checkout of the same release:"
msgstr ""
"ソースコードは、Gitリポジトリをクローンするか、リリース用のtarファイルをダウ"
"ンロードして取得できます。展開されたソースtarファイルと同じリリースのGit"
"チェックアウトとの間には、わずかな違いが2つ存在します:"

#. type: Plain text
msgid ""
"The Git checkout contains a `debian/` subdirectoy, while the source tar file "
"does not. This is due to a request from Debian maintainers, who prefer to "
"add their own Debian build configuration to a pristine upstream tar file."
msgstr ""
"Gitのチェックアウトには `debian/` サブディレクトリが含まれていますが、ソース"
"tarファイルには含まれていません。これは、Debianのメンテナーからの要求によるも"
"ので、彼らは元のアップストリームtarファイルに独自のDebianビルド設定を追加する"
"ことを好むためです。"

#. type: Plain text
msgid ""
"The source tar file contains preprocessed man pages, the Git checkout does "
"not. Therefore, building DRBD from a Git checkout requires a complete "
"Docbook toolchain for building the man pages, while this is not a "
"requirement for building from a source tar file."
msgstr ""
"ソースtarファイルには、事前に処理されたmanページが含まれていますが、Gitの"
"チェックアウトには含まれていません。そのため、GitのチェックアウトからDRBDをビ"
"ルドする場合は、manページをビルドするための完全なDocbookツールチェーンが必要"
"ですが、ソースtarファイルからビルドする際にはその必要はありません。"

#. type: Title ====
#, no-wrap
msgid "DRBD Kernel Module"
msgstr "DRBD カーネルモジュール"

#. type: Plain text
msgid ""
"To check out a specific DRBD release from the repository, you must first "
"_clone_ the DRBD repository:"
msgstr ""
"リポジトリから特定のDRBDリリースをチェックアウトするには、まずDRBDリポジトリ"
"を「クローン」する必要があります。"

#. type: delimited block -
#, no-wrap
msgid "git clone --recursive https://github.com/LINBIT/drbd.git\n"
msgstr "git clone --recursive https://github.com/LINBIT/drbd.git\n"

#. type: Plain text
msgid ""
"This command will create a Git checkout subdirectory, named `drbd`. To now "
"move to a source code state equivalent to a specific DRBD release (here "
"9.2.3), issue the following commands:"
msgstr ""
"このコマンドは、`drbd` という名前のGitチェックアウトサブディレクトリを作成し"
"ます。特定のDRBDリリース（ここでは9.2.3）に相当するソースコードの状態に移動す"
"るには、以下のコマンドを入力してください。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd\n"
"$ git checkout drbd-9.2.3\n"
"$ git submodule update\n"
msgstr ""
"$ cd drbd\n"
"$ git checkout drbd-9.2.3\n"
"$ git submodule update\n"

#. type: Title ====
#, no-wrap
msgid "DRBD Utilities"
msgstr "DRBD ユーティリティ"

#. type: Plain text
msgid "To check out `drbd-utils` issue the following command:"
msgstr ""
"`drbd-utils` の問題をチェックするには、以下のコマンドを実行してください。"

#. type: delimited block -
#, no-wrap
msgid "$ git clone --recursive https://github.com/LINBIT/drbd-utils.git\n"
msgstr "$ git clone --recursive https://github.com/LINBIT/drbd-utils.git\n"

#. type: Plain text
msgid ""
"`drbd-utils` from version 8.9.x onward supports DRBD kernel modules versions "
"8.3, 8.4, and 9.0."
msgstr ""
"`drbd-utils` のバージョン8.9.x以降は、DRBDカーネルモジュールのバージョン8.3、"
"8.4、9.0をサポートしています。"

#. type: Title ===
#, no-wrap
msgid "Building DRBD from Source"
msgstr "ソースコードからDRBDをビルドする"

#. type: Plain text
msgid ""
"After cloning the DRBD and related utilities source code repositories to "
"your local host, you can proceed to building DRBD from the source code."
msgstr ""
"DRBDおよび関連ユーティリティのソースコードリポジトリをローカルホストにクロー"
"ンした後、そのソースコードからDRBDをビルドする作業に進むことができます。"

#. type: Title ====
#, no-wrap
msgid "Checking Build Prerequisites"
msgstr "ビルドの前提条件の確認"

#. type: Plain text
msgid ""
"Before being able to build DRBD from source, your build host must fulfill "
"the following prerequisites:"
msgstr ""
"ソースコードからDRBDをビルドする前に、ビルドホストは以下の前提条件を満たす必"
"要があります。"

#. type: Plain text
msgid ""
"`make`, `gcc`, the glibc development libraries, and the `flex` scanner "
"generator must be installed."
msgstr ""
"必要なものは、 `make` 、 `gcc` 、glibcの開発用ライブラリ、そして `flex` ス"
"キャナージェネレーターのインストールです。"

#. type: Plain text
msgid ""
"You should verify that the `gcc` you use to compile the module is the same "
"that was used to build the kernel you are running. If you have multiple "
"`gcc` versions available on your system, DRBD's build system includes a "
"facility to <<s-build-customcc,select a specific `gcc` version>>."
msgstr ""
"モジュールをコンパイルするために使用する `gcc` が、実行しているカーネルをビル"
"ドする際に使用した `gcc` と同じであることを確認すべきです。システムに複数の "
"`gcc` のバージョンがある場合、DRBDのビルドシステムには特定の <<s-build-"
"customcc, `gcc` バージョンを選択する>> 機能が含まれています。"

#. type: Plain text
msgid ""
"For building directly from a Git checkout, GNU Autoconf is also required. "
"This requirement does not apply when building from a tar file."
msgstr ""
"Gitのチェックアウトから直接ビルドする場合は、GNU Autoconfも必要です。ただし、"
"tarファイルからビルドする場合は、この要件は必要ありません。"

#. type: Plain text
msgid ""
"If you are running a stock kernel supplied by your distribution, you should "
"install a matching kernel headers package. These are typically named `kernel-"
"devel`, `kernel-headers`, `linux-headers` or similar. In this case, you can "
"skip <<s-build-prepare-kernel-tree>> and continue with <<s-build-prepare-"
"checkout>>."
msgstr ""
"もしディストリビューションが提供している標準のカーネルを使用している場合は、"
"対応するカーネルヘッダーパッケージをインストールする必要があります。これらは"
"一般的に `kernel-devel` 、 `kernel-headers` 、 `linux-headers` などの名前が付"
"けられています。この場合、 <<s-build-prepare-kernel-tree>> をスキップして、 "
"<<s-build-prepare-checkout>> に続けることができます。"

#. type: Plain text
msgid ""
"If you are not running a distribution stock kernel (that is, your system "
"runs on a kernel built from source with a custom configuration), your kernel "
"source files must be installed."
msgstr ""
"もし標準のディストリビューションのカーネルを使っていない場合（つまり、システ"
"ムがソースからカスタム設定で構築されたカーネルを実行している場合）、カーネル"
"のソースファイルがインストールされている必要があります。"

#. type: Plain text
msgid ""
"On RPM-based systems, these packages will be named similar to `kernel-source-"
"__version__.rpm`, which is easily confused with `kernel-__version__.src."
"rpm`. The former is the correct package to install for building DRBD."
msgstr ""
"RPM ベースのシステムでは、これらのパッケージは `kernel-source-__version__."
"rpm` のような名前で呼ばれますが、これは `kernel-__version__.src.rpm` と間違え"
"やすいです。前者が DRBD をビルドするために正しいパッケージです。"

#. type: Plain text
msgid ""
"\"Vanilla\" kernel tar files from the http://kernel.org/ archive are simply "
"named `linux-__version__.tar.bz2` and should be unpacked in `/usr/src/linux-"
"__version__`, with the symlink `/usr/src/linux` pointing to that directory."
msgstr ""
"HTTP://KERNEL.ORG/アーカイブからの「バニラ」カーネルのtarファイルは、単純に"
"`linux-__version__.tar.bz2` という名前が付けられており、`/usr/src/linux-"
"__version__` で展開されるべきであり、`/usr/src/linux` というシンボリックリン"
"クはそのディレクトリを指すようにする必要があります。"

#. type: Plain text
msgid ""
"In this case of building DRBD against kernel sources (not headers), you must "
"continue with <<s-build-prepare-kernel-tree>>."
msgstr ""
"この場合、カーネルソース（ヘッダーではなく）に対して DRBD を構築する際には、 "
"<<s-build-prepare-kernel-tree>> を続行する必要があります。"

#. type: Title ====
#, no-wrap
msgid "Preparing the Kernel Source Tree"
msgstr "カーネルソースツリーの準備"

#. type: Plain text
msgid ""
"To prepare your source tree for building DRBD, you must first enter the "
"directory where your unpacked kernel sources are located. Typically this is "
"`/usr/src/linux-__version__`, or simply a symbolic link named `/usr/src/"
"linux`:"
msgstr ""
"DRBDを構築するために、まずは展開されたカーネルソースが格納されているディレク"
"トリに入る必要があります。通常、それは `/usr/src/linux-__version__` 、あるい"
"は単純に `/usr/src/linux` という名前のシンボリックリンクです。"

#. type: delimited block -
#, no-wrap
msgid "# cd /usr/src/linux\n"
msgstr "# cd /usr/src/linux\n"

#. type: Plain text
msgid ""
"The next step is recommended, though not strictly necessary. *Be sure to "
"copy your existing `.config` file to a safe location before performing it*. "
"This step essentially reverts your kernel source tree to its original state, "
"removing any leftovers from an earlier build or configure run:"
msgstr ""
"次のステップは推奨されていますが、厳密に必要というわけではありません。**この"
"手順を実行する前に、既存の `.config` ファイルを安全な場所にコピーすることを忘"
"れないでください。**この手順は、以前のビルドや設定実行からの残留物を取り除"
"き、カーネルソースツリーを元の状態に戻すものです。"

#. type: delimited block -
#, no-wrap
msgid "# make mrproper\n"
msgstr "# make mrproper\n"

#. type: Plain text
msgid ""
"Now it is time to _clone_ your currently running kernel configuration into "
"the kernel source tree. There are a few possible options for doing this:"
msgstr ""
"今、現在実行中のカーネル構成をカーネルソースツリーに「クローン」する時間で"
"す。これを行うためのいくつかの可能なオプションがあります:"

#. type: Plain text
msgid ""
"Many reasonably recent kernel builds export the currently-running "
"configuration, in compressed form, via the `/proc` filesystem, enabling you "
"to copy from there:"
msgstr ""
"最近の多くのカーネルビルドは、現在実行中の設定を圧縮形式で `/proc` ファイルシ"
"ステム経由でエクスポートしており、そこからコピーすることができます。"

#. type: delimited block -
#, no-wrap
msgid "# zcat /proc/config.gz > .config\n"
msgstr "# zcat /proc/config.gz > .config\n"

#. type: Plain text
msgid ""
"SUSE kernel Makefiles include a `cloneconfig` target, so on those systems, "
"you can issue:"
msgstr ""
"SUSEのカーネルMakefileには、 `cloneconfig` ターゲットが含まれているため、その"
"ようなシステムでは次のようにコマンドを実行できます。"

#. type: delimited block -
#, no-wrap
msgid "# make cloneconfig\n"
msgstr "# make cloneconfig\n"

#. type: Plain text
msgid ""
"Some installs put a copy of the kernel config into `/boot`, which allows you "
"to do this:"
msgstr ""
"一部のインストールでは、カーネル設定のコピーを `/boot` に保存しており、それに"
"よって以下の操作が可能になります。"

#. type: delimited block -
#, no-wrap
msgid "# cp /boot/config-$(uname -r).config\n"
msgstr "# cp /boot/config-$(uname -r).config\n"

#. type: Plain text
msgid ""
"Finally, you can simply use a backup copy of a `.config` file which has been "
"used for building the currently-running kernel."
msgstr ""
"最終的に、現在実行中のカーネルをビルドする際に使用された `.config` ファイルの"
"バックアップコピーを簡単に使用できます。"

#. type: Title ====
#, no-wrap
msgid "Preparing the DRBD Userspace Utilities Build Tree"
msgstr "DRBDのユーザースペースユーティリティ構築ツリーの準備"

#. type: Plain text
msgid ""
"The DRBD userspace compilation requires that you first configure your source "
"tree with the included `configure` script."
msgstr ""
"DRBDのユーザースペースのコンパイルを行う際には、まず付属の「configure」スクリ"
"プトを使用してソースツリーを構成する必要があります。"

#. type: Plain text
msgid ""
"When building from a Git checkout, the `configure` script does not yet "
"exist. You must create it by simply typing `autoconf` from the top directory "
"of the checkout."
msgstr ""
"Gitのチェックアウトからビルドする際には、`configure` スクリプトがまだ存在しま"
"せん。チェックアウトのトップディレクトリから単純に `autoconf` と入力すること"
"で、それを作成する必要があります。"

#. type: Plain text
msgid ""
"Invoking the configure script with the `--help` option returns a full list "
"of supported options. The table below summarizes the most important ones:"
msgstr ""
"`configure` スクリプトを `--help` オプションで呼び出すと、サポートされている"
"オプションの完全なリストが表示されます。以下の表は、最も重要なオプションをま"
"とめたものです。"

#. type: Block title
#, no-wrap
msgid "Options supported by the DRBD `configure` script"
msgstr "DRBDの `configure` スクリプトでサポートされるオプション"

#. type: Table
#, no-wrap
msgid ""
"Option;Description;Default;Remarks\n"
"+--prefix+;Installation directory prefix;`/usr/local`;This is the default to maintain Filesystem Hierarchy Standard compatibility for locally installed, unpackaged software. In packaging, this is typically overridden with `/usr`.\n"
"+--localstatedir+;Local state directory;`/usr/local/var`;Even with a default `prefix`, most users will want to override this with `/var`.\n"
"+--sysconfdir+;System configuration directory;`/usr/local/etc`;Even with a default `prefix`, most users will want to override this with\t`/etc`.\n"
"+--with-udev+;Copy a rules file into your `udev(7)` configuration, to get symlinks named like the resources.;yes;Disable for non-``udev`` installations.\n"
"+--with-heartbeat+;Build DRBD Heartbeat integration;yes;You can disable this option unless you are planning to use DRBD's Heartbeat v1 resource agent or `dopd`.\n"
"+--with-pacemaker+;Build DRBD Pacemaker integration;yes;You can disable this option if you are not planning to use the Pacemaker cluster resource manager.\n"
"+--with-rgmanager+;Build DRBD Red Hat Cluster Suite integration;no;You should enable this option if you are planning to use DRBD with `rgmanager`, the Red Hat Cluster Suite cluster resource manager. Please note that you will need to pass `--with rgmanager` to +rpmbuild+ to get the rgmanager-package built.\n"
"+--with-xen+;Build DRBD Xen integration;yes (on x86 architectures);You can disable this option if you don't need the `block-drbd` helper script for Xen integration.\n"
"+--with-bashcompletion+;Installs a bash completion script for `drbdadm`;yes;You can disable this option if you are using a shell other than bash, or if you do not want to use programmable completion for the `drbdadm` command.\n"
"+--with-initscripttype+;Type of your init system;auto;Type of init script to install (sysv, systemd, or both).\n"
"+--enable-spec+;Create a distribution specific RPM spec file;no;For package builders only: you can use this option if you want to create an RPM spec file adapted to your distribution. See also <<s-build-rpm>>.\n"
msgstr ""
"Option;Description;Default;Remarks\n"
"+--prefix+;インストールディレクトリのプレフィックス;`/usr/local`;これは、ローカルにインストールされたパッケージ化されていないソフトウェアの Filesystem Hierarchy Standard 互換性を維持するためのデフォルトです。パッケージ化では、通常、これは `/usr` で上書きされます。\n"
"+--localstatedir+;ローカル状態ディレクトリ;`/usr/local/var`;デフォルトの `prefix` があっても、ほとんどのユーザーはこれを `/var` で上書きしたいと考えるでしょう。\n"
"+--sysconfdir+;システム構成ディレクトリ;`/usr/local/etc`;デフォルトの `prefix` があっても、ほとんどのユーザーはこれを `/etc` で上書きしたいと考えるでしょう。\n"
"+--with-udev+;リソースと同じ名前のシンボリックリンクを取得するには、ルールファイルを `udev(7)` 構成にコピーします。;yes;非udevインストールの場合は無効にします。\n"
"+--with-heartbeat+;DRBD Heartbeat のビルド;yes;DRBD の Heartbeat v1 リソース エージェントまたは `dopd` を使用する予定がない限り、このオプションを無効にすることができます。\n"
"+--with-pacemaker+;DRBD Pacemaker のビルド;yes;Pacemaker クラスター リソース マネージャーを使用する予定がない場合は、このオプションを無効にすることができます。\n"
"+--with-rgmanager+;DRBD Red Hat Cluster Suite のビルド;no;DRBD を Red Hat Cluster Suite クラスタ リソース マネージャである `rgmanager` とともに使用する予定の場合は、このオプションを有効にする必要があります。rgmanager パッケージをビルドするには、rpmbuild に `--with rgmanager` を渡す必要があることに注意してください。\n"
"+--with-xen+;DRBD Xen のビルド;yes (on x86 architectures);Xen 統合に `block-drbd` ヘルパー スクリプトが必要ない場合は、このオプションを無効にすることができます。\n"
"+--with-bashcompletion+;`drbdadm` 用の bash 補完スクリプトをインストールします。;yes;bash 以外のシェルを使用している場合、または `drbdadm` コマンドにプログラム可能な補完を使用しない場合は、このオプションを無効にすることができます。\n"
"+--with-initscripttype+;init システムのタイプ;auto;インストールする init スクリプトのタイプ (sysv、systemd、またはその両方)。\n"
"+--enable-spec+;ディストリビューション固有のRPM仕様ファイルを作成;no;パッケージビルダーのみ: ディストリビューションに適合した RPM 仕様ファイルを作成する場合はこのオプションを使用できます。<s-build-rpm>> も参照してください。\n"

#. type: Plain text
msgid "Most users will want the following configuration options:"
msgstr "ほとんどのユーザーは、次の設定オプションを希望するでしょう。"

#. type: delimited block -
#, no-wrap
msgid "$ ./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc\n"
msgstr "$ ./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc\n"

#. type: Plain text
msgid ""
"The configure script will adapt your DRBD build to distribution specific "
"needs. It does so by auto-detecting which distribution it is being invoked "
"on, and setting defaults accordingly. When overriding defaults, do so with "
"caution."
msgstr ""
"configureスクリプトは、DRBDビルドをディストリビューション固有の必要に合わせて"
"調整します。これは、どのディストリビューションが呼び出されているかを自動検出"
"し、それに応じてデフォルトを設定することで行われます。デフォルトを上書きする"
"際は慎重に行ってください。"

#. type: Plain text
msgid ""
"The configure script creates a log file, `config.log`, in the directory "
"where it was invoked. When reporting build issues on the mailing list, it is "
"usually wise to either attach a copy of that file to your email, or point "
"others to a location from where it can be viewed or downloaded."
msgstr ""
"configureスクリプトは、呼び出されたディレクトリに `config.log` というログファ"
"イルを作成します。メーリングリストでビルドの問題を報告する際には、そのファイ"
"ルのコピーをメールに添付するか、他の人々が閲覧またはダウンロードできる場所を"
"指摘するのが賢明です。"

#. type: Title ====
#, no-wrap
msgid "Building DRBD Userspace Utilities"
msgstr "DRBDユーザースペースユーティリティの構築"

#. type: Plain text
msgid ""
"To build DRBD's userspace utilities, invoke the following commands from the "
"top of your Git checkout or expanded tar file:"
msgstr ""
"DRBDのユーザースペースユーティリティを構築するには、Gitのチェックアウトのトッ"
"プまたは展開されたtarファイルから次のコマンドを実行してください。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ make\n"
"$ sudo make install\n"
msgstr ""
"$ make\n"
"$ sudo make install\n"

#. type: Plain text
msgid ""
"This will build the management utilities (`drbdadm`, `drbdsetup`, and "
"`drbdmeta`), and install them in the appropriate locations. Based on the "
"other `--with` options selected during the <<s-build-prepare-checkout,"
"configure stage>>, it will also install scripts to integrate DRBD with other "
"applications."
msgstr ""
"これにより、管理ユーティリティ（`drbdadm`、`drbdsetup`、`drbdmeta`）がビルド"
"され、適切な場所にインストールされます。 <<s-build-prepare-checkout,構成ス"
"テージ>> で選択された他の `--with` オプションに基づいて、他のアプリケーション"
"と統合するスクリプトもインストールされます。"

#. type: Title ====
#, no-wrap
msgid "Compiling the DRBD Kernel Module"
msgstr "DRBD カーネルモジュールのコンパイル"

#. type: Plain text
msgid ""
"The kernel module does not use `GNU` `autotools`, therefore building and "
"installing the kernel module is usually a simple two step process."
msgstr ""
"カーネルモジュールは `GNU` の `autotools` を使用していないため、一般的には"
"カーネルモジュールのビルドとインストールは通常、簡単な2ステップのプロセスで"
"す。"

#. type: Title =====
#, no-wrap
msgid "Building the DRBD Kernel Module for the Currently Running Kernel"
msgstr "現在実行中のカーネル用に、DRBD カーネルモジュールをビルドする"

#. type: Plain text
msgid ""
"After changing into your unpacked DRBD kernel module sources directory, you "
"can now build the module:"
msgstr ""
"アンパックしたDRBDカーネルモジュールのソースディレクトリに移動したら、モ"
"ジュールをビルドすることができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd-9.0\n"
"$ make clean all\n"
msgstr ""
"$ cd drbd-9.0\n"
"$ make clean all\n"

#. type: Plain text
msgid ""
"This will build the DRBD kernel module to match your currently-running "
"kernel, whose kernel source is expected to be accessible via the `/lib/"
"modules/`uname -r`/build` symlink."
msgstr ""
"この操作は、現在実行中のカーネルと一致するDRBDカーネルモジュールを構築しま"
"す。カーネルソースは `/lib/modules/`uname -r`/build` シンボリックリンクを介し"
"てアクセス可能であることが前提です。"

#. type: Title =====
#, no-wrap
msgid "Building Against Prepared Kernel Headers"
msgstr "準備が整ったカーネル・ヘッダーに対応するビルド"

#. type: Plain text
msgid ""
"If the `/lib/modules/`uname -r`/build` symlink does not exist, and you are "
"building against a running stock kernel (one that was shipped pre-compiled "
"with your distribution), you can also set the `KDIR` variable to point to "
"the _matching_ kernel headers (as opposed to kernel sources) directory. Note "
"that besides the actual kernel headers"
msgstr ""
"`/lib/modules/`uname -r`/build` シンボリックリンクが存在しない場合、および実"
"行中の標準カーネル（ディストリビューションとともに事前にコンパイルされたも"
"の）に対して構築を行っている場合、`KDIR` 変数を一致するカーネルヘッダー（カー"
"ネルソースではなく）ディレクトリを指すように設定することもできます。 "

#. type: Plain text
msgid ""
"commonly found in `/usr/src/linux-__version__/include` -- the DRBD build "
"process also looks for the kernel `Makefile` and configuration file (`."
"config`), which pre-built kernel headers packages commonly include."
msgstr ""
"`/usr/src/linux-__version__/include` に一般的に見つかる実際のカーネルヘッダー"
"以外にも、DRBDのビルドプロセスは、通常、事前にビルドされたカーネルヘッダー"
"パッケージが含むカーネルの `Makefile` や構成ファイル（ `.config` ）も探しま"
"す。"

#. type: Plain text
msgid "To build against prepared kernel headers, issue, for example:"
msgstr ""
"例えば、準備されたカーネルヘッダに対してビルドする場合は、次のようにします。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd-9.0\n"
"$ make clean\n"
"$ make KDIR=/usr/src/linux-headers-3.2.0-4-amd64/\n"
msgstr ""
"$ cd drbd-9.0\n"
"$ make clean\n"
"$ make KDIR=/usr/src/linux-headers-3.2.0-4-amd64/\n"

#. type: Title =====
#, no-wrap
msgid "Building Against a Kernel Source Tree"
msgstr "カーネルソースツリーに対してビルドを行う"

#. type: Plain text
msgid ""
"If you are building DRBD against a kernel _other_ than your currently "
"running one, and you do not have prepared kernel sources for your target "
"kernel available, you need to build DRBD against a complete target kernel "
"source tree. To do so, set the KDIR variable to point to the kernel sources "
"directory:"
msgstr ""
"もし、現在実行中のカーネルと異なるカーネルに対してDRBDをビルドする場合、また"
"は対象カーネルの準備済みのソースコードが利用できない場合、完全な対象カーネル"
"のソースツリーに対してDRBDをビルドする必要があります。そのためには、KDIR変数"
"をカーネルソースディレクトリを指すように設定してください。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd-9.0\n"
"$ make clean\n"
"$ make KDIR=/root/linux-3.6.6/\n"
msgstr ""
"$ cd drbd-9.0\n"
"$ make clean\n"
"$ make KDIR=/root/linux-3.6.6/\n"

#. type: Title =====
#, no-wrap
msgid "Using a Non-default C Compiler"
msgstr "非デフォルトのCコンパイラを使用する"

#. type: Plain text
msgid ""
"You also have the option of setting the compiler explicitly via the CC "
"variable. This is known to be necessary on some Fedora versions, for example:"
msgstr ""
"CC変数を使ってコンパイラを明示的に設定するオプションもあります。これは、たと"
"えば一部のFedoraバージョンで必要とされていることが知られています。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd-9.0\n"
"$ make clean\n"
"$ make CC=gcc32\n"
msgstr ""
"$ cd drbd-9.0\n"
"$ make clean\n"
"$ make CC=gcc32\n"

#. type: Title =====
#, no-wrap
msgid "Checking for successful build completion"
msgstr "ビルドが正常に完了したかを確認しています"

#. type: Plain text
msgid ""
"If the module build completes successfully, you should see a kernel module "
"file named `drbd.ko` in the `drbd` directory. You can interrogate the newly-"
"built module with `/sbin/modinfo drbd.ko` if you are so inclined."
msgstr ""
"もしモジュールのビルドが成功したら、 `drbd` ディレクトリ内に `drbd.ko` という"
"カーネルモジュールファイルが表示されるはずです。もし興味があれば、新しくビル"
"ドされたモジュールを `/sbin/modinfo drbd.ko` で調べることができます。"

#. type: Title =====
#, no-wrap
msgid "Kernel Application Binary Interface warning for some distributions"
msgstr "一部のディストリビューションにおいて、カーネルアプリケーションバイナリインターフェースの警告が発生しています。"

#. type: Plain text
msgid ""
"Please note that some distributions (like RHEL 6 and derivatives) claim to "
"have a stable kernel application binary interface (kABI), that is, the "
"kernel API should stay consistent during minor releases (that is, for "
"kernels published in the RHEL 6.3 series)."
msgstr ""
"一部のディストリビューション（例えば、RHEL 6およびその派生版）では、安定した"
"カーネルアプリケーションバイナリインターフェース（kABI）が提供されていると主"
"張されています。つまり、カーネルのAPIはマイナーリリース中も一貫して保たれるべ"
"きであり（たとえば、RHEL 6.3シリーズで公開されるカーネルを指します）、一定の"
"安定性が期待されています。"

#. type: Plain text
msgid ""
"In practice this is not working all of the time; there are some known cases "
"(even within a minor release) where things got changed incompatibly. In "
"these cases external modules (like DRBD) can fail to load, cause a kernel "
"panic, or break in even more subtle waysfootnote:[One favorite way was when "
"loading the DRBD module reported \"Out of memory\" on a freshly booted "
"machine with 32GiB RAM...], and need to be rebuilt against the _matching_ "
"kernel headers."
msgstr ""
"実際には、これは常にうまくいくわけではありません。（マイナーリリース内でも）"
"完全に互換性のない変更が行われたという既知のケースがあります。こうした場合、"
"外部モジュール（例：DRBD）が読み込まれなくなったり、カーネルパニックを引き起"
"こしたり、さらに微妙な問題が発生することがあります。その場合、 _適合する_ "
"カーネルヘッダに対してモジュールを再構築する必要があります。[注: 32GiBのRAMを"
"搭載した新しく起動したマシンで、DRBDモジュールを読み込むときに「メモリ不足」"
"という報告がされるケースがありました...]"

#. type: Title ===
#, no-wrap
msgid "Installing DRBD"
msgstr "DRBDのインストール"

#. type: Plain text
msgid ""
"Provided your DRBD build completed successfully, you will be able to install "
"DRBD by issuing the command:"
msgstr ""
"DRBDのビルドが成功した場合、次のコマンドを入力することでDRBDをインストールで"
"きます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd-9.0 && sudo make install && cd ..\n"
"$ cd drbd-utils && sudo make install && cd ..\n"
msgstr ""
"$ cd drbd-9.0 && sudo make install && cd ..\n"
"$ cd drbd-utils && sudo make install && cd ..\n"

#. type: Plain text
msgid ""
"The DRBD userspace management tools (`drbdadm`, `drbdsetup`, and `drbdmeta`) "
"will now be installed in the `prefix` path that was passed to `configure`, "
"typically `/sbin/`."
msgstr ""
"DRBDのユーザースペース管理ツール（`drbdadm`、`drbdsetup`、`drbdmeta`）は、通"
"常 `/sbin/` などの `configure` に渡された `prefix` パスにインストールされま"
"す。"

#. type: Plain text
msgid ""
"Note that any kernel upgrade will require you to rebuild and reinstall the "
"DRBD kernel module to match the new kernel."
msgstr ""
"カーネルをアップグレードする際には、新しいカーネルに合わせて、DRBDカーネルモ"
"ジュールを再構築して再インストールする必要があります。"

#. type: Plain text
msgid ""
"Some distributions allow to register kernel module source directories, so "
"that rebuilds are done as necessary. See e.g. `dkms(8)` on Debian."
msgstr ""
"一部のディストリビューションでは、カーネルモジュールのソースディレクトリを登"
"録しておくことで、必要に応じて再構築が行われます。例えば、Debianでは "
"`dkms(8)` を参照してください。"

#. type: Plain text
msgid ""
"The DRBD userspace tools, in contrast, need only to be rebuilt and "
"reinstalled when upgrading to a new DRBD version. If at any time you upgrade "
"to a new kernel _and_ new DRBD version, you will need to upgrade both "
"components."
msgstr ""
"一方で、DRBDのユーザースペースツールは、新しいDRBDバージョンにアップグレード"
"する際には、再構築して再インストールするだけで済みます。新しいカーネルと新し"
"いDRBDバージョンの両方にアップグレードする場合、両コンポーネントをアップグ"
"レードする必要があります。"

#. type: Title ===
#, no-wrap
msgid "Building the DRBD userspace RPM packages"
msgstr "DRBDのユーザースペースRPMパッケージをビルドする"

#. type: Plain text
msgid ""
"The DRBD build system contains a facility to build RPM packages directly out "
"of the DRBD source tree. For building RPMs, <<s-build-prereq>> applies "
"essentially in the same way as for building and installing with `make`, "
"except that you also need the RPM build tools, of course."
msgstr ""
"DRBDビルドシステムには、DRBDのソースツリーから直接RPMパッケージをビルドする機"
"能が含まれています。RPMをビルドする際には、`make` でビルドおよびインストール"
"する場合と基本的に同様に <<s-build-prereq>> が適用されますが、もちろんRPMビル"
"ドツールも必要です。"

#. type: Plain text
msgid ""
"Also, see <<s-build-prepare-kernel-tree>> if you are not building against a "
"running kernel with precompiled headers available."
msgstr ""
"もし、実行中のカーネルとプリコンパイル済ヘッダを使用せずにビルドする場合は、 "
"<<s-build-prepare-kernel-tree>> も参照してください。"

#. type: Plain text
msgid ""
"The build system offers two approaches for building RPMs. The simpler "
"approach is to simply invoke the `rpm` target in the top-level Makefile:"
msgstr ""
"ビルドシステムは、RPMをビルドするための2つのアプローチを提供しています。より"
"簡単な方法は、単にトップレベルのMakefileで `rpm` ターゲットを呼び出すことで"
"す。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ ./configure\n"
"$ make rpm\n"
msgstr ""
"$ ./configure\n"
"$ make rpm\n"

#. type: Plain text
msgid ""
"This approach will auto-generate spec files from pre-defined templates, and "
"then use those spec files to build binary RPM packages."
msgstr ""
"このアプローチは、事前定義されたテンプレートから仕様ファイルを自動生成し、そ"
"の仕様ファイルを使用してバイナリのRPMパッケージをビルドします。"

#. type: Plain text
msgid "The `make rpm` approach generates several RPM packages:"
msgstr "`make rpm` のアプローチは、複数のRPMパッケージを生成します。"

#. type: Block title
#, no-wrap
msgid "DRBD userland RPM packages"
msgstr "DRBDのユーザーランドRPMパッケージ"

#. type: Table
#, no-wrap
msgid ""
"Package name;Description;Dependencies;Remarks\n"
"+drbd+;DRBD meta-package;All other `drbd-*` packages;Top-level virtual package. When installed, this pulls in all other userland packages as dependencies.\n"
"+drbd-utils+;Binary administration utilities;;Required for any DRBD enabled host\n"
"+drbd-udev+;udev integration facility;`drbd-utils`, `udev`;Enables `udev` to manage user-friendly symlinks to DRBD devices\n"
"+drbd-xen+;Xen DRBD helper scripts;`drbd-utils`, `xen`;Enables `xend` to auto-manage DRBD resources\n"
"+drbd-heartbeat+;DRBD Heartbeat integration scripts;`drbd-utils`, `heartbeat`;Enables DRBD management by legacy v1-style Heartbeat clusters\n"
"+drbd-pacemaker+;DRBD Pacemaker integration scripts;`drbd-utils`, `pacemaker`;Enables DRBD management by Pacemaker clusters\n"
"+drbd-rgmanager+;DRBD RedHat Cluster Suite integration scripts;`drbd-utils`, `rgmanager`;Enables DRBD management by `rgmanager`, the Red Hat Cluster Suite resource manager\n"
"+drbd-bashcompletion+;Programmable bash completion;`drbd-utils`,\t`bash-completion`;Enables Programmable bash completion for the `drbdadm` utility\n"
msgstr ""
"パッケージ名;説明;依存関係;備考\n"
"+drbd+;DRBD メタパッケージ;その他すべての `drbd-*` パッケージ;最上位の仮想パッケージ。インストールされると、他のすべてのユーザーランドパッケージが依存関係として取り込まれます。\n"
"+drbd-utils+;バイナリ管理ユーティリティ;;DRBD 対応ホストに必須\n"
"+drbd-udev+;udev 統合機能;`drbd-utils`, `udev`;`udev` が DRBD デバイスへのユーザーフレンドリなシンボリックリンクを管理できるようにします\n"
"+drbd-xen+;Xen DRBD ヘルパー スクリプト;`drbd-utils`, `xen`;`xend` を有効にして DRBD リソースを自動管理します\n"
"+drbd-heartbeat+;DRBD Heartbeat 統合スクリプト;`drbd-utils`, `heartbeat`;従来の v1 スタイルの Heartbeat クラスタによる DRBD 管理を有効にします\n"
"+drbd-pacemaker+;DRBD Pacemaker 統合スクリプト;`drbd-utils`,`pacemaker`;Pacemaker クラスターによる DRBD 管理を有効にします\n"
"+drbd-rgmanager+;DRBD RedHat Cluster Suite 統合スクリプト;`drbd-utils`,`rgmanager`;Red Hat Cluster Suite リソース マネージャである `rgmanager` による DRBD 管理を有効にします+drbd-bashcompletion+;プログラム可能な bash 補完;`drbd-utils`,\t`bash-completion`;`drbdadm` ユーティリティのプログラム可能な bash 補完を有効にします\n"

#. type: Plain text
msgid ""
"The other, more flexible approach is to have `configure` generate the spec "
"file, make any changes you deem necessary, and then use the `rpmbuild` "
"command:"
msgstr ""
"もう一つの、柔軟なアプローチは、`configure` にスペックファイルを生成させ、必"
"要な変更を加え、その後 `rpmbuild` コマンドを使用する方法です。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ ./configure --enable-spec\n"
"$ make tgz\n"
"$ cp drbd*.tar.gz `rpm -E %sourcedir`\n"
"$ rpmbuild -bb drbd.spec\n"
msgstr ""
"$ ./configure --enable-spec\n"
"$ make tgz\n"
"$ cp drbd*.tar.gz `rpm -E %sourcedir`\n"
"$ rpmbuild -bb drbd.spec\n"

#. type: Plain text
msgid ""
"The RPMs will be created wherever your system RPM configuration (or your "
"personal `~/.rpmmacros` configuration) dictates."
msgstr ""
"RPMは、システムのRPM構成（またはあなたの個人の `~/.rpmmacros` 構成）に応じて"
"作成されます。"

#. type: Plain text
msgid ""
"After you have created these packages, you can install, upgrade, and "
"uninstall them as you would any other RPM package in your system."
msgstr ""
"これらのパッケージを作成した後、システム内の他の任意のRPMパッケージと同様に、"
"それらをインストール、アップグレード、アンインストールすることができます。"

#. type: Plain text
msgid ""
"Note that any kernel upgrade will require you to generate a new `kmod-drbd` "
"package to match the new kernel; see also <<s-kabi-warning>>."
msgstr ""
"注意：どんなカーネルのアップグレードでも、新しいカーネルに合わせて新しい"
"「kmod-drbd」パッケージを生成する必要があります。詳細は <<s-kabi-warning>> も"
"参照してください。"

#. type: Plain text
msgid ""
"The DRBD userland packages, in contrast, need only be recreated when "
"upgrading to a new DRBD version. If at any time you upgrade to a new kernel "
"_and_ new DRBD version, you will need to upgrade both packages."
msgstr ""
"一方、DRBDユーザーランドパッケージは、新しいDRBDバージョンにアップグレードす"
"る際にのみ再作成する必要があります。新しいカーネルと新しいDRBDバージョンの両"
"方にアップグレードする場合は、両方のパッケージをアップグレードする必要があり"
"ます。"

#. type: Title ===
#, no-wrap
msgid "Building a DRBD Debian package"
msgstr "Debianパッケージの作成について"

#. type: Plain text
msgid ""
"The DRBD build system contains a facility to build Debian packages directly "
"out of the DRBD source tree. For building Debian packages, <<s-build-"
"prereq>> applies essentially in the same way as for building and installing "
"with `make`, except that you of course also need the `dpkg-dev` package "
"containing the Debian packaging tools, and `fakeroot` if you want to build "
"DRBD as a non-root user (highly recommended). All DRBD sub-projects (kernel "
"module and `drbd-utils`) support Debian package building."
msgstr ""
"DRBDのビルドシステムには、DRBDのソースツリーから直接Debianパッケージをビルド"
"するための機能が含まれています。Debianパッケージをビルドする場合、`make` でビ"
"ルドおよびインストールする場合と基本的に同じように <<s-build-prereq>> が適用"
"されますが、Debianのパッケージングツールを含む `dpkg-dev` パッケージと、DRBD"
"を非rootユーザーとしてビルドする場合には `fakeroot` も必要です（強く推奨）。"
"全てのDRBDのサブプロジェクト（カーネルモジュールと `drbd-utils` ）は、Debian"
"パッケージのビルドをサポートしています。"

#. type: Plain text
msgid ""
"The DRBD source tree includes a `debian` subdirectory containing the "
"required files for Debian packaging. That subdirectory, however, is not "
"included in the DRBD source tar files -- instead, you will need to <<s-"
"checking-out-git,create a Git checkout>> of a _tag_ associated with a "
"specific DRBD release."
msgstr ""
"DRBDのソースツリーには、Debianパッケージングに必要なファイルが含まれている"
"`debian` サブディレクトリがあります。ただし、そのサブディレクトリはDRBDソース"
"tarファイルには含まれていません。その代わりに、特定のDRBDリリースに関連付けら"
"れた「タグ」を使用して <<s-checking-out-git,Gitをチェックアウトする>> 必要が"
"あります。"

#. type: Plain text
msgid ""
"Once you have created your checkout in this fashion, you can issue the "
"following commands to build DRBD Debian packages:"
msgstr ""
"この手法でチェックアウトを作成した後、DRBDのDebianパッケージをビルドするため"
"に以下のコマンドを発行することができます。"

#. type: delimited block -
#, no-wrap
msgid "$ dpkg-buildpackage -rfakeroot -b -uc\n"
msgstr "$ dpkg-buildpackage -rfakeroot -b -uc\n"

#. type: Plain text
msgid ""
"This (example) `drbd-buildpackage` invocation enables a binary-only build (`-"
"b`) by a non-root user (`-rfakeroot`), disabling cryptographic signature for "
"the changes file (`-uc`). Of course, you might prefer other build options, "
"see the `dpkg-buildpackage` man page for details."
msgstr ""
"この（例えば）`drbd-buildpackage` の呼び出しは、非特権ユーザーによるバイナリ"
"のみのビルド（ `-b` ）を有効にし、変更ファイルのための暗号署名を無効にする"
"（`-uc`）ために `-rfakeroot` が使われています。もちろん、他のビルドオプション"
"を使用することも可能であり、詳細は `dpkg-buildpackage` のmanページを参照して"
"ください。"

#. type: Plain text
msgid "This build process will create the following Debian packages:"
msgstr "このビルドプロセスにより、以下のDebianパッケージが作成されます。"

#. type: Plain text
msgid ""
"A package containing the DRBD userspace tools, named `drbd-utils___x__.__y__."
"__z__-__ARCH__.deb`;"
msgstr ""
"DRBDユーザースペースツールを含むパッケージは、`drbd-utils___x__.__y__.__z__-"
"__ARCH__.deb` という名前です。"

#. type: Plain text
msgid ""
"A module source package suitable for `module-assistant` named `drbd-module-"
"source___x__.__y__.__z__-BUILD_all.deb`."
msgstr ""
"`module-assistant` に適したモジュールソースパッケージで、`drbd-module-"
"source_x.y.z-BUILD_all.deb` という名前です。"

#. type: Plain text
msgid ""
"A dkms package suitable for `dkms` named `drbd-dkms___x__.__y__.__z__-"
"BUILD_all.deb`."
msgstr ""
"`dkms` に適した `dkms` 用のパッケージであり、`drbd-dkms_x.y.z-BUILD_all.deb` "
"という名前のもの。"

#. type: Plain text
msgid ""
"After you have created these packages, you can install, upgrade, and "
"uninstall them as you would any other Debian package in your system."
msgstr ""
"これらのパッケージを作成した後は、システム内の他のDebianパッケージと同様に、"
"それらをインストール、アップグレード、アンインストールすることができます。"

#. type: Plain text
msgid ""
"The `drbd-utils` packages supports Debian's `dpkg-reconfigure` facility, "
"which can be used to switch which versions of the man-pages are shown by "
"default (8.3, 8.4, or 9.0)."
msgstr ""
"`drbd-utils` パッケージは、Debianの `dpkg-reconfigure` 機能をサポートしてお"
"り、デフォルトで表示されるmanページのバージョンを切り替えるために使用すること"
"ができます（8.3、8.4、または9.0）。"

#. type: Plain text
msgid ""
"Building and installing the actual kernel module from the installed module "
"source package is easily accomplished via Debian's `module-assistant` "
"facility:"
msgstr ""
"インストールされたモジュールのソースパッケージから実際のカーネルモジュールを"
"ビルドしてインストールすることは、Debianの `module-assistant` ツールを使用す"
"ることで簡単に行うことができます。"

#. type: delimited block -
#, no-wrap
msgid "# module-assistant auto-install drbd-module\n"
msgstr "# module-assistant auto-install drbd-module\n"

#. type: Plain text
msgid "You can also use the shorthand form of the above command:"
msgstr "上記のコマンドの省略形も使用することができます。"

#. type: delimited block -
#, no-wrap
msgid "# m-a a-i drbd-module\n"
msgstr "# m-a a-i drbd-module\n"

#. type: Plain text
msgid ""
"Note that any kernel upgrade will require you to rebuild the kernel module "
"(with `module-assistant`, as just described) to match the new kernel. The "
"`drbd-utils` and `drbd-module-source` packages, in contrast, only need to be "
"recreated when upgrading to a new DRBD version. If at any time you upgrade "
"to a new kernel _and_ new DRBD version, you will need to upgrade both "
"packages."
msgstr ""
"新しいカーネルへのアップグレードでは、その新しいカーネルに合わせてカーネルモ"
"ジュールを再構築する必要があります（前述のように `module-assistant` を使用し"
"て）。対照的に、`drbd-utils` および `drbd-module-source` パッケージは、新しい"
"DRBDバージョンにアップグレードするときにのみ再作成する必要があります。新しい"
"カーネルと新しいDRBDバージョンの両方にアップグレードする場合は、両方のパッ"
"ケージをアップグレードする必要があります。"

#. type: Plain text
msgid ""
"Starting from DRBD9, automatic updates of the DRBD kernel module are "
"possible with the help of `dkms(8)`. All that is needed is to install the "
"`drbd-dkms` Debian package."
msgstr ""
"DRBD9からは、`dkms(8)` を利用してDRBDカーネルモジュールの自動更新が可能になり"
"ました。`drbd-dkms` Debianパッケージをインストールすれば、簡単に更新すること"
"ができます。"
