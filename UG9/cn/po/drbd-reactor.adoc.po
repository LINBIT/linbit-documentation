# Language cn translations for PACKAGE package
# Copyright (C) 2023 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: documentation@linbit.com\n"
"POT-Creation-Date: 2023-11-07 17:54+0000\n"
"PO-Revision-Date: 2023-05-18 09:56-0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: cn\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:2 UG9/en/linstor-gateway.adoc:72
#: UG9/en/linstorgw-software-stack.adoc:27
#, no-wrap
msgid "DRBD Reactor"
msgstr "DRBD Reactor"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:8
msgid ""
"indexterm2:[DRBD Reactor] is a daemon that monitors DRBD events and reacts "
"to them.  DRBD Reactor has various potential uses, from monitoring DRBD "
"resources and metrics, to creating failover clusters to providing highly "
"available services that you would usually need to configure using complex "
"cluster managers."
msgstr ""
"indexterm2:[DRBD Reactor] 是一个监视 DRBD 事件并对它们做出反应的守护进程。 "
"DRBD Reactor 有各种潜在用途，从监控 DRBD 资源和指标，到创建故障转移集群，再到"
"提供通常需要使用复杂集群管理器配置的高可用服务。"

#. type: Title ===
#: UG9/en/drbd-reactor.adoc:10
#, no-wrap
msgid "Installing DRBD Reactor"
msgstr "安装 DRBD Reactor"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:15
msgid ""
"DRBD Reactor can be installed from source files found within https://github."
"com/LINBIT/drbd-reactor[the project's GitHub repository]. See the "
"instructions there for details and any prerequisites."
msgstr ""
"DRBD Reactor 可以从 https://github.com/LINBIT/drbd-reactor[项目的 GitHub 存储"
"库]中找到的源文件安装。有关详细信息和任何先决条件，请参阅其中的说明。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:19
msgid ""
"Alternatively, LINBIT customers can install DRBD Reactor from prebuilt "
"packages, available from LINBIT's `drbd-9` packages repository."
msgstr ""
"或者，LINBIT 客户可以从 LINBIT 的“drbd-9”软件包存储库中提供的预构建软件包安"
"装 DRBD Reactor。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:23
msgid ""
"Once installed, you can verify DRBD Reactor's version number by using the "
"`drbd-reactor --version` command."
msgstr ""
"安装后，您可以使用“drbd-reactor --version”命令验证 DRBD Reactor 的版本号。"

#. type: Title ===
#: UG9/en/drbd-reactor.adoc:25
#, no-wrap
msgid "DRBD Reactor's Components"
msgstr "DRBD反应堆的组件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:29
msgid ""
"Because DRBD Reactor has many different uses, it was split into two "
"components: a core component and a plugin component."
msgstr ""
"由于 DRBD Reactor 有许多不同的用途，因此它被分为两个组件：核心组件和插件组"
"件。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:31
#, no-wrap
msgid "DRBD Reactor Core"
msgstr "DRBD反应堆堆芯"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:35
msgid ""
"DRBD Reactor’s core component is responsible for collecting DRBD events, "
"preparing them, and sending them to the DRBD Reactor plugins."
msgstr ""
"DRBD Reactor 的核心组件负责收集 DRBD 事件、准备它们并将它们发送到 DRBD "
"Reactor 插件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:40
msgid ""
"The core can be reloaded with an all new or an additional, updated "
"configuration. It can stop plugin instances no longer required and start new "
"plugin threads without losing DRBD events.  Last but not least, the core has "
"to ensure that plugins receive an initial and complete DRBD state."
msgstr ""
"核心可以重新加载全新的或附加的更新配置。它可以停止不再需要的插件实例并启动新"
"的插件线程，而不会丢失 DRBD 事件。最后但并非最不重要的一点是，核心必须确保插"
"件接收初始且完整的 DRBD 状态。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:42
#, no-wrap
msgid "DRBD Reactor Plugins"
msgstr "DRBD Reactor 插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:47
msgid ""
"Plugins provide DRBD Reactor with its functionality and there are different "
"plugins for different uses. A plugin receives messages from the core "
"component and acts upon DRBD resources based on the message content and "
"according to the plugin’s type and configuration."
msgstr ""
"插件为 DRBD Reactor 提供了其功能，并且有不同的插件用于不同的用途。插件从核心"
"组件接收消息，并根据消息内容以及插件的类型和配置对 DRBD 资源进行操作。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:51
msgid ""
"Plugins can be instantiated multiple times, so there can be multiple "
"instances of every plugin type. So, for example, numerous plugin instances "
"could provide high-availability in a cluster, one per DRBD resource."
msgstr ""
"插件可以多次实例化，因此每个插件类型可以有多个实例。因此，例如，大量插件实例"
"可以在集群中提供高可用性，每个 DRBD 资源一个。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:53
#, no-wrap
msgid "The Promoter Plugin"
msgstr "促销员插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:61
msgid ""
"The promoter plugin is arguably DRBD Reactor's most important and useful "
"feature. You can use it to create failover clusters hosting highly available "
"services more easily than using other more complex cluster resource managers "
"(CRMs). If you want to get started quickly, you can finish reading this "
"section, then skip to <<s-drbd-reactor-promoter-plugin-configuring>>. You "
"can then try the instructions in the <<s-drbd-reactor-creating-a-ha-file-"
"system-mount>> section for an example exercise."
msgstr ""
"启动子插件可以说是 DRBD Reactor 最重要、最有用的功能。与使用其他更复杂的集群"
"资源管理器 (CRM) 相比，您可以使用它更轻松地创建托管高可用服务的故障转移集群。"
"如果您想快速入门，可以阅读完本节，然后跳至&lt;<s-drbd-reactor-promoter-"
"plugin-configuring> &gt;。然后您可以尝试&lt;中的说明<s-drbd-reactor-creating-"
"a-ha-file-system-mount>&gt; 部分示例练习。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:67
msgid ""
"The promoter plugin monitors events on DRBD resources and executes systemd "
"units. This plugin allows DRBD Reactor to provide failover functionality to "
"a cluster to create high-availability deployments. You can use DRBD Reactor "
"and its promoter plugin as a replacement for other CRMs, such as Pacemaker, "
"in many scenarios where its lightness and its configuration simplicity offer "
"advantages."
msgstr ""
"启动子插件监视 DRBD 资源上的事件并执行 systemd 单元。该插件允许 DRBD Reactor "
"向集群提供故障转移功能以创建高可用性部署。您可以使用 DRBD Reactor 及其启动子"
"插件来替代其他 CRM（例如 Pacemaker），在许多场景中，其轻便性和配置简单性具有"
"优势。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:72
msgid ""
"For example, you can use the promoter plugin to configure fully automatic "
"recovery of isolated primary nodes. Furthermore, there is no need for a "
"separate communication layer (such as Corosync), because DRBD and DRBD "
"Reactor (used as the CRM) will always agree on the quorum status of nodes."
msgstr ""
"例如，您可以使用promote插件来配置隔离主节点的全自动恢复。此外，不需要单独的通"
"信层（例如Corosync），因为DRBD和DRBD Reactor（用作CRM）将始终就节点的仲裁状态"
"达成一致。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:77
msgid ""
"A disadvantage to the promoter plugin when compared to a CRM such as "
"Pacemaker is that it is not possible to create order constraints that are "
"independent of colocations. For example, if a web service and a database run "
"on different nodes, Pacemaker can constrain the web service to start after "
"the database. DRBD Reactor and its promoter plugin cannot."
msgstr ""
"与 Pacemaker 等 CRM 相比，促销员插件的一个缺点是无法创建独立于托管的订单约"
"束。例如，如果 Web 服务和数据库运行在不同的节点上，Pacemaker 可以限制 Web 服"
"务在数据库之后启动。 DRBD Reactor 及其启动子插件不能。"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:79
#, no-wrap
msgid "How the Promoter Plugin Works"
msgstr "启动器插件的工作原理"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:84
msgid ""
"The promoter plugin’s main function is that if a DRBD device can be "
"promoted, promote it to _Primary_ and start a set of user-defined services. "
"This could be a series of services, such as:"
msgstr ""
"启动器插件的主要功能是，如果一个DRBD设备可以升级，则将其升级为_Primary_并启动"
"一组用户定义的服务。这可以是一系列服务，例如："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:86
msgid "Promote the DRBD device."
msgstr "提升 DRBD 设备。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:87
msgid "Mount the device to a mount point."
msgstr "将设备安装到安装点。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:88
msgid "Start a database that uses a database located at the mount point."
msgstr "启动使用位于安装点的数据库的数据库。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:91
msgid ""
"If a resource loses quorum, DRBD Reactor stops these services so that "
"another node that still has quorum (or the node that lost quorum when it has "
"quorum again) can start the services."
msgstr ""
"如果资源失去仲裁，DRBD Reactor 会停止这些服务，以便另一个仍然具有仲裁的节点"
"（或者当它再次具有仲裁时失去仲裁的节点）可以启动服务。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:95
msgid ""
"The promoter plugin also supports Open Cluster Framework (OCF) resource "
"agents and failure actions such as rebooting a node if a resource fails to "
"demote, so that the resource can promote on another node."
msgstr ""
"启动器插件还支持开放集群框架 (OCF) 资源代理和故障操作，例如在资源降级失败时重"
"新启动节点，以便资源可以在另一个节点上升级。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:97
#, no-wrap
msgid "The User Mode Helper (UMH) Plugin"
msgstr "用户模式助手 (UMH) 插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:102
msgid ""
"Using this plugin and its domain specific language (DSL), you can execute a "
"script if an event you define occurs. For example, you can run a script that "
"sends a Slack message whenever a DRBD resource loses connection."
msgstr ""
"使用此插件及其域特定语言 (DSL)，您可以在发生您定义的事件时执行脚本。例如，您"
"可以运行一个脚本，在 DRBD 资源失去连接时发送一条 Slack 消息。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:107
msgid ""
"This functionality has existed before in DRBD with “user-defined helper "
"scripts” in “kernel space”. However, DRBD Reactor, including the UMH plugin, "
"can be executed in “user space”. This allows for easier container "
"deployments and use with “read-only” host file systems such as those found "
"within container distributions."
msgstr ""
"此功能之前已在 DRBD 中通过“内核空间”中的“用户定义的帮助程序脚本”存在。然而，"
"DRBD Reactor，包括 UMH 插件，可以在“用户空间”中执行。这使得容器部署更加容易，"
"并可与“只读”主机文件系统（例如容器发行版中的文件系统）一起使用。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:112
msgid ""
"Using UMH plugins also provides a benefit beyond what was previously "
"possible using user defined helper scripts: Now you can define your own "
"rules for all the events that are possible for a DRBD resource. You are no "
"longer limited to only the few events that there are event handlers in the "
"kernel for."
msgstr ""
"使用 UMH 插件还提供了超出以前使用用户定义的帮助程序脚本所能提供的好处：现在您"
"可以为 DRBD 资源可能发生的所有事件定义自己的规则。您不再局限于内核中有事件处"
"理程序的少数事件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:114
msgid "UMH plugin scripts can be of two types:"
msgstr "UMH 插件脚本可以有两种类型："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:117
#, no-wrap
msgid ""
"*User-defined filters*. These are “one-shot” UMH scripts where an event happens that triggers\n"
"the script.\n"
msgstr "*用户定义的过滤器*。这些是“一次性”UMH 脚本，其中发生的事件会触发脚本。\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:123
#, no-wrap
msgid ""
"*Kernel called helper replacements*. This type of script is currently under development. These\n"
"are UMH scripts that require communication to and from the kernel. An event triggers the\n"
"script but an action within the script requires the kernel to communicate back to the script\n"
"so that the script can take a next action, based on the failure or success of the kernel’s\n"
"action. An example of such a script would be a `before-resync-target` activated script.\n"
msgstr "*内核称为辅助替换*。此类脚本目前正在开发中。这些是需要与内核进行通信的 UMH 脚本。事件触发脚本，但脚本内的操作需要内核与脚本进行通信，以便脚本可以根据内核操作的失败或成功采取下一个操作。此类脚本的一个示例是“before-resync-target”激活脚本。\n"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:125
#, no-wrap
msgid "The Prometheus Monitoring Plugin"
msgstr "普罗米修斯监控插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:134
msgid ""
"This plugin provides a https://prometheus.io/[Prometheus] compatible "
"endpoint that exposes various DRBD metrics, including out-of-sync bytes, "
"resource roles (for example, _Primary_), and connection states (for example, "
"_Connected_). This information can then be used in every monitoring solution "
"that supports Prometheus endpoints. The full set of metrics and an example "
"Grafana dashboard are available at the https://github.com/LINBIT/drbd-"
"reactor/blob/master/doc/prometheus.md[DRBD Reactor GitHub repository]."
msgstr ""
"该插件提供了一个 https://prometheus.io/[Prometheus] 兼容端点，该端点公开各种 "
"DRBD 指标，包括不同步字节、资源角色（例如 _Primary_）和连接状态（例如 "
"_Connected_）。然后，该信息可用于支持 Prometheus 端点的每个监控解决方案。完整"
"的指标集和示例 Grafana 仪表板可在 https://github.com/LINBIT/drbd-reactor/"
"blob/master/doc/prometheus.md[DRBD Reactor GitHub 存储库] 上找到。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:136
#, no-wrap
msgid "The AgentX Plugin for SNMP Monitoring"
msgstr "用于 SNMP 监控的 AgentX 插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:141
msgid ""
"This plugin acts as an AgentX subagent for SNMP to expose various DRBD "
"metrics, for example, to monitor DRBD resources via SNMP. AgentX is a "
"standardized protocol that can be used between the SNMP daemon and a "
"subagent, such as the AgentX plugin in DRBD Reactor."
msgstr ""
"该插件充当 SNMP 的 AgentX 子代理，以公开各种 DRBD 指标，例如，通过 SNMP 监控 "
"DRBD 资源。 AgentX 是一种标准化协议，可在 SNMP 守护进程和子代理之间使用，例"
"如 DRBD Reactor 中的 AgentX 插件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:145
msgid ""
"The DRBD metrics that this plugin exposes to the SNMP daemon are shown in "
"https://github.com/LINBIT/drbd-reactor/blob/master/doc/agentx.md#metrics[the "
"project's source code repository]."
msgstr ""
"该插件向 SNMP 守护进程公开的 DRBD 指标显示在 https://github.com/LINBIT/drbd-"
"reactor/blob/master/doc/agentx.md#metrics[项目的源代码存储库]中。"

#. type: Title ===
#: UG9/en/drbd-reactor.adoc:147
#, no-wrap
msgid "Configuring DRBD Reactor"
msgstr "Configuring DRBD Reactor"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:157
msgid ""
"Before you can run DRBD Reactor, you must configure it. Global "
"configurations are made within a main TOML configuration file, which should "
"be created here: `/etc/drbd-reactor.toml`. The file has to be a valid TOML "
"(https://toml.io) file. Plugin configurations should be made within snippet "
"files that can be placed into the default DRBD Reactor snippets directory, `/"
"etc/drbd-reactor.d`, or into another directory if specified in the main "
"configuration file. An https://github.com/LINBIT/drbd-reactor/blob/master/"
"example/drbd-reactor.toml[example configuration file] can be found in the "
"`example` directory of the DRBD Reactor GitHub repository."
msgstr ""
"在运行 DRBD Reactor 之前，您必须对其进行配置。全局配置是在主 TOML 配置文件中"
"进行的，该文件应在此处创建：“/etc/drbd-reactor.toml”。该文件必须是有效的 "
"TOML (https://toml.io) 文件。插件配置应该在片段文件中进行，这些文件可以放置在"
"默认的 DRBD Reactor 片段目录“/etc/drbd-reactor.d”中，或者放置在主配置文件中指"
"定的另一个目录中。 https://github.com/LINBIT/drbd-reactor/blob/master/"
"example/drbd-reactor.toml[示例配置文件]可以在 DRBD Reactor GitHub 存储库"
"的“example”目录中找到。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:161
msgid ""
"For documentation purposes only, the example configuration file mentioned "
"above contains example plugin configurations. However, for deployment, "
"plugin configurations should always be made within snippet files."
msgstr ""
"仅出于文档目的，上面提到的示例配置文件包含示例插件配置。但是，对于部署，插件"
"配置应始终在代码片段文件中进行。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:163
#, no-wrap
msgid "Configuring DRBD Reactor's Core"
msgstr "配置 DRBD Reactor 的核心"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:166
msgid ""
"DRBD Reactor’s core configuration file consists of global settings and log "
"level settings."
msgstr "DRBD Reactor的核心配置文件由全局设置和日志级别设置组成。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:171
msgid ""
"Global settings include specifying a snippets directory, specifying a "
"statistics update polling time period, as well as specifying a path to a log "
"file. You can also set the log level within the configuration file to one "
"of: trace, debug, info, warn, error, off. “Info” is the default log level."
msgstr ""
"全局设置包括指定片段目录、指定统计更新轮询时间段以及指定日志文件的路径。您还"
"可以将配置文件中的日志级别设置为以下之一：跟踪、调试、信息、警告、错误、关"
"闭。 “Info”是默认日志级别。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:173
msgid "See the `drbd-reactor.toml` man page for the syntax of these settings."
msgstr "有关这些设置的语法，请参阅“drbd-reactor.toml”手册页。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:175
#, no-wrap
msgid "Configuring DRBD Reactor Plugins"
msgstr "配置 DRBD Reactor 插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:181
msgid ""
"You configure DRBD Reactor plugins by editing TOML formatted snippet files. "
"Every plugin can specify an ID (`id`) in its configuration section. On a "
"DRBD Reactor daemon reload, started plugins that are still present in the "
"new configuration keep running. Plugins without an ID get stopped and "
"restarted if still present in the new configuration."
msgstr ""
"您可以通过编辑 TOML 格式的代码片段文件来配置 DRBD Reactor 插件。每个插件都可"
"以在其配置部分指定一个 ID (`id`)。在 DRBD Reactor 守护进程重新加载时，新配置"
"中仍然存在的已启动插件将继续运行。如果新配置中仍然存在没有 ID 的插件，则会停"
"止并重新启动。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:183
msgid ""
"For plugins without an ID, every DRBD Reactor service reload is a restart."
msgstr "对于没有 ID 的插件，每次 DRBD Reactor 服务重新加载都是一次重新启动。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:185
#, no-wrap
msgid "Configuring the Promoter Plugin"
msgstr "配置启动器插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:189
msgid ""
"You will typically have one snippet file for each DRBD resource that you "
"want DRBD Reactor and the promoter plugin to watch and manage."
msgstr ""
"对于您希望 DRBD Reactor 和启动器插件监视和管理的每个 DRBD 资源，您通常都会有"
"一个片段文件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:191
msgid "Here is an example promoter plugin configuration snippet:"
msgstr "这是一个示例启动器插件配置片段："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:201
#, no-wrap
msgid ""
"[[promoter]]\n"
"[promoter.resources.my_drbd_resource] <1>\n"
"dependencies-as = \"Requires\" <2>\n"
"target-as = \"Requires\" <3>\n"
"start = [\"path-to-my-file-system-mount.mount\", \"foo.service\"] <4>\n"
"on-drbd-demote-failure = \"reboot\" <5>\n"
"secondary-force = true <6>\n"
"preferred-nodes = [\"nodeA\", \"nodeB\"] <7>\n"
msgstr ""
"[[promoter]]\n"
"[promoter.resources.my_drbd_resource] <1>\n"
"dependencies-as = \"Requires\" <2>\n"
"target-as = \"Requires\" <3>\n"
"start = [\"path-to-my-file-system-mount.mount\", \"foo.service\"] <4>\n"
"on-drbd-demote-failure = \"reboot\" <5>\n"
"secondary-force = true <6>\n"
"preferred-nodes = [\"nodeA\", \"nodeB\"] <7>\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:205
msgid ""
"\"my_drbd_resource\" specifies the name of the DRBD resource that DRBD "
"Reactor and the promoter plugin should watch and manage."
msgstr ""
"“my_drbd_resource”指定 DRBD Reactor 和启动器插件应监视和管理的 DRBD 资源的名"
"称。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:207
msgid ""
"Specifies the systemd dependency type to generate inter-service dependencies "
"as."
msgstr "指定生成服务间依赖关系的 systemd 依赖关系类型。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:210
msgid ""
"Specifies the systemd dependency type to generate service dependencies in "
"the final target unit."
msgstr "指定 systemd 依赖项类型以在最终目标单元中生成服务依赖项。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:213
msgid ""
"`start` specifies what should be started when the watched DRBD resource is "
"promotable. In this example, the promoter plugin would start a file system "
"mount unit and a service unit."
msgstr ""
"`start` 指定当监视的 DRBD 资源可提升时应启动的内容。在此示例中，启动子插件将"
"启动文件系统安装单元和服务单元。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:219
msgid ""
"Specifies the action to take if a DRBD resource fails to demote, for "
"example, after a loss of quorum event. In such a case, an action should be "
"taken on the node that fails to demote that will trigger some \"self-"
"fencing\" of the node and cause another node to promote. Actions can be one "
"of: reboot, reboot-force, reboot-immediate, poweroff, poweroff-force, "
"poweroff-immediate, exit, exit-force."
msgstr ""
"指定如果 DRBD 资源无法降级（例如在仲裁事件丢失后）时要采取的操作。在这种情况"
"下，应该对降级失败的节点采取行动，这将触发该节点的某种“自我防护”并导致另一个"
"节点升级。操作可以是以下之一：重新启动、强制重新启动、立即重新启动、关闭电"
"源、强制关闭电源、立即关闭电源、退出、强制退出。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:226
msgid ""
"If a node loses quorum, DRBD Reactor will try to demote the node to a "
"secondary role. If the resource was configured to suspend I/O operations "
"upon loss of quorum, this setting specifies whether or not to demote the "
"node to a secondary role using `drbdadm`'s force secondary feature. See the "
"<<s-force-secondary>> section of the DRBD User's Guide for more details. "
"\"true\" is the default option if this setting is not specified. It is "
"specified here for illustrative purposes."
msgstr ""
"如果节点失去仲裁，DRBD Reactor 将尝试将该节点降级为次要角色。如果资源配置为在"
"失去仲裁时暂停 I/O 操作，则此设置指定是否使用“drbdadm”的强制辅助功能将节点降"
"级为辅助角色。参见&lt;<s-force-secondary> &gt; DRBD 用户指南的部分了解更多详"
"细信息。如果未指定此设置，则“true”是默认选项。此处指定它是为了说明目的。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:228
msgid ""
"If set, resources are started on the preferred nodes, in the specified "
"order, if possible."
msgstr "如果设置，则在可能的情况下，按照指定的顺序在首选节点上启动资源。"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:230
#, no-wrap
msgid "Specifying a Promoter Start List Service String Spanning Multiple Lines"
msgstr "指定跨多行的启动子开始列表服务字符串"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:238
msgid ""
"For formatting or readability reasons, it is possible to split a long "
"service string across multiple lines within a promoter plugin snippet file's "
"start list of services. You can do this by using https://toml.io/en/"
"v1.0.0#string[TOML syntax for multi-line basic strings]. In the following "
"example, the first and third service strings in a promoter plugin's start "
"list are split across multiple lines. A backslash (\\) at the end of a line "
"within a multi-line basic string ensures that a newline character is not "
"inserted between lines within the string."
msgstr ""
"出于格式或可读性原因，可以在启动子插件片段文件的服务启动列表中将长服务字符串"
"拆分为多行。您可以使用 https://toml.io/en/v1.0.0#string[多行基本字符串的 "
"TOML 语法] 来完成此操作。在以下示例中，启动子插件的开始列表中的第一个和第三个"
"服务字符串分为多行。多行基本字符串中行尾的反斜杠 (\\) 可确保不会在字符串中的"
"行之间插入换行符。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:250
#, no-wrap
msgid ""
"[...]\n"
"start = [\n"
"\"\"\"\n"
"ocf:heartbeat:Filesystem fs_mysql device=/dev/drbd1001 \\\n"
"directory=/var/lib/mysql fstype=ext4 run_fsck=no\"\"\",\n"
"\"mariadb.service\",\n"
"\"\"\"ocf:heartbeat:IPaddr2 db_virtip ip=192.168.222.65 \\\n"
"cidr_netmask=24 iflabel=virtualip\"\"\"\n"
"]\n"
"[...]\n"
msgstr ""
"[...]\n"
"start = [\n"
"\"\"\"\n"
"ocf:heartbeat:Filesystem fs_mysql device=/dev/drbd1001 \\\n"
"directory=/var/lib/mysql fstype=ext4 run_fsck=no\"\"\",\n"
"\"mariadb.service\",\n"
"\"\"\"ocf:heartbeat:IPaddr2 db_virtip ip=192.168.222.65 \\\n"
"cidr_netmask=24 iflabel=virtualip\"\"\"\n"
"]\n"
"[...]\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:254
msgid ""
"You can also use this technique to split up long strings within other plugin "
"snippet files."
msgstr "您还可以使用此技术来拆分其他插件片段文件中的长字符串。"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:256
#, no-wrap
msgid "Configuring Resource Freezing"
msgstr "配置资源冻结"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:262
msgid ""
"Starting with DRBD Reactor version 0.9.0, you can configure the promoter "
"plugin to \"freeze\" a resource that DRBD Reactor is controlling, rather "
"than stopping it when a currently active node loses quorum. DRBD Reactor can "
"then \"thaw\" the resource when the node regains quorum and becomes active, "
"rather than having to restart the resource if it was stopped."
msgstr ""
"从 DRBD Reactor 版本 0.9.0 开始，您可以配置启动子插件来“冻结” DRBD Reactor 正"
"在控制的资源，而不是在当前活动节点失去仲裁时停止它。当节点重新获得仲裁并变为"
"活动状态时，DRBD Reactor 可以“解冻”资源，而不必在资源停止时重新启动资源。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:273
msgid ""
"While in most cases the default stop and start behavior will be preferred, "
"the freeze and thaw configuration could be useful for a resource that takes "
"a long time to start, for example, a resource that includes services such as "
"a large database. If a _Primary_ node loses quorum in such a cluster, and "
"the remaining nodes are unable to form a partition with quorum, freezing the "
"resource could be useful, especially if the _Primary_ node's loss of quorum "
"was momentary, for example due to a brief network issue. When the formerly "
"_Primary_ node with a frozen resource reconnects with its peer nodes, the "
"node would again become _Primary_ and DRBD Reactor would thaw the resource. "
"The result of this behavior could be that the resource is again available in "
"seconds, rather than minutes, because the resource did not have to start "
"from a stopped state, it only had to resume from a frozen one."
msgstr ""
"虽然在大多数情况下，默认的停止和启动行为是首选，但冻结和解冻配置对于需要很长"
"时间才能启动的资源（例如，包含大型数据库等服务的资源）可能很有用。如果 "
"_Primary_ 节点在此类集群中失去仲裁，并且其余节点无法形成具有仲裁的分区，则冻"
"结资源可能会很有用，特别是如果 _Primary_ 节点的仲裁是暂时丢失的，例如由于短暂"
"的网络问题。当之前具有冻结资源的_Primary_节点与其对等节点重新连接时，该节点将"
"再次成为_Primary_，并且 DRBD Reactor 将解冻资源。此行为的结果可能是资源在几秒"
"钟（而不是几分钟）内再次可用，因为资源不必从停止状态启动，只需从冻结状态恢复"
"即可。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:276
msgid "====== Requirements:"
msgstr "====== 要求："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:278
msgid ""
"Before configuring the promoter plugin's freeze feature for a resource, you "
"will need:"
msgstr "在为资源配置启动子插件的冻结功能之前，您将需要："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:284
msgid ""
"A system that uses https://www.kernel.org/doc/html/latest/admin-guide/cgroup-"
"v2.html[cgroup v2], implementing unified cgroups. You can verify this by the "
"presence of `/sys/fs/cgroup/cgroup.controllers` on your system. If this is "
"not present, and your kernel supports it, you should be able to add the "
"kernel command line argument `systemd.unified_cgroup_hierarchy=1` to enable "
"this feature."
msgstr ""
"使用https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html[cgroup "
"v2]的系统，实现统一的cgroup。您可以通过系统上是否存在“/sys/fs/cgroup/cgroup."
"controllers”来验证这一点。如果不存在，并且您的内核支持它，您应该能够添加内核"
"命令行参数“systemd.unified_cgroup_hierarchy=1”来启用此功能。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:286
msgid ""
"This should only be relevant for RHEL 8, Ubuntu 20.04, and earlier versions."
msgstr "这应该只与 RHEL 8、Ubuntu 20.04 和更早版本相关。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:288
msgid "The following DRBD options configured for the resource:"
msgstr "为资源配置以下 DRBD 选项："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:289
msgid "`on-no-quorum` set to `suspend-io`;"
msgstr "`on-no-quorum` 设置为 `suspend-io`；"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:290
msgid "`on-no-data-accessible` set to `suspend-io`;"
msgstr "`on-no-data-accessible` 设置为 `suspend-io`；"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:291
msgid "`on-suspended-primary` set to `force-secondary`;"
msgstr "`on-suspended-primary` 设置为 `force-secondary`；"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:292
msgid "`rr-conflict` (`net` option) set to `retry-connect`."
msgstr "`rr-conflict`（`net` 选项）设置为 `retry-connect`。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:299
msgid ""
"A resource that can \"tolerate\" freezing and thawing. You can test how your "
"resource (and any applications that rely on the resource) respond to "
"freezing and thawing by using the `systemctl freeze <systemd_unit>`, and the "
"`systemctl thaw <systemd_unit>` commands. Here you specify the systemd unit "
"or units that correspond to the start list of services within the promoter "
"plugin's configuration. You can use these commands to test how your "
"applications behave, after services that they depend on are frozen and "
"thawed."
msgstr ""
"能够“耐受”冷冻和解冻的资源。您可以使用“systemctl freeze”测试您的资源（以及依"
"赖该资源的任何应用程序）如何响应冻结和解冻<systemd_unit>` 和 `systemctl 解冻"
"<systemd_unit>` 命令。您可以在此处指定与启动子插件配置中的服务启动列表相对应"
"的一个或多个 systemd 单元。您可以使用这些命令来测试应用程序所依赖的服务被冻结"
"和解冻后的行为方式。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:302
msgid ""
"If you are unsure whether your resource and applications will tolerate "
"freezing, then it is safer to keep the default stop and start behavior."
msgstr ""
"如果您不确定您的资源和应用程序是否能够容忍冻结，那么保留默认的停止和启动行为"
"会更安全。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:305
msgid ""
"To configure resource freezing, add the following line to your DRBD Reactor "
"resource's promoter plugin snippet file:"
msgstr ""
"要配置资源冻结，请将以下行添加到 DRBD Reactor 资源的启动子插件片段文件中："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:308
#, no-wrap
msgid "on-quorum-loss = \"freeze\"\n"
msgstr "on-quorum-loss = \"freeze\"\n"


#. type: Title =====
#: UG9/en/drbd-reactor.adoc:311
#, no-wrap
msgid "Using OCF Resource Agents with the Promoter Plugin"
msgstr "将 OCF 资源代理与启动器插件结合使用"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:315
msgid ""
"You can also configure the promoter plugin to use OCF resource agents in the "
"`start` list of services."
msgstr "您还可以配置启动子插件以在“启动”服务列表中使用 OCF 资源代理。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:320 UG9/en/drbd-reactor.adoc:683
msgid ""
"If you have a LINBIT customer or evaluation account, you can install the "
"`resource-agents` package available in LINBIT's `drbd-9` package repository "
"to install a suite of open source resource agent scripts, including the "
"\"Filesystem\" OCF resource agent."
msgstr ""
"如果您有 LINBIT 客户或评估帐户，则可以安装 LINBIT 的 `drbd-9` 软件包存储库中"
"提供的 `resource-agents` 软件包，以安装一套开源资源代理脚本，包括“文件系"
"统”OCF 资源代理。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:326
msgid ""
"The syntax for specifying an OCF resource agent as a service within a "
"`start` list is `ocf:$vendor:$agent instance-id [key=value key=value ...]`. "
"Here, `instance-id` is user-defined and `key=value` pairs, if specified, are "
"passed as environment variables to the created systemd unit file. For "
"example:"
msgstr ""
"将 OCF 资源代理指定为“start”列表中的服务的语法是“ocf:$vendor:$agent instance-"
"id [key=value key=value ...]”。这里，“instance-id”是用户定义的，“key=value”对"
"（如果指定）将作为环境变量传递到创建的 systemd 单元文件。例如："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:332
#, no-wrap
msgid ""
"[[promoter]]\n"
"[...]\n"
"start = [\"ocf:heartbeat:IPaddr2 ip_mysql ip=10.43.7.223 cidr_netmask=16\"]\n"
"[...]\n"
msgstr ""
"[[promoter]]\n"
"[...]\n"
"start = [\"ocf:heartbeat:IPaddr2 ip_mysql ip=10.43.7.223 cidr_netmask=16\"]\n"
"[...]\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:336
msgid ""
"The promoter plugin expects OCF resource agents in the `/usr/lib/ocf/"
"resource.d/` directory."
msgstr "启动子插件需要 OCF 资源代理位于“/usr/lib/ocf/resource.d/”目录中。"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:338
#, no-wrap
msgid "When to Use systemd Mount Units and OCF Filesystem Resource Agents"
msgstr "何时使用 systemd 安装单元和 OCF 文件系统资源代理"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:344
msgid ""
"Almost all scenarios that you might use DRBD Reactor and its promoter plugin "
"will likely involve a file system mount. If your use case involves a "
"promoter start list of services with other services or applications besides "
"a file system mount, then you should use a systemd mount unit to handle the "
"file system mounting."
msgstr ""
"几乎所有您可能使用 DRBD Reactor 及其启动子插件的场景都可能涉及文件系统挂载。"
"如果您的用例涉及除文件系统挂载之外的启动服务启动列表以及其他服务或应用程序，"
"那么您应该使用 systemd 挂载单元来处理文件系统挂载。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:348
msgid ""
"However, you should not use a systemd file system mount unit if a file "
"system mount point is the end goal, that is, it would be the last service in "
"your promoter plugin start list of services.  Instead, use an OCF Filesystem "
"resource agent to handle mounting and unmounting the file system."
msgstr ""
"但是，如果文件系统挂载点是最终目标，即它将是启动子插件启动服务列表中的最后一"
"个服务，则不应使用 systemd 文件系统挂载单元。相反，使用 OCF 文件系统资源代理"
"来处理文件系统的挂载和卸载。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:355
msgid ""
"In this case, using an OCF resource agent is preferred because the resource "
"agent will be able to escalate the demotion of nodes, by using `kill` "
"actions and other various signals against processes that might be holding "
"the mount point open. For example, there could be a user running an "
"application against a file in the file system that systemd would not know "
"about. In that case, systemd would not be able to unmount the file system "
"and the promoter plugin would not be able to demote the node."
msgstr ""
"在这种情况下，首选使用 OCF 资源代理，因为资源代理将能够通过对可能保持挂载点打"
"开的进程使用“kill”操作和其他各种信号来升级节点降级。例如，可能有用户针对 "
"systemd 不知道的文件系统中的文件运行应用程序。在这种情况下，systemd 将无法卸"
"载文件系统，并且启动器插件将无法降级节点。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:359
msgid ""
"You can find more information in the https://github.com/LINBIT/drbd-reactor/"
"blob/master/doc/promoter.md#ha-involving-file-system-mount-points[DRBD "
"Reactor GitHub documentation]."
msgstr ""
"您可以在 https://github.com/LINBIT/drbd-reactor/blob/master/doc/promoter."
"md#ha-involving-file-system-mount-points[DRBD Reactor GitHub 文档] 中找到更多"
"信息。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:361
#, no-wrap
msgid "Configuring the User Mode Helper (UMH) Plugin"
msgstr "配置用户模式助手 (UMH) 插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:364
msgid "Configuration for this plugin consists of:"
msgstr "该插件的配置包括："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:366
msgid "Rule type"
msgstr "规则类型"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:367
msgid "Command or script to execute"
msgstr "要执行的命令或脚本"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:368
msgid "User-defined environment variables (optional)"
msgstr "用户定义的环境变量（可选）"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:369
msgid "Filters based on DRBD resource name, event type, or state changes"
msgstr "根据 DRBD 资源名称、事件类型或状态更改进行过滤"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:372
msgid ""
"There are four different DRBD types a rule can be defined for: `resource`, "
"`device`, `peerdevice`, or `connection`."
msgstr ""
"可以为四种不同的 DRBD 类型定义规则：“资源”、“设备”、“对等设备”或“连接”。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:376
msgid ""
"For each rule type, you can configure a command or script to execute using "
"`sh -c` as well as any user-defined environment variables. User-defined "
"environment variables are in addition to the commonly set ones:"
msgstr ""
"对于每种规则类型，您可以使用“sh -c”以及任何用户定义的环境变量配置要执行的命令"
"或脚本。除了常用设置的环境变量之外，还有用户定义的环境变量："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:378
msgid "HOME “/”"
msgstr "HOME “/”"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:379
msgid "TERM “Linux”"
msgstr "TERM “Linux”"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:380
msgid "PATH “/sbin:/usr/sbin:/bin:/usr/bin”"
msgstr "PATH “/sbin:/usr/sbin:/bin:/usr/bin”"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:383
msgid ""
"You can also filter UMH rule types by DRBD resource name or event type "
"(exists, create, destroy, or change)."
msgstr ""
"您还可以按 DRBD 资源名称或事件类型（存在、创建、销毁或更改）过滤 UMH 规则类"
"型。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:390
msgid ""
"Finally, you can filter the plugin’s action based on DRBD state changes. "
"Filters should be based upon both the old and the new (current) DRBD state, "
"that are reported to the plugin, because you want the plugin to react to "
"changes. This is only possible if two states, old and new, are filtered for, "
"otherwise the plugin might trigger randomly. For example, if you only "
"specified a new (current) DRBD role as a DRBD state to filter for, the "
"plugin might trigger even when the new role is the same as the old DRBD role."
msgstr ""
"最后，您可以根据 DRBD 状态更改来过滤插件的操作。过滤器应基于向插件报告的旧的"
"和新的（当前）DRBD 状态，因为您希望插件对更改做出反应。仅当过滤了旧的和新的两"
"种状态时，这才是可能的，否则插件可能会随机触发。例如，如果您仅指定一个新的"
"（当前）DRBD 角色作为要过滤的 DRBD 状态，则即使新角色与旧的 DRBD 角色相同，该"
"插件也可能会触发。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:392
msgid ""
"Here is an example UMH plugin configuration snippet for a `resource` rule:"
msgstr "以下是“资源”规则的 UMH 插件配置片段示例："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:401
#, no-wrap
msgid ""
"[[umh]]\n"
"[[umh.resource]]\n"
"command = \"slack.sh $DRBD_RES_NAME on $(uname -n) from $DRBD_OLD_ROLE to $DRBD_NEW_ROLE\"\n"
"event-type = \"Change\"\n"
"resource-name = \"my-resource\"\n"
"old.role = { operator = \"NotEquals\", value = \"Primary\" }\n"
"new.role = \"Primary\"\n"
msgstr ""
"[[umh]]\n"
"[[umh.resource]]\n"
"command = \"slack.sh $DRBD_RES_NAME on $(uname -n) from $DRBD_OLD_ROLE to $DRBD_NEW_ROLE\"\n"
"event-type = \"Change\"\n"
"resource-name = \"my-resource\"\n"
"old.role = { operator = \"NotEquals\", value = \"Primary\" }\n"
"new.role = \"Primary\"\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:405
msgid ""
"This example UMH plugin configuration is based on change event messages "
"received from DRBD Reactor’s daemon for the DRBD resource specified by the "
"`resource-name` value `my-resource`."
msgstr ""
"此示例 UMH 插件配置基于从 DRBD Reactor 守护程序接收到的针对“resource-"
"name”值“my-resource”指定的 DRBD 资源的更改事件消息。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:414
msgid ""
"If the resource’s old role was not _Primary_ and its new (current) role is "
"_Primary_, then a script named `slack.sh` runs with the arguments that "
"follow. As the full path is not specified, the script needs to reside within "
"the commonly set `PATH` environment variable (`/sbin:/usr/sbin:/bin:/usr/"
"bin`) of the host machine (or container if run that way).  Presumably, the "
"script sends a message to a Slack channel informing of the resource role "
"change.  Variables specified in the command string value are substituted for "
"based on specified values elsewhere in the plugin's configuration, for "
"example, the value specified by `resource-name` will be substituted for "
"`$DRBD_RES_NAME` when the command runs."
msgstr ""
"如果资源的旧角色不是 _Primary_ 并且其新（当前）角色是 _Primary_，则名"
"为“slack.sh”的脚本将使用后面的参数运行。由于未指定完整路径，因此脚本需要驻留"
"在主机（或容器，如果运行）的常用设置“PATH”环境变量（“/sbin:/usr/sbin:/bin:/"
"usr/bin”）中那样）。据推测，该脚本会向 Slack 通道发送一条消息，通知资源角色更"
"改。命令字符串值中指定的变量将根据插件配置中其他位置的指定值进行替换，例如，"
"当命令运行时，“resource-name”指定的值将替换为“$DRBD_RES_NAME”。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:419
msgid ""
"The example configuration above uses the specified operator \"NotEquals\" to "
"evaluate whether or not the `old.role` value of \"Primary\" was true. If you "
"do not specify an operator, then the default operator is \"Equals\", as in "
"the `new.role = \"Primary\"` filter in the example configuration."
msgstr ""
"上面的示例配置使用指定的运算符“NotEquals”来评估“Primary”的“old.role”值是否为 "
"true。如果您未指定运算符，则默认运算符为“Equals”，如示例配置中的“new.role = "
"&quot;Primary&quot;”过滤器中所示。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:424
msgid ""
"There are more rules, fields, filter types, and variables that you can "
"specify in your UMH plugin configurations. See the https://github.com/LINBIT/"
"drbd-reactor/blob/master/doc/umh.md[UMH documentation page] in the DRBD "
"Reactor GitHub repository for more details, explanations, examples, and "
"caveats."
msgstr ""
"您可以在 UMH 插件配置中指定更多规则、字段、过滤器类型和变量。有关更多详细信"
"息、解释、示例和注意事项，请参阅 DRBD Reactor GitHub 存储库中的 https://"
"github.com/LINBIT/drbd-reactor/blob/master/doc/umh.md[UMH 文档页面]。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:426
#, no-wrap
msgid "Configuring the Prometheus Plugin"
msgstr "配置 Prometheus 插件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:432
msgid ""
"This plugin provides a Prometheus compatible HTTP endpoint serving DRBD "
"monitoring metrics, such as the DRBD connection state, whether or not the "
"DRBD device has quorum, number of bytes out of sync, indication of TCP send "
"buffer congestion, and many more. The `drbd-reactor.prometheus` man page has "
"a full list of metrics and more details."
msgstr ""
"该插件提供了一个与 Prometheus 兼容的 HTTP 端点，用于提供 DRBD 监控指标，例如 "
"DRBD 连接状态、DRBD 设备是否具有仲裁、不同步的字节数、TCP 发送缓冲区拥塞的指"
"示等等。 “drbd-reactor.prometheus”手册页包含完整的指标列表和更多详细信息。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:434
#, no-wrap
msgid "Configuring the AgentX Plugin for SNMP Monitoring"
msgstr "配置 AgentX 插件以进行 SNMP 监控"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:439
msgid ""
"Configuring the AgentX plugin involves installing an SNMP management "
"information base (MIB) that defines the DRBD metrics that will be exposed, "
"configuring the SNMP daemon, and editing a DRBD Reactor configuration "
"snippet file for the AgentX plugin."
msgstr ""
"配置 AgentX 插件涉及安装定义将公开的 DRBD 指标的 SNMP 管理信息库 (MIB)、配置 "
"SNMP 守护程序以及编辑 AgentX 插件的 DRBD Reactor 配置片段文件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:441
msgid ""
"You will need to complete the following setup steps on all your DRBD Reactor "
"nodes."
msgstr "您需要在所有 DRBD Reactor 节点上完成以下设置步骤。"

#. type: Title ==
#: UG9/en/drbd-reactor.adoc:443 UG9/en/linstor-webui.adoc:9
#: UG9/en/vsan-users-guide.adoc:31
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:447
msgid ""
"Before configuring this plugin to expose various DRBD metrics to an SNMP "
"daemon, you will need to install the following packages, if they are not "
"already installed."
msgstr ""
"在配置此插件以向 SNMP 守护程序公开各种 DRBD 指标之前，您需要安装以下软件包"
"（如果尚未安装）。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:449
msgid "For RPM-based systems:"
msgstr "对于基于 RPM 的系统："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:452
#, no-wrap
msgid "# dnf -y install net-snmp net-snmp-utils\n"
msgstr "# dnf -y install net-snmp net-snmp-utils\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:455
msgid "For DEB-based systems:"
msgstr "对于基于 DEB 的系统："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:458
#, no-wrap
msgid "# apt -y install snmp snmpd\n"
msgstr "# apt -y install snmp snmpd\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:463
msgid ""
"If you encounter errors related to missing MIBs when using SNMP commands "
"against the LINBIT MIB, you will have to download the missing MIBs. You can "
"do this manually or else install the `snmp-mibs-downloader` DEB package."
msgstr ""
"如果在对 LINBIT MIB 使用 SNMP 命令时遇到与缺少 MIB 相关的错误，则必须下载缺少"
"的 MIB。您可以手动执行此操作，也可以安装 `snmp-mibs-downloader` DEB 软件包。"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:465
#, no-wrap
msgid "AgentX Firewall Considerations"
msgstr "AgentX 防火墙注意事项"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:469
msgid ""
"If you are using a firewall service, you will need to allow TCP traffic via "
"port 705 for the AgentX protocol."
msgstr ""
"如果您使用防火墙服务，则需要允许通过端口 705 进行 AgentX 协议的 TCP 流量。"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:471
#, no-wrap
msgid "Installing the LINBIT DRBD Management Information Base"
msgstr "安装 LINBIT DRBD 管理信息库"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:474
msgid ""
"To use the AgentX plugin, download the LINBIT DRBD MIB to `/usr/share/snmp/"
"mibs`."
msgstr ""
"要使用 AgentX 插件，请将 LINBIT DRBD MIB 下载到“/usr/share/snmp/mibs”。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:478
#, no-wrap
msgid ""
"# curl -L https://github.com/LINBIT/drbd-reactor/raw/master/example/LINBIT-DRBD-MIB.mib \\\n"
"-o /usr/share/snmp/mibs/LINBIT-DRBD-MIB.mib\n"
msgstr ""
"# curl -L https://github.com/LINBIT/drbd-reactor/raw/master/example/LINBIT-DRBD-MIB.mib \\\n"
"-o /usr/share/snmp/mibs/LINBIT-DRBD-MIB.mib\n"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:481
#, no-wrap
msgid "Configuring the SNMP Daemon"
msgstr "Configuring the SNMP Daemon"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:485
msgid ""
"To configure the SNMP service daemon, add the following lines to its "
"configuration file (`/etc/snmp/snmpd.conf`):"
msgstr ""
"要配置 SNMP 服务守护进程，请将以下行添加到其配置文件 (`/etc/snmp/snmpd."
"conf`)："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:491
#, no-wrap
msgid ""
"# add LINBIT ID to the system view and enable agentx\n"
"view    systemview    included   .1.3.6.1.4.1.23302\n"
"master agentx\n"
"agentXSocket tcp:127.0.0.1:705\n"
msgstr ""
"# 将LINBIT ID添加到系统视图并启用agentx\n"
"view    systemview    included   .1.3.6.1.4.1.23302\n"
"master agentx\n"
"agentXSocket tcp:127.0.0.1:705\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:497
msgid ""
"Verify that the view name that you use matches a view name that is "
"configured appropriately in the SNMP configuration file. The example above "
"shows `systemview` as the view name used in a RHEL 8 system. For Ubuntu, the "
"view name could be different, for example, in Ubuntu 22.04 it is "
"`systemonly`."
msgstr ""
"验证您使用的视图名称是否与 SNMP 配置文件中正确配置的视图名称匹配。上面的示例"
"显示“systemview”作为 RHEL 8 系统中使用的视图名称。对于 Ubuntu，视图名称可能不"
"同，例如，在 Ubuntu 22.04 中，它是“systemonly”。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:500
msgid ""
"Next, enable and start the service (or restart the service if it was already "
"enabled and running):"
msgstr ""
"接下来，启用并启动该服务（如果该服务已启用并正在运行，则重新启动该服务）："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:503
#, no-wrap
msgid "# systemctl enable --now snmpd.service\n"
msgstr "# systemctl enable --now snmpd.service\n"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:506
#, no-wrap
msgid "Editing the AgentX Plugin Configuration Snippet File"
msgstr "编辑 AgentX 插件配置片段文件"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:510
msgid ""
"The AgentX plugin needs only minimal configuration in a DRBD Reactor snippet "
"file. Edit the configuration snippet file by entering the following command:"
msgstr ""
"AgentX 插件只需要在 DRBD Reactor 片段文件中进行最少的配置。输入以下命令编辑配"
"置片段文件："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:513
#, no-wrap
msgid "# drbd-reactorctl edit -t agentx agentx\n"
msgstr "# drbd-reactorctl edit -t agentx agentx\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:516
msgid "Then add the following lines:"
msgstr "然后添加以下行："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:523
#, no-wrap
msgid ""
"[[agentx]]\n"
"address = \"localhost:705\"\n"
"cache-max = 60 # seconds\n"
"agent-timeout = 60 # seconds snmpd waits for an answer\n"
"peer-states = true # include peer connection and disk states\n"
msgstr ""
"[[agentx]]\n"
"address = \"localhost:705\"\n"
"cache-max = 60 # seconds\n"
"agent-timeout = 60 # seconds snmpd waits for an answer\n"
"peer-states = true # include peer connection and disk states\n"

#. type: delimited block =
#: UG9/en/drbd-reactor.adoc:530
msgid ""
"If you use the `drbd-reactorctl edit` command to edit a configuration "
"snippet file, DRBD Reactor will reload the service if needed. If you are "
"copying a previously edited snippet file to another node, you will need to "
"reload the DRBD Reactor service on that node, by entering:"
msgstr ""
"如果您使用“drbd-reactorctl edit”命令编辑配置片段文件，DRBD Reactor 将在需要时"
"重新加载服务。如果要将之前编辑的代码片段文件复制到另一个节点，则需要在该节点"
"上重新加载 DRBD Reactor 服务，方法是输入："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:533 UG9/en/drbd-reactor.adoc:827
#, no-wrap
msgid "# systemctl reload drbd-reactor.service\n"
msgstr "# systemctl reload drbd-reactor.service\n"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:537
#, no-wrap
msgid "Verifying the AgentX Plugin Operation"
msgstr "验证 AgentX 插件操作"

#. type: delimited block =
#: UG9/en/drbd-reactor.adoc:541
msgid ""
"Before verifying the AgentX plugin operation, first verify that the SNMP "
"service exposes a standard, preinstalled MIB, by entering the following "
"command:"
msgstr ""
"在验证 AgentX 插件操作之前，首先通过输入以下命令验证 SNMP 服务是否公开标准的"
"预安装 MIB："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:546
#, no-wrap
msgid ""
"# snmpwalk -Os -c public -v 2c localhost iso.3.6.1.2.1.1.1\n"
"sysDescr.0 = STRING: Linux linstor-1 5.14.0-284.30.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Fri Aug 25 09:13:12 EDT 2023 x86_64\n"
msgstr ""
"# snmpwalk -Os -c public -v 2c localhost iso.3.6.1.2.1.1.1\n"
"sysDescr.0 = STRING: Linux linstor-1 5.14.0-284.30.1.el9_2.x86_64 #1 SMP PREEMPT_DYNAMIC Fri Aug 25 09:13:12 EDT 2023 x86_64\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:550
msgid ""
"Next, verify that the AgentX plugin is shown in the output of a `drbd-"
"reactorctl status` command."
msgstr ""
"接下来，验证 AgentX 插件是否显示在“drbd-reactorctl status”命令的输出中。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:555
#, no-wrap
msgid ""
"/etc/drbd-reactor.d/agentx.toml:\n"
"AgentX: connecting to main agent at localhost:705\n"
"[...]\n"
msgstr "/etc/drbd-reactor.d/agentx.toml：AgentX：连接到本地主机的主代理：705 [...]\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:558
msgid ""
"Next, show the LINBIT MIB table structure by entering the following command:"
msgstr "接下来，通过输入以下命令显示 LINBIT MIB 表结构："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:561
#, no-wrap
msgid "# snmptranslate -Tp -IR -mALL linbit\n"
msgstr "# snmptranslate -Tp -IR -mALL linbit\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:567
msgid ""
"Finally, you can use an `snmptable` command to show a table of the values "
"held in the MIB, particular to your current DRBD setup and resources. The "
"example command below starts showing the values for your DRBD resources at "
"the `enterprises.linbit.1.2` (`enterprises.linbit.drbdData.drbdTable`) "
"object identifier (OID) within the LINBIT MIB."
msgstr ""
"最后，您可以使用“snmptable”命令来显示 MIB 中保存的值表，特别是您当前的 DRBD "
"设置和资源。下面的示例命令开始显示 LINBIT MIB 中“enterprises."
"linbit.1.2”（“enterprises.linbit.drbdData.drbdTable”）对象标识符 (OID) 处的 "
"DRBD 资源的值。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:570
#, no-wrap
msgid "# snmptable -m ALL -v 2c -c public localhost enterprises.linbit.1.2 | less -S\n"
msgstr "# snmptable -m ALL -v 2c -c 公共本地主机 enterprise.linbit.1.2 |少-S\n"

#. type: Title =====
#: UG9/en/drbd-reactor.adoc:573
#, no-wrap
msgid "Using the AgentX Plugin With LINSTOR"
msgstr "将 AgentX 插件与 LINSTOR 结合使用"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:579
msgid ""
"If you are using DRBD Reactor and its AgentX plugin to work with LINSTOR(R)-"
"created DRBD resources, note that these DRBD resources will start from minor "
"number 1000, rather than 1. So, for example, to get the DRBD resource name "
"of the first LINSTOR-created resource on a particular node, enter the "
"following command:"
msgstr ""
"如果您使用 DRBD Reactor 及其 AgentX 插件来处理 LINSTOR(R) 创建的 DRBD 资源，"
"请注意这些 DRBD 资源将从次要编号 1000 开始，而不是 1。因此，例如，要获取 "
"DRBD 资源名称要在特定节点上创建第一个 LINSTOR 创建的资源，请输入以下命令："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:583
#, no-wrap
msgid ""
"# snmpget -m ALL -v 2c -c public localhost .1.3.6.1.4.1.23302.1.2.1.2.1000\n"
"LINBIT-DRBD-MIB::ResourceName.1000 = STRING: linstor_db\n"
msgstr ""
"# snmpget -m ALL -v 2c -c public localhost .1.3.6.1.4.1.23302.1.2.1.2.1000\n"
"LINBIT-DRBD-MIB::ResourceName.1000 = STRING: linstor_db\n"

#. type: Title ===
#: UG9/en/drbd-reactor.adoc:586
#, no-wrap
msgid "Using the DRBD Reactor CLI Utility"
msgstr "使用 DRBD Reactor CLI 实用程序"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:590
msgid ""
"You can use the DRBD Reactor CLI utility, `drbd-reactorctl`, to control the "
"DRBD Reactor daemon and its plugins."
msgstr ""
"您可以使用 DRBD Reactor CLI 实用程序 `drbd-reactorctl` 来控制 DRBD Reactor 守"
"护进程及其插件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:594
msgid ""
"This utility only operates on plugin snippets. Any existing plugin "
"configurations in the main configuration file (not advised nor supported) "
"should be moved to snippet files within the snippets directory."
msgstr ""
"该实用程序仅适用于插件片段。主配置文件中的任何现有插件配置（不建议也不支持）"
"应移动到 snippets 目录中的 snippet 文件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:596
msgid "With the `drbd-reactorctl` utility, you can:"
msgstr "使用“drbd-reactorctl”实用程序，您可以："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:599
msgid ""
"Get the status of the DRBD Reactor daemon and enabled plugins, by using the "
"`drbd-reactorctl status` command."
msgstr ""
"使用“drbd-reactorctl status”命令获取 DRBD Reactor 守护进程和启用的插件的状"
"态。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:602
msgid ""
"Edit an existing or create a new plugin configuration, by using the `drbd-"
"reactorctl edit -t <plugin_type> <plugin_file>` command."
msgstr ""
"使用 `drbd-reactorctl edit -t 编辑现有插件配置或创建新插件配置"
"<plugin_type><plugin_file>` 命令。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:605
msgid ""
"Display the TOML configuration of a given plugin, by using the `drbd-"
"reactorctl cat <plugin_file>` command."
msgstr ""
"使用 `drbd-reactorctl cat 显示给定插件的 TOML 配置<plugin_file>` 命令。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:608
msgid ""
"Enable or disable a plugin, by using the `drbd-reactorctl enable|disable "
"<plugin_file>` command."
msgstr ""
"使用 `drbd-reactorctl enable|disable 启用或禁用插件<plugin_file>` 命令。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:611
msgid ""
"Evict a promoter plugin resource from the node, by using the `drbd-"
"reactorctl evict <plugin_file>` command."
msgstr ""
"使用“drbd-reactorctl evict”从节点中驱逐启动子插件资源<plugin_file>` 命令。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:615
msgid ""
"Restart specified plugins (or the DRBD Reactor daemon, if no plugins "
"specified) by using the `drbd-reactorctl restart <plugin_file>` command. "
"Remove an existing plugin and restart the daemon, by using the `drbd-"
"reactorctl rm <plugin_file>` command."
msgstr ""
"使用 `drbd-reactorctl restart 重新启动指定的插件（或 DRBD Reactor 守护进程，"
"如果没有指定插件）<plugin_file> ` 命令。使用 `drbd-reactorctl rm 删除现有插件"
"并重新启动守护进程<plugin_file>` 命令。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:618
msgid ""
"List the activated plugins, or optionally list disabled plugins, by using "
"the `drbd-reactorctl ls [--disabled]` command."
msgstr ""
"使用“drbd-reactorctl ls [--disabled]”命令列出已激活的插件，或可选地列出已禁用"
"的插件。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:621
msgid ""
"For greater control of some of the above actions, there are additional "
"options available. The `drbd-reactorctl` man page has more details and "
"syntax information."
msgstr ""
"为了更好地控制上述某些操作，还有其他可用选项。 `drbd-reactorctl` 手册页包含更"
"多详细信息和语法信息。"

#. type: Title ====
#: UG9/en/drbd-reactor.adoc:623
#, no-wrap
msgid "Pacemaker CRM Shell Commands and Their DRBD Reactor Client Equivalents"
msgstr "Pacemaker CRM Shell 命令及其 DRBD Reactor 客户端等效项"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:627
msgid ""
"The following table shows some common CRM tasks and the corresponding "
"Pacemaker CRM shell and the equivalent DRBD Reactor client commands."
msgstr ""
"下表显示了一些常见的 CRM 任务以及相应的 Pacemaker CRM shell 和等效的 DRBD "
"Reactor 客户端命令。"

#. type: Table
#: UG9/en/drbd-reactor.adoc:643
#, no-wrap
msgid ""
"|CRM task|Pacemaker CRM shell command|DRBD Reactor client command\n"
"\n"
"|Get status\n"
"|`crm_mon`\n"
"|`drbd-reactorctl status`\n"
"\n"
"|Migrate away\n"
"|`crm resource migrate`\n"
"|`drbd-reactorctl evict`\n"
"\n"
"|Unmigrate\n"
"|`crm resource unmigrate`\n"
"|Unnecessary\n"
msgstr "|CRM 任务|Pacemaker CRM shell 命令|DRBD Reactor 客户端命令 |获取状态 |`crm_mon` |`drbd-reactorctl status` |迁移离开 |`crm 资源迁移` |`drbd-reactorctl evict` |取消迁移 |`crm 资源取消迁移` |不必要\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:654
msgid ""
"A DRBD Reactor client command that is equivalent to `crm resource unmigrate` "
"is unnecessary because DRBD Reactor's promoter plugin evicts a DRBD resource "
"in the moment, but it does not prevent the resource from failing back to the "
"node it was evicted from later, should the situation arise. In contrast, the "
"CRM shell `migrate` command inserts a permanent constraint into the cluster "
"information base (CIB) that prevents the resource from running on the node "
"the command is run on. The CRM shell `unmigrate` command is a manual "
"intervention that removes the constraint and allows the resource to fail "
"back to the node the command is run on. A forgotten `unmigrate` command can "
"have dire consequences the next time the node might be needed to host the "
"resource during an HA event."
msgstr ""
"相当于“crm resources unmigrate”的 DRBD Reactor 客户端命令是不必要的，因为 "
"DRBD Reactor 的启动子插件会立即驱逐 DRBD 资源，但它不会阻止资源故障恢复到稍后"
"被驱逐的节点（如果情况出现。相比之下，CRM shell“migrate”命令会在集群信息库 "
"(CIB) 中插入永久约束，以防止资源在运行该命令的节点上运行。 CRM "
"shell“unmigrate”命令是一种手动干预，可消除约束并允许资源故障回复到运行该命令"
"的节点。下次在 HA 事件期间可能需要节点托管资源时，忘记“unmigrate”命令可能会产"
"生可怕的后果。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:660
msgid ""
"If you need to prevent failback to a particular node, you can evict it by "
"using the DRBD Reactor client with the `evict --keep-masked` command and "
"flag. This prevents failback, until the node reboots and the flag gets "
"removed. You can remove the flag sooner than a reboot would, by using the "
"`drbd-reactorctl evict --unmask` command. This command would be the "
"equivalent to CRM shell's `unmigrate` command."
msgstr ""
"如果需要防止故障回复到特定节点，可以使用 DRBD Reactor 客户端以及“evict --"
"keep-masked”命令和标志来逐出该节点。这可以防止故障回复，直到节点重新启动并且"
"标志被删除。您可以使用“drbd-reactorctl evict --unmask”命令比重新启动更快地删"
"除该标志。此命令相当于 CRM shell 的“unmigrate”命令。"

#. type: Title ===
#: UG9/en/drbd-reactor.adoc:662
#, no-wrap
msgid "Using DRBD Reactor’s Promoter Plugin to Create a Highly Available File System Mount"
msgstr "使用DRBD Reactor的Promoter插件创建高可用的文件系统挂载"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:666
msgid ""
"In this example, you will use DRBD Reactor and the promoter plugin to create "
"a highly available file system mount within a cluster."
msgstr ""
"在此示例中，您将使用 DRBD Reactor 和启动子插件在集群内创建高可用的文件系统挂"
"载。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:668 UG9/en/drbd-reactor.adoc:807
msgid "Prerequisites:"
msgstr "先决条件："

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:670
msgid "A directory `/mnt/test` created on all of your cluster nodes"
msgstr "在所有集群节点上创建的目录“/mnt/test”"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:673
msgid ""
"A DRBD configured resource named _ha-mount_ that is backed by a DRBD device "
"on all nodes. The configuration examples that follow use `/dev/drbd1000`."
msgstr ""
"名为 _ha-mount_ 的 DRBD 配置资源，由所有节点上的 DRBD 设备支持。以下配置示例"
"使用“/dev/drbd1000”。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:678
msgid ""
"The Cluster Labs \"Filesystem\" OCF resource agent, available through "
"https://github.com/ClusterLabs/resource-agents/blob/main/heartbeat/"
"Filesystem[Cluster Lab's `resource-agents` GitHub] repository, should be "
"present in the `/usr/lib/ocf/resource.d/heartbeat` directory"
msgstr ""
"Cluster Labs“文件系统”OCF 资源代理（可通过 https://github.com/ClusterLabs/"
"resource-agents/blob/main/heartbeat/Filesystem[Cluster Lab 的 `resource-"
"agents` GitHub] 存储库获取）应存在于`/usr/lib/ocf/resource.d/heartbeat` 目录"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:687
msgid ""
"The DRBD resource, _ha-mount_, should have the following settings configured "
"in its DRBD resource configuration file:"
msgstr "DRBD 资源 _ha-mount_ 应在其 DRBD 资源配置文件中配置以下设置："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:699
#, no-wrap
msgid ""
"resource ha-mount {\n"
"  options {\n"
"    auto-promote no;\n"
"    quorum majority;\n"
"    on-no-quorum suspend-io;\n"
"    on-no-data-accessible suspend-io;\n"
"    [...]\n"
"  }\n"
"[...]\n"
"}\n"
msgstr ""
"resource ha-mount {\n"
"  options {\n"
"    auto-promote no;\n"
"    quorum majority;\n"
"    on-no-quorum suspend-io;\n"
"    on-no-data-accessible suspend-io;\n"
"    [...]\n"
"  }\n"
"[...]\n"
"}\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:702
msgid "First, make one of your nodes _Primary_ for the _ha-mount_ resource."
msgstr "首先，将 _ha-mount_ 资源的节点之一设为_Primary_。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:705
#, no-wrap
msgid "# drbdadm primary ha-mount\n"
msgstr "# drbdadm primary ha-mount\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:709
msgid ""
"Then create a file system on the DRBD backed device. The ext4 file system is "
"used in this example."
msgstr "然后在 DRBD 支持的设备上创建文件系统。本例中使用的是 ext4 文件系统。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:712
#, no-wrap
msgid "# mkfs.ext4 /dev/drbd1000\n"
msgstr "# mkfs.ext4 /dev/drbd1000\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:716
msgid ""
"Make the node _Secondary_ because after further configurations, DRBD Reactor "
"and the Promoter plugin will control promoting nodes."
msgstr ""
"将节点设置为_Secondary_，因为在进一步配置后，DRBD Reactor 和Promoter 插件将控"
"制升级节点。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:719
#, no-wrap
msgid "# drbdadm secondary ha-mount\n"
msgstr "# drbdadm secondary ha-mount\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:722
msgid ""
"On all nodes that should be able to mount the DRBD backed device, create a "
"systemd unit file:"
msgstr ""
"在应该能够挂载 DRBD 支持的设备的所有节点上，创建一个 systemd 单元文件："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:727
#, no-wrap
msgid ""
"# cat << EOF > /etc/systemd/system/mnt-test.mount\n"
"[Unit]\n"
"Description=Mount /dev/drbd1000 to /mnt/test\n"
msgstr ""
"# cat << EOF > /etc/systemd/system/mnt-test.mount\n"
"[Unit]\n"
"Description=Mount /dev/drbd1000 to /mnt/test\n"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:733
#, no-wrap
msgid ""
"[Mount]\n"
"What=/dev/drbd1000\n"
"Where=/mnt/test\n"
"Type=ext4\n"
"EOF\n"
msgstr ""
"[Mount]\n"
"What=/dev/drbd1000\n"
"Where=/mnt/test\n"
"Type=ext4\n"
"EOF\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:739
msgid ""
"The systemd unit file name must match the mount location value given by the "
"“Where=” directive, using systemd escape logic. In the example above, `mnt-"
"test.mount` matches the mount location given by `Where=/mnt/test`. You can "
"use the command `systemd-escape -p --suffix=mount /my/mount/point` to "
"convert your mount point to a systemd unit file name."
msgstr ""
"systemd 单元文件名必须使用 systemd 转义逻辑与“Where=”指令给出的安装位置值匹"
"配。在上面的示例中，“mnt-test.mount”与“Where=/mnt/test”给出的安装位置匹配。您"
"可以使用命令“systemd-escape -p --suffix=mount /my/mount/point”将挂载点转换为 "
"systemd 单元文件名。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:742
msgid ""
"Next, on the same nodes as the previous step, create a configuration file "
"for the DRBD Reactor promoter plugin:"
msgstr ""
"接下来，在与上一步相同的节点上，为 DRBD Reactor 启动子插件创建一个配置文件："

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:754
#, no-wrap
msgid ""
"# cat << EOF > /etc/drbd-reactor.d/ha-mount.toml\n"
"[[promoter]]\n"
"id = \"ha-mount\"\n"
"[promoter.resources.ha-mount]\n"
"start = [\n"
"\"\"\"ocf:heartbeat:Filesystem fs_test device=/dev/drbd1000 \\\n"
"directory=/mnt/test fstype=ext4 run_fsck=no\"\"\"\n"
"]\n"
"on-drbd-demote-failure = \"reboot\"\n"
"EOF\n"
msgstr ""
"# cat << EOF > /etc/drbd-reactor.d/ha-mount.toml\n"
"[[promoter]]\n"
"id = \"ha-mount\"\n"
"[promoter.resources.ha-mount]\n"
"start = [\n"
"\"\"\"ocf:heartbeat:Filesystem fs_test device=/dev/drbd1000 \\\n"
"directory=/mnt/test fstype=ext4 run_fsck=no\"\"\"\n"
"]\n"
"on-drbd-demote-failure = \"reboot\"\n"
"EOF\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:762
msgid ""
"This promoter plugin configuration uses a start list of services that "
"specifies an OCF resource agent for the file system found at your HA mount "
"point. By using this particular resource agent, you can circumvent "
"situations where systemd might not know about certain users and processes "
"that might hold the mount point open and prevent it from unmounting. This "
"could happen if you specified a systemd mount unit for the mount point, for "
"example, `start = [\"mnt-test.mount\"]`, rather than using the OCF "
"Filesystem resource agent."
msgstr ""
"此启动子插件配置使用服务的启动列表，该列表为在 HA 挂载点找到的文件系统指定 "
"OCF 资源代理。通过使用这个特定的资源代理，您可以避免 systemd 可能不知道某些用"
"户和进程可能会保持挂载点打开并阻止其卸载的情况。如果您为挂载点指定了 systemd "
"挂载单元（例如 start = [&quot;mnt-test.mount&quot;]），而不是使用 OCF 文件系"
"统资源代理，则可能会发生这种情况。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:765
msgid ""
"To apply the configuration, enable and start the DRBD Reactor service on all "
"nodes. If the DRBD Reactor service is already running, reload it instead."
msgstr ""
"要应用配置，请在所有节点上启用并启动 DRBD Reactor 服务。如果 DRBD Reactor 服"
"务已在运行，请重新加载它。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:768
#, no-wrap
msgid "# systemctl enable drbd-reactor.service --now\n"
msgstr "# systemctl enable drbd-reactor.service --now\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:772
msgid ""
"Next, verify which cluster node is in the _Primary_ role for the _ha-mount_ "
"resource and has the backing device mounted."
msgstr ""
"接下来，验证哪个集群节点处于 _ha-mount_ 资源的 _Primary_ 角色并已安装支持设"
"备。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:775
#, no-wrap
msgid "# drbd-reactorctl status ha-mount\n"
msgstr "# drbd-reactorctl status ha-mount\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:779
msgid ""
"Test a simple failover situation on the _Primary_ node by using the DRBD "
"Reactor CLI utility to disable the _ha-mount_ configuration."
msgstr ""
"使用 DRBD Reactor CLI 实用程序禁用 _ha-mount_ 配置，在 _Primary_ 节点上测试简"
"单的故障转移情况。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:782
#, no-wrap
msgid "# drbd-reactorctl disable --now ha-mount\n"
msgstr "# drbd-reactorctl disable --now ha-mount\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:786
msgid ""
"Run the DRBD Reactor status command again to verify that another node is now "
"in the _Primary_ role and has the file system mounted."
msgstr ""
"再次运行 DRBD Reactor status 命令以验证另一个节点现在是否处于 _Primary_ 角色"
"并已安装文件系统。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:788
msgid ""
"After testing failover, you can enable the configuration on the node you "
"disabled it on earlier."
msgstr "测试故障转移后，您可以在之前禁用的节点上启用该配置。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:791
#, no-wrap
msgid "# drbd-reactorctl enable ha-mount\n"
msgstr "# drbd-reactorctl enable ha-mount\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:797
msgid ""
"As a next step, you may want to read the https://linbit.com/drbd-user-guide/"
"linstor-guide-1_0-en/#s-linstor_ha[LINSTOR User's Guide section on creating "
"a highly available LINSTOR cluster]. There, DRBD Reactor is used to manage "
"the LINSTOR Controller as a service so that it is highly available within "
"your cluster."
msgstr ""
"作为下一步，您可能需要阅读 https://linbit.com/drbd-user-guide/linstor-"
"guide-1_0-en/#s-linstor_ha[LINSTOR 用户指南中有关创建高可用 LINSTOR 集群的部"
"分] 。在那里，DRBD Reactor 用于将 LINSTOR 控制器作为服务进行管理，以便它在集"
"群中具有高可用性。"

#. type: Title ===
#: UG9/en/drbd-reactor.adoc:799
#, no-wrap
msgid "Configuring DRBD Reactor's Prometheus Plugin"
msgstr "Configuring DRBD Reactor's Prometheus Plugin"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:805
msgid ""
"DRBD Reactor’s Prometheus monitoring plugin acts as a Prometheus compatible "
"endpoint for DRBD resources and exposes various DRBD metrics. You can find a "
"list of the available metrics in https://github.com/LINBIT/drbd-reactor/blob/"
"master/doc/prometheus.md[the documentation folder] in the project’s GitHub "
"repository."
msgstr ""
"DRBD Reactor 的 Prometheus 监控插件充当 DRBD 资源的 Prometheus 兼容端点，并公"
"开各种 DRBD 指标。您可以在项目 GitHub 存储库的 https://github.com/LINBIT/"
"drbd-reactor/blob/master/doc/prometheus.md[文档文件夹] 中找到可用指标的列表。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:809
msgid "Prometheus is installed with its service enabled and running."
msgstr "Prometheus 已安装，其服务已启用并正在运行。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:811
msgid "Grafana is installed with its service enabled and running."
msgstr "Grafana 已安装，其服务已启用并正在运行。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:814
msgid ""
"To enable the Prometheus plugin, create a simple configuration file snippet "
"on all DRBD Reactor nodes that you are monitoring."
msgstr ""
"要启用 Prometheus 插件，请在您正在监控的所有 DRBD Reactor 节点上创建一个简单"
"的配置文件片段。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:821
#, no-wrap
msgid ""
"# cat << EOF > /etc/drbd-reactor.d/prometheus.toml\n"
"[[prometheus]]\n"
"enums = true\n"
"address = \"0.0.0.0:9942\"\n"
"EOF\n"
msgstr ""
"# cat << EOF > /etc/drbd-reactor.d/prometheus.toml\n"
"[[prometheus]]\n"
"enums = true\n"
"address = \"0.0.0.0:9942\"\n"
"EOF\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:824
msgid "Reload the DRBD Reactor service on all nodes that you are monitoring."
msgstr "在您正在监视的所有节点上重新加载 DRBD Reactor 服务。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:833
msgid ""
"Add the following DRBD Reactor monitoring endpoint to your Prometheus "
"configuration file’s `scrape_configs` section. Replace “node-x” in the "
"`targets` lines below with either hostnames or IP addresses for your DRBD "
"Reactor monitoring endpoint nodes. Hostnames must be resolvable from your "
"Prometheus monitoring node."
msgstr ""
"将以下 DRBD Reactor 监控端点添加到 Prometheus 配置文件的 `scrape_configs` 部"
"分。将下面“targets”行中的“node-x”替换为 DRBD Reactor 监视端点节点的主机名或 "
"IP 地址。主机名必须可从 Prometheus 监控节点解析。"

#. type: delimited block -
#: UG9/en/drbd-reactor.adoc:847
#, no-wrap
msgid ""
"  - job_name: drbd_reactor_endpoint\n"
"    static_configs:\n"
"      - targets: ['node-0:9942']\n"
"        labels:\n"
"          instance: 'node-0'\n"
"      - targets: ['node-1:9942']\n"
"        labels:\n"
"          instance: 'node-1'\n"
"      - targets: ['node-2:9942']\n"
"        labels:\n"
"          instance: 'node-2'\n"
"       [...]\n"
msgstr ""
"  - job_name: drbd_reactor_endpoint\n"
"    static_configs:\n"
"      - targets: ['node-0:9942']\n"
"        labels:\n"
"          instance: 'node-0'\n"
"      - targets: ['node-1:9942']\n"
"        labels:\n"
"          instance: 'node-1'\n"
"      - targets: ['node-2:9942']\n"
"        labels:\n"
"          instance: 'node-2'\n"
"       [...]\n"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:851
msgid ""
"Then, assuming it is already enabled and running, reload the Prometheus "
"service by entering `sudo systemctl reload prometheus.service`."
msgstr ""
"然后，假设它已启用并正在运行，请输入“sudo systemctl reload prometheus."
"service”重新加载 Prometheus 服务。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:855
msgid ""
"Next, you can open your Grafana server’s URL with a web browser. If the "
"Grafana server service is running on the same node as your Prometheus "
"monitoring service, the URL would look like: `http://"
"<node_IP_address_or_hostname>:3000`."
msgstr ""
"接下来，您可以使用 Web 浏览器打开 Grafana 服务器的 URL。如果 Grafana 服务器服"
"务与 Prometheus 监控服务在同一节点上运行，则 URL 将如下所示：`http://"
"<node_IP_address_or_hostname> ：3000`。"

#. type: Plain text
#: UG9/en/drbd-reactor.adoc:862
msgid ""
"You can then log into the Grafana server web UI, add a Prometheus data "
"source, and then add or import a Grafana dashboard that uses your Prometheus "
"data source. An example dashboard is available at the https://grafana.com/"
"grafana/dashboards/14339[Grafana Labs dashboards marketplace]. An example "
"dashboard is also available as a downloadable JSON file https://raw."
"githubusercontent.com/LINBIT/drbd-reactor/master/example/grafana-dashboard."
"json[here], at the DRBD Reactor GitHub project site."
msgstr ""
"然后，您可以登录 Grafana 服务器 Web UI，添加 Prometheus 数据源，然后添加或导"
"入使用 Prometheus 数据源的 Grafana 仪表板。 https://grafana.com/grafana/"
"dashboards/14339[Grafana Labs 仪表板市场] 提供了示例仪表板。示例仪表板还可以"
"作为可下载的 JSON 文件 https://raw.githubusercontent.com/LINBIT/drbd-reactor/"
"master/example/grafana-dashboard.json[此处]，位于 DRBD Reactor GitHub 项目站"
"点。"
