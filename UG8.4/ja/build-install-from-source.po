# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-06-06 08:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#, no-wrap
msgid "Building and installing DRBD from source"
msgstr "ソースからのDRBDの構築とインストール"

#. type: Title ===
#, no-wrap
msgid "Downloading the DRBD sources"
msgstr "DRBDソースのダウンロード"

#. type: Plain text
msgid ""
"The source tarballs for both current and historic DRBD releases are "
"available for download from http://oss.linbit.com/drbd/. Source tarballs, by "
"convention, are named `drbd-x.y.z.tar.gz`, where x, y and z refer to the "
"major, minor and bugfix release numbers."
msgstr ""
"DRBDの最新リリースと過去のリリースのソースtarファイルは、 http://oss.linbit."
"com/drbd/ からダウンロードできます。ソースtarファイルは慣例に従い `drbd-x.y."
"z.tar.gz` という名前です。x、y、zは、それぞれメジャーリリース、マイナーリリー"
"ス、バグフィックスリリースの番号です。"

#. type: Plain text
msgid ""
"DRBD's compressed source archive is less than half a megabyte in size. To "
"download and uncompress into your current working directory, issue the "
"following commands:"
msgstr ""
"ソースtarファイルをダウンロードする際のDRBDの圧縮ソースアーカイブのサイズは"
"0.5MB未満です。現在の作業用ディレクトリにダウンロードして圧縮解除するには、次"
"のコマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ wget http://oss.linbit.com/drbd/8.4/drbd-latest.tar.gz\n"
"$ tar -xzf drbd-latest.tar.gz\n"
msgstr ""
"$ wget http://oss.linbit.com/drbd/8.4/drbd-latest.tar.gz\n"
"$ tar -xzf drbd-latest.tar.gz\n"

#. type: Plain text
msgid ""
"The use of `wget` for downloading the source tarball is purely an example. "
"Of course, you may use any downloader you prefer."
msgstr ""
"ソースtarファイルをダウンロードする際の `wget` の使用は単に一例です。好みのダ"
"ウンローダを使用することができます。"

#. type: Plain text
msgid ""
"It is recommended to uncompress DRBD into a directory normally used for "
"keeping source code, such as `/usr/src` or `/usr/local/src`. The examples in "
"this guide assume `/usr/src`."
msgstr ""
"`/usr/src` や `/usr/local/src` など、通常、ソースコードを格納するディレクトリ"
"にDRBDを展開することをお勧めします。本書の例では `/usr/src` を使用していま"
"す。"

#. type: Title ===
#, no-wrap
msgid "Checking out sources from the public DRBD source repository"
msgstr "公開DRBDソースリポジトリからソースをチェックアウトする"

#. type: Plain text
msgid ""
"DRBD's source code is kept in a public http://git.or.cz[Git] repository, "
"which may be browsed on-line at http://git.drbd.org/. To check out a "
"specific DRBD release from the repository, you must first _clone_ your "
"preferred DRBD branch. In this example, you would clone from the DRBD 8.4 "
"branch:"
msgstr ""
"DRBDのソースコードは公開 http://git.or.cz[Git] リポジトリに置かれています。こ"
"れは http://git.drbd.org/ でオンラインブラウズできます。リポジトリから特定の"
"DRBDリリースをチェックアウトするには、まず、好みのDRBDブランチを複製します。"
"この例では、DRBD 8.4ブランチから複製します。"

#. type: delimited block -
#, no-wrap
msgid "$ git clone git://git.drbd.org/drbd-8.4.git\n"
msgstr "$ git clone git://git.drbd.org/drbd-8.4.git\n"

#. type: Plain text
msgid ""
"If your firewall does not permit TCP connections to port 9418, you may also "
"check out via HTTP (please note that using Git via HTTP is much slower than "
"its native protocol, so native Git is usually preferred whenever possible):"
msgstr ""
"ファイアウォールがポート9418へのTCP接続を許可しないように設定されている場合"
"は、HTTP経由でチェックアウトすることもできます(HTTP経由でGitを使う場合はGitネ"
"イティブのプロトコルよりも遅くなる点に注意してください。そのため可能な限りネ"
"イティブプロトコル使用を推奨します)。"

#. type: delimited block -
#, no-wrap
msgid "$ git clone http://git.drbd.org/drbd-8.4.git\n"
msgstr "$ git clone http://git.drbd.org/drbd-8.4.git\n"

#. type: Plain text
msgid ""
"Either command will create a Git checkout subdirectory, named `drbd-8.4`. To "
"now move to a source code state equivalent to a specific DRBD release, issue "
"the following commands:"
msgstr ""
"いずれのコマンドの場合も、 `drbd-8.4` というGitチェックアウト用サブディレクト"
"リが作成されます。特定のDRBDリリースに相当するソースコードの状態に移動するに"
"は、次のコマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd-8.4\n"
"$ git checkout drbd-8.4.<x>\n"
msgstr ""
"$ cd drbd-8.4\n"
"$ git checkout drbd-8.4.<x>\n"

#. type: Plain text
msgid "... where _<x>_ refers to the DRBD point release you wish to build."
msgstr "... ここで、 _<x>_ は構築するDRBDのポイントリリースです。"

#. type: Plain text
msgid ""
"The checkout directory will now contain the equivalent of an unpacked DRBD "
"source tarball of a that specific version, enabling you to build DRBD from "
"source."
msgstr ""
"これで、特定のバージョンの展開されたDRBDソースtarファイルと同等のものがチェッ"
"クアウト用ディレクトリに格納され、ソースからDRBDを構築できるようになります。"

#. type: Plain text
msgid ""
"There are actually two minor differences between an unpacked source tarball "
"and a Git checkout of the same release:"
msgstr ""
"同じリリースの展開されたソースtarファイルとGitチェックアウトには、以下に示す2"
"つの小さな違いがあります。"

#. type: Plain text
msgid ""
"The Git checkout contains a `debian/` subdirectoy, while the source tarball "
"does not. This is due to a request from Debian maintainers, who prefer to "
"add their own Debian build configuration to a pristine upstream tarball."
msgstr ""
"Gitチェックアウトには `debian/` サブディレクトリが含まれますが、ソースtarファ"
"イルには含まれません。これは、tarファイルに独自のDebian用ファイル追加したいと"
"いうDebianメンテナからの要求に応じたものです。"

#. type: Plain text
msgid ""
"The source tarball contains preprocessed man pages, the Git checkout does "
"not. Thus, building DRBD from a Git checkout requires a complete Docbook "
"toolchain for building the man pages, while this is not a requirement for "
"building from a source tarball."
msgstr ""
"ソースtarファイルには前もって処理されたmanページが含まれますが、Gitチェックア"
"ウトには含まれません。したがって、GitチェックアウトからDRBDを構築する場合は、"
"manページを構築するための完全なDocbookツールチェーンが必要です。ソースtarファ"
"イルから構築する場合は必要ありません。"

#. type: Title ===
#, no-wrap
msgid "Building DRBD from source"
msgstr "ソースからDRBDを構築する"

#. type: Title ====
#, no-wrap
msgid "Checking build prerequisites"
msgstr "ビルドの前提条件を確認する"

#. type: Plain text
msgid ""
"Before being able to build DRBD from source, your build host must fulfill "
"the following prerequisites:"
msgstr ""
"ソースからDRBDを構築するには、ビルドするホストが次の前提条件を満たす必要があ"
"ります。"

#. type: Plain text
msgid ""
"`make`, `gcc`, the glibc development libraries, and the `flex` scanner "
"generator must be installed."
msgstr ""
"`make` 、 `gcc` 、glibc 開発ライブラリ、 `flex` スキャナジェネレータがインス"
"トールされている必要があります。"

#. type: Plain text
msgid ""
"You should make sure that the `gcc` you use to compile the module is the "
"same which was used to build the kernel you are running. If you have "
"multiple `gcc` versions available on your system, DRBD's build system "
"includes a facility to <link linkend=\"s-build-customcc\">select a specific "
"`gcc` version."
msgstr ""
"モジュールをコンパイルするために使用する `gcc` は、実行中のカーネルを構築した"
"ものと同じバージョンを使用してください。システムに複数バージョンの `gcc` があ"
"る場合でも、DRBDの構築システム<link linkend=\"s-build-customcc\">に特定のバー"
"ジョンの `gcc` を選択する機能が含まれています。"

#. type: Plain text
msgid ""
"For building directly from a git checkout, GNU Autoconf is also required. "
"This requirement does not apply when building from a tarball."
msgstr ""
"git checkoutから直接ビルドする場合は、GNU Autoconfが必要になります。ソースtar"
"ファイルからビルドする場合は必要ありません。"

#. type: Plain text
msgid ""
"If you are running a stock kernel supplied by your distribution, you should "
"install a matching precompiled kernel headers package. These are typically "
"named `kernel-dev`, `kernel-headers`, `linux-headers` or similar. In this "
"case, you can skip <<s-build-prepare-kernel-tree>> and continue with <<s-"
"build-prepare-checkout>>."
msgstr ""
"ディストリビューションが提供するストックカーネルを実行している場合は、合致す"
"るコンパイル済みカーネルヘッダパッケージをインストールする必要があります。こ"
"れらは通常 `kernel-dev,kernel-headers` 、 `linux-headers` のような名前です。"
"この場合は<<s-build-prepare-kernel-tree>>を飛ばして<<s-build-prepare-"
"checkout>>へ進みます。"

#. type: Plain text
msgid ""
"If you are not running a distribution stock kernel (i.e. your system runs on "
"a kernel built from source with a custom configuration), your kernel source "
"files must be installed. Your distribution may provide for this via its "
"package installation mechanism; distribution packages for kernel sources are "
"typically named `kernel-source` or similar."
msgstr ""
"ディストリビューションのストックカーネルを実行していない場合(ソースから構築し"
"たカスタム構成を持つカーネルでシステムが実行されている場合)は、カーネルソース"
"ファイルをインストールする必要があります。ディストリビューションのパッケージ"
"インストールメカニズムにこの機能が含まれている場合があります。カーネルソース"
"のディストリビューションパッケージは一般に `kernel-source` のような名前です。"

#. type: Plain text
msgid ""
"On RPM-based systems, these packages will be named similar to `kernel-source-"
"version.rpm`, which is easily confused with `kernel-version.src.rpm`.  The "
"former is the correct package to install for building DRBD."
msgstr ""
"RPMベースのシステムの場合は、このパッケージは `kernel-source-version.rpm` の"
"ような名前です。 `kernel-version.src.rpm` と紛らわしいので注意してください。"
"DRBDを構築するためにインストールするのは、前者のパッケージです。"

#. type: Plain text
msgid ""
"\"Vanilla\" kernel tarballs from the kernel.org archive are simply named "
"linux-version-tar.bz2 and should be unpacked in `/usr/src/linux-version`, "
"with the symlink `/usr/src/linux` pointing to that directory."
msgstr ""
"kernel.orgアーカイブのVanillaカーネルのtarファイルは、linux-version-tar.bz2と"
"いう名前です。これは、 `/usr/src/linux-version` ,に展開し、シンボリックリン"
"ク `/usr/src/linux` でこのディレクトリを指定するようにします。"

#. type: Plain text
msgid ""
"In this case of building DRBD against kernel sources (not headers), you must "
"continue with <<s-build-prepare-kernel-tree>>."
msgstr ""
"このように、(ヘッダではなく)カーネルソースに対してDRBDを構築する場合は、<<s-"
"build-prepare-kernel-tree>>に進みます。"

#. type: Title ====
#, no-wrap
msgid "Preparing the kernel source tree"
msgstr "カーネルソースツリーの準備"

#. type: Plain text
msgid ""
"To prepare your source tree for building DRBD, you must first enter the "
"directory where your unpacked kernel sources are located. Typically this is "
"`/usr/src/linux-version`, or simply a symbolic link named `/usr/src/linux`:"
msgstr ""
"DRBDを構築するためにソースツリーを準備するには、まず、展開したカーネルソース"
"が置かれたディレクトリに移動します。これは通常は `/usr/src/linux-version` 、"
"または `/usr/src/linux` というシンボリックリンクです。"

#. type: delimited block -
#, no-wrap
msgid "$ cd /usr/src/linux\n"
msgstr "$ cd /usr/src/linux\n"

#. type: Plain text
msgid ""
"The next step is recommended, though not strictly necessary. Be sure to copy "
"your existing `.config` file to a safe location before performing it. This "
"step essentially reverts your kernel source tree to its original state, "
"removing any leftovers from an earlier build or configure run:"
msgstr ""
"次の手順は必須ではありませんが、実行することをお勧めします。この手順を実行す"
"る前に、必ず、既存の `.config` ファイルを安全な場所にコピーしてください。この"
"手順により、カーネルソースツリーを実質的に元の状態に戻し、以前の構築や構成の"
"実行により生成されたものを削除します。"

#. type: delimited block -
#, no-wrap
msgid "$ make mrproper\n"
msgstr "$ make mrproper\n"

#. type: Plain text
msgid ""
"Now it is time to _clone_ your currently running kernel configuration into "
"the kernel source tree. There are a few possible options for doing this:"
msgstr ""
"これで、現在実行中のカーネル構成をカーネルソースツリーに複製することができま"
"す。このときに次のオプションを利用できます。"

#. type: Plain text
msgid ""
"Many reasonably recent kernel builds export the currently-running "
"configuration, in compressed form, via the `/proc` filesystem, enabling you "
"to copy from there:"
msgstr ""
"比較的新しい多くのカーネルビルドでは、現在実行中の構成が圧縮されて `/proc` "
"ファイルシステム経由でエクスポートされるため、コピー可能です。"

#. type: delimited block -
#, no-wrap
msgid "$ zcat /proc/config.gz > .config\n"
msgstr "$ zcat /proc/config.gz > .config\n"

#. type: Plain text
msgid ""
"SUSE kernel Makefiles include a `cloneconfig` target, so on those systems, "
"you can issue:"
msgstr ""
"SUSEカーネルのMakefileには `cloneconfig` ターゲットが含まれているため、こうし"
"たシステムでは次のコマンドを実行できます。"

#. type: delimited block -
#, no-wrap
msgid "$ make cloneconfig\n"
msgstr "$ make cloneconfig\n"

#. type: Plain text
msgid ""
"Some installs put a copy of the kernel config into `/boot`, which allows you "
"to do this:"
msgstr ""
"インストールによってはカーネル構成が `/boot` にコピーされる場合があります。こ"
"うしたシステムでは次のコマンドを実行できます"

#. type: delimited block -
#, no-wrap
msgid "$ cp /boot/config-`uname -r` .config\n"
msgstr "$ cp /boot/config-`uname -r` .config\n"

#. type: Plain text
msgid ""
"Finally, you may simply use a backup copy of a `.config` file which you know "
"to have been used for building the currently-running kernel."
msgstr ""
"最後に、 `.config` ファイルのバックアップコピーを使用します。これは、現在実行"
"中のカーネルの構築に使用したファイルのコピーです。"

#. type: Title ====
#, no-wrap
msgid "Preparing the DRBD build tree"
msgstr "DRBDビルトツリーの準備"

#. type: Plain text
msgid ""
"Any DRBD compilation requires that you first configure your DRBD source tree "
"with the included `configure` script."
msgstr ""
"DRBDのコンパイルでは、まず `configure` スクリプトに含まれるDRBDソースツリーを"
"設定する必要があります。"

#. type: Plain text
msgid ""
"When building from a git checkout, the `configure` script does not yet "
"exist. You must create it by simply typing `autoconf` at the top of the "
"checkout."
msgstr ""
"git checkoutから直接ビルドする場合は、 `configure` スクリプトは含まれておりま"
"せん。そのため、チェックアウトのトップで、 `autoconf` とタイプし、スクリプト"
"を作成する必要があります。"

#. type: Plain text
msgid ""
"Invoking the configure script with the `--help` option returns a full list "
"of supported options. The table below summarizes the most important ones:"
msgstr ""
"`--help` オプションでサポートされているオプションのリストが表示されます。重要"
"なオプションを表にまとめてあります。"

#. type: Block title
#, no-wrap
msgid "Options supported by DRBD's `configure` script"
msgstr "DRBDの `configure` スクリプトでサポートされているオプション"

#. type: Table
#, no-wrap
msgid ""
"Option;Description;Default;Remarks\n"
"+--prefix+;Installation directory prefix;`/usr/local`;This is the default to maintain Filesystem Hierarchy Standard compatibility for locally installed, unpackaged software. In packaging, this is typically overridden with `/usr`.\n"
"+--localstatedir+;Local state directory;`/usr/local/var`;Even with a default `prefix`, most users will want to override this with `/var`.\n"
"+--sysconfdir+;System configuration directory;`/usr/local/etc`;Even with a default `prefix`, most users will want to override this with\t`/etc`.\n"
"+--with-km+;Build the DRBD kernel module;no;Enable this option when you are building a DRBD kernel module.\n"
"+--with-utils+;Build the DRBD userland utilities;yes;Disable this option when you are building a DRBD kernel module against a new kernel version, and not upgrading DRBD at the same time.\n"
"+--with-heartbeat+;Build DRBD Heartbeat integration;yes;You may disable this option unless you are planning to use DRBD's Heartbeat v1 resource agent or `dopd`.\n"
"+--with-pacemaker+;Build DRBD Pacemaker integration;yes;You may disable this option if you are not planning to use the Pacemaker cluster resource manager.\n"
"+--with-rgmanager+;Build DRBD Red Hat Cluster Suite integration;no;You should enable this option if you are planning to use DRBD with rgmanager, the Red Hat Cluster Suite cluster resource manager. Please note that you will need to pass `--with rgmanager` to `rpmbuild` to actually get the rgmanager-package built.\n"
"+--with-xen+;Build DRBD Xen integration;yes (on x86 architectures);You may disable this option if you are not planning to use the `block-drbd` helper script for Xen integration.\n"
"+--with-bashcompletion+;Build programmable bash completion for `drbdadm`;yes;You may disable this option if you are using a shell other than bash, or if you do not want to utilize programmable completion for the `drbdadm` command.\n"
"+--enable-spec+;Create a distribution specific RPM spec file;no;For package builders only: you may use this option if you want to create an RPM spec file adapted to your distribution. See also <<s-build-rpm>>.\n"
msgstr ""
"Option;Description;Default;Remarks\n"
"`--prefix` ;インストールディレクトリprefix; `/usr/local` ;ソフトウェアがインストールされるディレクトリです。パッケージの場合は、通常/usrに上書きされます。\n"
"`--localstatedir` ;動作状態を記録するディレクトリ; `/usr/local/var` ; `prefix` はデフォルトのままでも、この値を `/var` に書き換えるユーザは多いでしょう。\n"
"`--sysconfdir` ;システム設定ディレクトリ; `/usr/local/etc` ; `prefix` はデフォルトのままでも、この値を `/etc` に書き換えるユーザは多いでしょう。\n"
"`--with-km` ;DRBDカーネルモジュールのビルド;no;DRBDカーネルモジュールをビルドする場合は、このオプションを有効にしてください。\n"
"`--with-utils` ;DRBDユーザ空間ユーティリティのビルド;yes;最新バージョンのカーネル用にDRBDカーネルモジュールをビルドし、その際、DRBDをアップグレードしたくない場合は、このオプションを無効にしてください。\n"
"`--with-heartbeat` ;DRBD Heartbeat統合のビルド;yes;DRBDのHeartbeat v1用リソースエージェントを使用しない、もしくは、 `dopd` を使用しない場合には、このオプションを無効にしてください。\n"
"`--with-pacemaker` ;DRBD Pacemaker統合のビルド;yes;Pacemakerクラスタリソース管理プログラムを使用しない場合には、このオプションを無効にしてください。\n"
"`--with-rgmanager` ;DRBD Red Hat Cluster Suite統合のビルド;no;Red Hat Cluster Suiteクラスタリソース管理システムのrgmanagerを使用しない場合には、このオプションを無効にしてください。実際にrgmanagerパッケージのビルドする際、 `rpmbuild` をパスするには `--with rgmanager` が必要なので注意してください。\n"
"`--with-xen` ;DRBD Xen統合;yes (x86アーキテクチャの場合 );Xen統合で、 `block-drbd` ヘルパースクリプトを使用しない場合には、このオプションを無効にしてください。\n"
"`--with-bashcompletion` ; `drbdadm` に対するbashの自動補完機能をビルドします 。;yes;bash以外のシェルを使う場合、もしくは、 `drbdadm` コマンドに対する自動補完を使用しない場合には、このオプションを無効にしてください。\n"
"`--enable-spec` ;ディストリビューションに対応したRPM specファイルの生成;no;ディストリビューションに対応するRPM specファイルを生成したい場合には、このオプションを有効にしてください。<<s-build-rpm>>もご参照ください。\n"

#. type: Plain text
msgid "Most users will want the following configuration options:"
msgstr "ほとんどのユーザーにとっては以下の設定オプションが必要でしょう。"

#. type: delimited block -
#, no-wrap
msgid "$ ./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc --with-km\n"
msgstr "$ ./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc --with-km\n"

#. type: Plain text
msgid ""
"The configure script will adapt your DRBD build to distribution specific "
"needs. It does so by auto-detecting which distribution it is being invoked "
"on, and setting defaults accordingly. When overriding defaults, do so with "
"caution."
msgstr ""
"configureスクリプトは、DRBDのビルドをディストリビューション特有のニーズに適合"
"させます。起動されると、ディストリビューションに応じて自動で実行され、デフォ"
"ルトに従って設定されます。デフォルト値を書き換える場合には、十分に注意してく"
"ださい。"

#. type: Plain text
msgid ""
"The configure script creates a log file, `config.log`, in the directory "
"where it was invoked. When reporting build issues on the mailing list, it is "
"usually wise to either attach a copy of that file to your email, or point "
"others to a location from where it may be viewed or downloaded."
msgstr ""
"configureスクリプトは、起動されたディレクトリに、ログファイル `config.log` を"
"生成します。ビルドで発生した問題をメーリングリストに報告する際には、そのログ"
"ファイルをメールに添付するか、他の人からもダウンロードできるような状態にして"
"おくとよいでしょう。"

#. type: Title ====
#, no-wrap
msgid "Building DRBD userspace utilities"
msgstr "DRBDユーザ空間ユーティリティのビルド"

#. type: Plain text
msgid ""
"Building userspace utilities requires that you <<s-build-prepare-checkout,"
"configured DRBD with the `--with-utils` option>>, which is enabled by "
"default."
msgstr ""
"ユーザ空間ユーティリティをビルドする際には、DRBDを<<s-build-prepare-"
"checkout,--with-utilsオプション付きでconfigure>>しなければなりません。なお、"
"このオプションはデフォルトで有効になっています。"

#. type: Plain text
msgid ""
"To build DRBD's userspace utilities, invoke the following commands from the "
"top of your DRBD checkout or expanded tarball:"
msgstr ""
"DRBDユーザ空間ユーティリティをビルドするには、DRBDをチェックアウトしたディレ"
"クトリのトップ、もしくは、traballを展開したディレクトリで、次のコマンドを起動"
"します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ make\n"
"$ sudo make install\n"
msgstr ""
"$ make\n"
"$ sudo make install\n"

#. type: Plain text
msgid ""
"This will build the management utilities (`drbdadm`, `drbdsetup`, and "
"`drbdmeta`), and install them in the appropriate locations. Based on the "
"other `--with` options selected during the <<s-build-prepare-checkout,"
"configure stage>>, it will also install scripts to integrate DRBD with other "
"applications."
msgstr ""
"このコマンドにより、管理ユーティリティ( `drbdadm、drbdsetup` または "
"`drbdmeta` )がビルドされ、適切な場所にインストールされます。<<s-build-"
"prepare-checkout,configureの段階>>で、他の `--with` オプションを選択した場"
"合、DRBDと他のアプリケーションとを統合するためのスクリプトもインストールされ"
"ます。"

#. type: Title ====
#, no-wrap
msgid "Compiling DRBD as a kernel module"
msgstr "カーネルモジュールとしてDRBDをコンパイルする"

#. type: Plain text
msgid ""
"Building the DRBD kernel module requires that you <<s-build-prepare-checkout,"
"configured DRBD with the `--with-km` option>>, which is disabled by default."
msgstr ""
"DRBDカーネルモジュールをビルドするには<<s-build-prepare-checkout,DRBDを--"
"with-kmオプションでconfigureする>>必要があります。このオプションはデフォルト"
"では無効になっています。"

#. type: Title =====
#, no-wrap
msgid "Building DRBD for the currently-running kernel"
msgstr "現在実行中のカーネル用にDRBDを構築する"

#. type: Plain text
msgid ""
"After changing into your unpacked DRBD sources directory, you should now "
"change into the kernel module subdirectory, simply named `drbd`, and build "
"the module there:"
msgstr ""
"展開されたDRBDソースがあるディレクトリに移動したら、 `drbd` という名前のカー"
"ネルモジュールサブディレクトリに移動し、ここでモジュールを構築します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd\n"
"$ make clean all\n"
msgstr ""
"$ cd drbd\n"
"$ make clean all\n"

#. type: Plain text
msgid ""
"This will build the DRBD kernel module to match your currently-running "
"kernel, whose kernel source is expected to be accessible via the `/lib/"
"modules/\\`uname -r`/build` symlink."
msgstr ""
"これで、現在実行中のカーネルと一致するDRBDカーネルモジュールが構築されます。"
"このカーネルソースには `/lib/modules/\\`uname -r`/build` シンボリックリンクで"
"アクセスできます。"

#. type: Title =====
#, no-wrap
msgid "Building against precompiled kernel headers"
msgstr "コンパイル済みカーネルヘッダに対して構築する"

#. type: Plain text
msgid ""
"If the `/lib/modules/\\`uname -r`/build` symlink does not exist, and you are "
"building against a running stock kernel (one that was shipped pre-compiled "
"with your distribution), you may also set the KDIR variable to point to the "
"_matching_ kernel headers (as opposed to kernel sources) directory. Note "
"that besides the actual kernel headers, commonly found in `/usr/src/linux-"
"version/include`, the DRBD build process also looks for the kernel Makefile "
"and configuration file (`.config`), which pre-built kernel headers packages "
"commonly include."
msgstr ""
"`/lib/modules/\\`uname -r`/build` シンボリックリンクが存在しない場合に、実行"
"中のストックカーネル(ディストリビューションに含まれるコンパイル済みカーネル)"
"に対して構築を行う場合は、(カーネルソースではなく)対応するカーネルヘッダディ"
"レクトリを指定するようにKDIR変数を設定する必要があります。DRBDビルドプロセス"
"は、通常 `/usr/src/linux-version/include` に置かれた実際のカーネルヘッダに加"
"えて、カーネルのMakefileと設定ファイル( `.config` )も探します。これらは一般に"
"構築済みカーネルヘッダパッケージに含まれています。"

#. type: Plain text
msgid "To build against precompiled kernel headers, issue, for example:"
msgstr ""
"コンパイル済みカーネルヘッダに対して構築する場合は、たとえば次のようなコマン"
"ドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd\n"
"$ make clean\n"
"$ make KDIR=/lib/modules/2.6.38/build\n"
msgstr ""
"$ cd drbd\n"
"$ make clean\n"
"$ make KDIR=/lib/modules/2.6.38/build\n"

#. type: Title =====
#, no-wrap
msgid "Building against a kernel source tree"
msgstr "カーネルソースツリーに対して構築する"

#. type: Plain text
msgid ""
"If you are building DRBD against a kernel _other_ than your currently "
"running one, and you do not have precompiled kernel sources for your target "
"kernel available, you need to build DRBD against a complete target kernel "
"source tree. To do so, set the KDIR variable to point to the kernel sources "
"directory:"
msgstr ""
"現在実行中のカーネル以外のカーネルに対してDRBDを構築する際に、ターゲットカー"
"ネルのコンパイル済みカーネルソースがない場合は、ターゲットカーネルの完全な"
"ソースツリーに対してDRBDを構築する必要があります。そのためには、KDIR変数を"
"カーネルソースディレクトリを指定するように設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd\n"
"$ make clean\n"
"$ make KDIR=/path/to/kernel/source\n"
msgstr ""
"$ cd drbd\n"
"$ make clean\n"
"$ make KDIR=/path/to/kernel/source\n"

#. type: Title =====
#, no-wrap
msgid "Using a non-default C compiler"
msgstr "デフォルト以外のCコンパイラを使用する"

#. type: Plain text
msgid ""
"You also have the option of setting the compiler explicitly via the CC "
"variable. This is known to be necessary on some Fedora versions, for example:"
msgstr ""
"CC変数を使用して、コンパイラを明示的に設定することもできます。一部のFedora"
"バージョンの場合はこの手順が必要です。たとえば、次のようになります。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ cd drbd\n"
"$ make clean\n"
"$ make CC=gcc32\n"
msgstr ""
"$ cd drbd\n"
"$ make clean\n"
"$ make CC=gcc32\n"

#. type: Title =====
#, no-wrap
msgid "Checking for successful build completion"
msgstr "構築が正常に完了したか確認する"

#. type: Plain text
msgid ""
"If the module build completes successfully, you should see a kernel module "
"file named `drbd.ko` in the `drbd` directory. You may interrogate the newly-"
"built module with `/sbin/modinfo drbd.ko` if you are so inclined."
msgstr ""
"モジュールの構築が正常に完了すると、 `drbd` ディレクトリに `drbd.ko` という"
"カーネルモジュールファイルが作成されます。必要に応じて、 `/sbin/modinfo drbd."
"ko` を実行して新しく構築したモジュールを確認できます。"

#. [[s-build-install]]
#. === Installing DRBD
#. Provided your DRBD build completed successfully, you will be able to
#. install DRBD by issuing these commands:
#. -------------------------------------
#. $ cd /usr/src/drbd-x.y.z
#. $ sudo make install
#. -------------------------------------
#. The DRBD userspace management tools (`drbdadm`, `drbdsetup`, and
#. `drbdmeta`) will now be installed in +/sbin+.
#. Note that any kernel upgrade will require you to rebuild and reinstall
#. the DRBD kernel module to match the new kernel. See <> for configure
#. options that may speed up the process.
#. The DRBD userspace tools, in contrast, need only be rebuilt
#. and reinstalled when upgrading to a new DRBD version. If at any
#. time you upgrade to a new kernel _and_ new DRBD
#. version, you will need to upgrade both components.
#. type: Title ===
#, no-wrap
msgid "Building a DRBD RPM package"
msgstr "DRBD RPMパッケージのビルド"

#. type: Plain text
msgid ""
"The DRBD build system contains a facility to build RPM packages directly out "
"of the DRBD source tree. For building RPMs, <<s-build-prereq>> applies "
"essentially in the same way as for building and installing with `make`, "
"except that you also need the RPM build tools, of course."
msgstr ""
"DRBD構築システムには、DRBDソースツリーから直接RPMパッケージを構築する機能が含"
"まれています。RPMを構築する場合にも、 `make` による構築とインストールについて"
"は<<s-build-prereq>>が適用されます。当然ながら、加えてRPM構築ツールも必要で"
"す。"

#. type: Plain text
msgid ""
"Also, see <<s-build-prepare-kernel-tree>> if you are not building against a "
"running kernel with precompiled headers available."
msgstr ""
"コンパイル済みヘッダが使用可能な場合に実行中のカーネルに対して構築を行う場合"
"以外は<<s-build-prepare-kernel-tree>>も参照してください。"

#. type: Plain text
msgid ""
"The build system offers two approaches for building RPMs. The simpler "
"approach is to simply invoke the `rpm` target in the top-level Makefile:"
msgstr ""
"構築システムでは2つの方法で `RPM` を構築することができます。最上位のMakefile"
"でrpmターゲットを呼び出す方法が簡単です。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ ./configure\n"
"$ make rpm\n"
"$ make km-rpm\n"
msgstr ""
"$ ./configure\n"
"$ make rpm\n"
"$ make km-rpm\n"

#. type: Plain text
msgid ""
"This approach will auto-generate spec files from pre-defined templates, and "
"then use those spec files to build binary RPM packages."
msgstr ""
"この方法では、定義済みのテンプレートからspecファイルが自動的に生成され、この"
"specファイルを使用してバイナリRPMパッケージを構築できます。"

#. type: Plain text
msgid "The `make rpm` approach generates a number of RPM packages:"
msgstr "`make rpm` は複数のRPMパッケージを生成します。"

#. type: Block title
#, no-wrap
msgid "DRBD userland RPM packages"
msgstr "DRBD userland RPM packages"

#. type: Table
#, no-wrap
msgid ""
"Package name;Description;Dependencies;Remarks\n"
"+drbd+;DRBD meta-package;All other `drbd-*` packages;Top-level virtual package. When installed, this pulls in all other userland packages as dependencies.\n"
"+drbd-utils+;Binary administration utilities;;Required for any DRBD enabled host\n"
"+drbd-udev+;udev integration facility;`drbd-utils`, `udev`;Enables udev to manage user-friendly symlinks to DRBD devices\n"
"+drbd-xen+;Xen DRBD helper scripts;`drbd-utils`, `xen`;Enables xend to auto-manage DRBD resources\n"
"+drbd-heartbeat+;DRBD Heartbeat integration scripts;`drbd-utils`, `heartbeat`;Enables DRBD management by legacy v1-style Heartbeat clusters\n"
"+drbd-pacemaker+;DRBD Pacemaker integration scripts;`drbd-utils`, `pacemaker`;Enables DRBD management by Pacemaker clusters\n"
"+drbd-rgmanager+;DRBD Red Hat Cluster Suite integration scripts;`drbd-utils`, `rgmanager`;Enables DRBD management by rgmanager, the Red Hat Cluster Suite resource manager\n"
"+drbd-bashcompletion+;Programmable bash completion;`drbd-utils`,\t`bash-completion`;Enables Programmable bash completion for the `drbdadm` utility\n"
msgstr ""
"Package name;Description;Dependencies;Remarks\n"
"`drbd` ;DRBDメタパッケージ;他の全ての `drbd-*` パッケージ;トップレベルの仮想パッケージこのパッケージをインストールすると、依存関係にある他のすべてのユーザ空間パッケージが一緒にインストールされます。\n"
"`drbd-utils` ;管理者ユーティリティ;;DRBDを実行するホストに必要なパッケージです。\n"
"`drbd-udev` ;udev統合機能; `drbd-utils,udev` ;DRBDデバイスに対するシンボリックの管理をしやすくします。\n"
"`drbd-xen` ;Xen DRBDヘルパースクリプト; `drbd-utils,xen` ;xendがDRBDリソースを自動管理できるようにします。\n"
"`drbd-heartbeat` ;DRBD Heartbeat統合スクリプト; `drbd-utils,heartbeat` ;旧v1形式HeartbeatクラスタがDRBDを管理できるようにします。\n"
"`drbd-pacemaker` ;DRBD Pacemaker統合スクリプト;`drbd-utils,pacemaker`;PacemakerクラスタがDRBDを管理できるようにします。\n"
"`drbd-rgmanager` ;DRBD Red Hat Cluster Suite統合スクリプト; `drbd-utils,rgmanager` ;Red Hat Cluster Suiteリソース管理システムのrgmanageがDRBDを管理できるようにします。\n"
"`drbd-bashcompletion` ;Progammable bash completion; `drbd-utils` , `bash-completion` ; `drbdadm` ユーティリティで自動補完が使えるようにするためのものです。\n"

#. type: Plain text
msgid ""
"The other, more flexible approach is to have `configure` generate the spec "
"file, make any changes you deem necessary, and then use the `rpmbuild` "
"command:"
msgstr ""
"その他、より自由度の高い方法として `configure` を使ってspecファイルを作成"
"し、 `rpmbuild` コマンドを実行する方法もあります。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ ./configure --enable-spec\n"
"$ make tgz\n"
"$ cp drbd*.tar.gz `rpm -E %sourcedir`\n"
"$ rpmbuild -bb drbd.spec\n"
msgstr ""
"$ ./configure --enable-spec\n"
"$ make tgz\n"
"$ cp drbd*.tar.gz `rpm -E %sourcedir`\n"
"$ rpmbuild -bb drbd.spec\n"

#. type: Plain text
msgid ""
"If you are about to build RPMs for both the DRBD userspace utilities and the "
"kernel module, use:"
msgstr ""
"両方のDRBDユーザ空間ユーティリティとカーネルモジュールをビルドする場合には、"
"次のコマンドを使います。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ ./configure --enable-spec --with-km\n"
"$ make tgz\n"
"$ cp drbd*.tar.gz `rpm -E %sourcedir`\n"
"$ rpmbuild -bb drbd.spec\n"
"$ rpmbuild -bb drbd-kernel.spec\n"
msgstr ""
"$ ./configure --enable-spec --with-km\n"
"$ make tgz\n"
"$ cp drbd*.tar.gz `rpm -E %sourcedir`\n"
"$ rpmbuild -bb drbd.spec\n"
"$ rpmbuild -bb drbd-kernel.spec\n"

#. type: Plain text
msgid ""
"The RPMs will be created wherever your system RPM configuration (or your "
"personal `~/.rpmmacros` configuration) dictates."
msgstr ""
"システムのRPM設定(または独自の `~/.rpmmacros` 設定)が指定する場所にRPMが作成"
"されます。"

#. type: Plain text
msgid ""
"After you have created these packages, you can install, upgrade, and "
"uninstall them as you would any other RPM package in your system."
msgstr ""
"これらのパッケージを作成したら、システムの他のRPMパッケージと同様にインストー"
"ル、アップグレード、アンインストールを行うことができます。"

#. type: Plain text
msgid ""
"Note that any kernel upgrade will require you to generate a new `drbd-km` "
"package to match the new kernel."
msgstr ""
"カーネルをアップグレードした場合は、新しいカーネルに合わせて新しい `drbd-km` "
"パッケージを生成する必要があります。"

#. type: Plain text
msgid ""
"The DRBD userland packages, in contrast, need only be recreated when "
"upgrading to a new DRBD version. If at any time you upgrade to a new kernel "
"_and_ new DRBD version, you will need to upgrade both packages."
msgstr ""
"一方、DRBDユーザ空間パッケージの場合は、新規バージョンのDRBDにアップグレード"
"したときにのみ再作成が必要です。新規カーネルおよび新規バージョンのDRBDにアッ"
"プグレードした場合は、両方のパッケージをアップグレードする必要があります。"

#. type: Title ===
#, no-wrap
msgid "Building a DRBD Debian package"
msgstr "DRBD Debianパッケージの構築"

#. type: Plain text
msgid ""
"The DRBD build system contains a facility to build Debian packages directly "
"out of the DRBD source tree. For building Debian packages, <<s-build-"
"prereq>> applies essentially in the same way as for building and installing "
"with `make`, except that you of course also need the `dpkg-dev` package "
"containing the Debian packaging tools, and `fakeroot` if you want to build "
"DRBD as a non-root user (highly recommended)."
msgstr ""
"DRBD構築システムには、DRBDソースツリーから直接Debianパッケージを構築する機能"
"が含まれています。Debianパッケージを構築する場合にも、 `make` による構築とイ"
"ンストールについては<<s-build-prereq>>の条件が実質的に適用されます。加えて、"
"Debianパッケージツールを含む `dpkg-dev` パッケージも必要です。さらに、 "
"`root` 以外のユーザとしてDRBDを構築する場合には、 `fakeroot` も必要です(この"
"方法を強く推奨)。"

#. type: Plain text
msgid ""
"The DRBD source tree includes a `debian` subdirectory containing the "
"required files for Debian packaging.  That subdirectory, however, is not "
"included in the DRBD source tarballs -- instead, you will need to <<s-"
"checking-out-git,create a Git checkout>> of a _tag_ associated with a "
"specific DRBD release."
msgstr ""
"DRBDソースツリーには、 `debian` パッケージ作成に必要なファイルを含むdebianサ"
"ブディレクトリがあります。ただし、このサブディレクトリはDRBDのソースtarファイ"
"ルには含まれていません。代わりに、特定のDRBDリリースに関連付けられたタグの"
"<<s-checking-out-git,Gitチェックアウトを作成する>>必要があります。"

#. type: Plain text
msgid ""
"Once you have created your checkout in this fashion, you can issue the "
"following commands to build DRBD Debian packages:"
msgstr ""
"このようなチェックアウトを作成したら、次のコマンドを実行してDRBD Debianパッ"
"ケージを構築します。"

#. type: delimited block -
#, no-wrap
msgid "$ dpkg-buildpackage -rfakeroot -b -uc\n"
msgstr "$ dpkg-buildpackage -rfakeroot -b -uc\n"

#. type: Plain text
msgid ""
"This (example) `drbd-buildpackage` invocation enables a binary-only build (`-"
"b`) by a non-root user (`-rfakeroot`), disabling cryptographic signature for "
"the changes file (`-uc`). Of course, you may prefer other build options, see "
"the `dpkg-buildpackage` man page for details."
msgstr ""
"この例では、 `drbd-buildpackage` を呼び出して、バイナリのみの構築を有効にし"
"( `-b` )、ユーザを `root` 以外とし( `-rfakeroot` )、さらに変更ファイルの暗号"
"化シグネチャを無効にします( `-uc` )。もちろん、他の構築オプションを指定するこ"
"ともできます。詳細は、 `dpkg-buildpackage` のmanページを参照してください。"

#. type: Plain text
msgid "This build process will create two Debian packages:"
msgstr "この構築プロセスにより、次の2つのDebianパッケージが作成されます。"

#. type: Plain text
msgid ""
"A package containing the DRBD userspace tools, named `drbd8-utils_x.y.z-"
"BUILD_ARCH.deb`;"
msgstr "DRBDユーザ空間を含むパッケージ `drbd8-utils_x.y.z-BUILD_ARCH.deb` ;"

#. type: Plain text
msgid ""
"A module source package suitable for `module-assistant` named `drbd8-module-"
"source_x.y.z-BUILD_all.deb`."
msgstr ""
"`module-assistant` に対応したモジュールソースパッケージ( `drbd8-module-"
"source_x.y.z-BUILD_all.deb` )"

#. type: Plain text
msgid ""
"After you have created these packages, you can install, upgrade, and "
"uninstall them as you would any other Debian package in your system."
msgstr ""
"これらのパッケージを作成したら、システムの他のDebianパッケージと同様にインス"
"トール、アップグレード、アンインストールを行うことができます。"

#. type: Plain text
msgid ""
"Building and installing the actual kernel module from the installed module "
"source package is easily accomplished via Debian's `module-assistant` "
"facility:"
msgstr ""
"Debianの `module-assistant` 機能を使用すれば、インストールしたモジュールソー"
"スパッケージから実際のカーネルモジュールを簡単に構築してインストールできま"
"す。"

#. type: delimited block -
#, no-wrap
msgid "# module-assistant auto-install drbd8\n"
msgstr "# module-assistant auto-install drbd8\n"

#. type: Plain text
msgid "You may also use the shorthand form of the above command:"
msgstr "上記のコマンドの短縮形も使用できます。"

#. type: delimited block -
#, no-wrap
msgid "# m-a a-i drbd8\n"
msgstr "# m-a a-i drbd8\n"

#. type: Plain text
msgid ""
"Note that any kernel upgrade will require you to rebuild the kernel module "
"(with `module-assistant`, as just described) to match the new kernel. The "
"`drbd8-utils` and `drbd8-module-source` packages, in contrast, only need to "
"be recreated when upgrading to a new DRBD version.  If at any time you "
"upgrade to a new kernel _and_ new DRBD version, you will need to upgrade "
"both packages."
msgstr ""
"カーネルをアップグレードした場合は、新しいカーネルに合わせてカーネルモジュー"
"ルを再構築する必要があります(上述の `module-assistant` 機能を使用)。一方、 "
"`drbd8-utils` と `drbd8-module-source` パッケージの場合は新規バージョンのDRBD"
"にアップグレードしたときにのみ再作成が必要です。新規カーネルおよび新規バー"
"ジョンのDRBDにアップグレードした場合は、両方のパッケージをアップグレードする"
"必要があります。"
